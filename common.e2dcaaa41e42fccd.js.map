{"version":3,"file":"common.e2dcaaa41e42fccd.js","mappings":";;;;;;;;;;;;;;;;;AAE2C;AAC4C;;;AAKhF,MAAM,cAAc;IAGzB,YAA6B,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;QAF7B,cAAS,GAAqB,IAAI,yCAAO,EAAE,CAAC;IAEZ,CAAC;IAE3C,OAAO,CAAC,OAAe;QAC5B,IAAI,CAAC,MAAM;aACR,IAAI,CAAC,iGAAgB,EAAE;YACtB,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,OAAO;SAChB,CAAC;aACD,WAAW,EAAE;aACb,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;YAC9B,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC3B;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC5B;QACH,CAAC,CAAC,CAAC;QACL,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;;4EArBU,cAAc;+GAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;ACNyB;AAI7C,MAAM,aAAa,GAAG,CAAC,KAAe,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC;AAEnD,MAAM,gBAAgB,GAAG,2DAAc,CAC5C,aAAa,EACb,CAAC,KAAqB,EAAE,EAAE,CAAC,KAAK,CAAC,UAAU,CAC5C,CAAC;AAEK,MAAM,mBAAmB,GAAG,2DAAc,CAC/C,aAAa,EACb,CAAC,KAAqB,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CACvC,CAAC;AAEK,MAAM,uBAAuB,GAAG,2DAAc,CACnD,aAAa,EACb,CAAC,KAAqB,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAC3C,CAAC;;;;;;;;;;;;;;;;;ACnB2C;AAI7C,MAAM,aAAa,GAAG,CAAC,KAAe,EAAE,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC;AAElD,MAAM,cAAc,GAAG,2DAAc,CAC1C,aAAa,EACb,CAAC,KAAoB,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CACzC,CAAC;AAEK,MAAM,sBAAsB,GAAG,2DAAc,CAClD,aAAa,EACb,CAAC,KAAoB,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAC1C,CAAC;;;;;;;;;;;;;;;;;;ACd8D;AACc;AAGvE,MAAM,eAAe,GAAkB;IAC5C;QACE,IAAI,EAAE,+EAAY;QAClB,IAAI,EAAE,eAAe;QACrB,MAAM,EAAE,+FAAuB;KAChC;IACD;QACE,IAAI,EAAE,4FAAyB;QAC/B,IAAI,EAAE,gBAAgB;QACtB,MAAM,EAAE,4FAAoB;KAC7B;IACD;QACE,IAAI,EAAE,iFAAc;QACpB,IAAI,EAAE,iBAAiB;QACvB,MAAM,EAAE,+FAAuB;KAChC;CACF,CAAC;AAEK,MAAM,eAAe,GAAkB;IAC5C;QACE,IAAI,EAAE,kFAAe;QACrB,IAAI,EAAE,cAAc;QACpB,MAAM,EAAE,6FAAqB;KAC9B;IACD;QACE,IAAI,EAAE,4FAAyB;QAC/B,IAAI,EAAE,aAAa;QACnB,MAAM,EAAE,+FAAuB;KAChC;IACD;QACE,IAAI,EAAE,iFAAc;QACpB,IAAI,EAAE,aAAa;QACnB,MAAM,EAAE,+FAAuB;KAChC;CACF,CAAC;;;;;;;;;;;;;;;;;;ACtCK,MAAM,cAAc,GAAG,CAAC,MAAc,EAAE,EAAE,CAAC,+BAAgC,MAAO,QAAQ,CAAC;AAC3F,MAAM,mBAAmB,GAAG,4DAA4D,CAAC;AACzF,MAAM,kBAAkB,GAAG,kCAAkC,CAAC;AAC9D,MAAM,mBAAmB,GAAG,0DAA0D,CAAC","sources":["./src/app/core/services/confirm.service.ts","./src/app/core/store/selectors/category.selectors.ts","./src/app/core/store/selectors/product.selectors.ts","./src/app/features/admin/constants/more-options.constant.ts","./src/app/shared/constants/messages.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subject, Observable } from 'rxjs';\nimport { ConfirmComponent } from 'src/app/shared/components/confirm/confirm.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmService {\n  private readonly isAllowed: Subject<boolean> = new Subject();\n\n  constructor(private readonly dialog: MatDialog) {}\n\n  public confirm(message: string): Observable<boolean> {\n    this.dialog\n      .open(ConfirmComponent, {\n        data: message,\n        width: 'auto',\n        height: '180px',\n      })\n      .afterClosed()\n      .subscribe((confirm: boolean) => {\n        if (confirm) {\n          this.isAllowed.next(true);\n        } else {\n          this.isAllowed.next(false);\n        }\n      });\n    return this.isAllowed;\n  }\n}\n","import { createSelector } from '@ngrx/store';\nimport { AppState } from '../state/app.state';\nimport { ICategoryState } from '../state/category.state';\n\nconst selectFeature = (state: AppState) => state.category;\n\nexport const selectCategories = createSelector(\n  selectFeature,\n  (state: ICategoryState) => state.categories\n);\n\nexport const selectCategoryError = createSelector(\n  selectFeature,\n  (state: ICategoryState) => state.error\n);\n\nexport const selectCategoryIsLoading = createSelector(\n  selectFeature,\n  (state: ICategoryState) => state.isLoading\n);\n","import { createSelector } from \"@ngrx/store\";\nimport { AppState } from \"../state/app.state\";\nimport { IProductState } from \"../state/product.state\";\n\nconst selectFeature = (state: AppState) => state.product;\n\nexport const selectProducts = createSelector(\n  selectFeature,\n  (state: IProductState) => state.products\n);\n\nexport const selectProductIsLoading = createSelector(\n  selectFeature,\n  (state: IProductState) => state.isLoading\n);\n","import { MatIcon } from \"src/app/core/enums/material-icon.enum\";\nimport { MoreOptionAction } from \"src/app/core/enums/more-option-action.enum\";\nimport { MoreOptions } from \"src/app/core/models/more-options.model\";\n\nexport const CategoryOptions: MoreOptions[] = [\n  {\n    icon: MatIcon.EDIT,\n    text: 'Edit Category',\n    action: MoreOptionAction.Update\n  },\n  {\n    icon: MatIcon.ADD_SHOPPING_CART,\n    text: 'Add product to',\n    action: MoreOptionAction.Add\n  },\n  {\n    icon: MatIcon.DELETE,\n    text: 'Delete Category',\n    action: MoreOptionAction.Delete\n  },\n];\n\nexport const UserGridOptions: MoreOptions[] = [\n  {\n    icon: MatIcon.PROFILE,\n    text: 'User Profile',\n    action: MoreOptionAction.Open,\n  },\n  {\n    icon: MatIcon.ADD_SHOPPING_CART,\n    text: 'User orders',\n    action: MoreOptionAction.ShowUp,\n  },\n  {\n    icon: MatIcon.DELETE,\n    text: 'Delete User',\n    action: MoreOptionAction.Delete,\n  },\n];\n","export const TOO_MANY_FILES = (amount: number) => `You can upload a maximum of ${ amount } files`;\nexport const CANCEL_CONFIRM_TEXT = 'Are you sure you want to cancel? All data will be deleted.';\nexport const DELETE_RECORD_TEXT = 'Are you sure you want to delete?';\nexport const DELETE_CONFIRM_TEXT = 'Are you sure you want to leave this page without saving?';\n\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}