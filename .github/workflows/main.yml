name: CI/CD ClienAppUa

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events
  push:
    branches: [master]
  pull_request:
    branches: [master]

env: 
# Sets environment variable
  FIREBASE_API_KEY: ${{secrets.FIREBASE_API_KEY}}
  FIREBASE_APP_ID: ${{secrets.FIREBASE_APP_ID}}
  FIREBASE_AUTH_DOMAIN: ${{secrets.FIREBASE_AUTH_DOMAIN}}
  FIREBASE_MESSAGING_SENDER_ID: ${{secrets.FIREBASE_MESSAGING_SENDER_ID}}
  FIREBASE_PROTECTED_ID: ${{secrets.FIREBASE_PROTECTED_ID}}
  FIREBASE_STORAGE_BUCKET: ${{secrets.FIREBASE_STORAGE_BUCKET}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
  # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
  #Steps
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          npm ci

      #- name: Install
      #  run: |
      #   npm install
      #    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      #    sudo apt-get install ./google-chrome-stable_current_amd64.deb -y
      - name: CSS Linter
        run: npm run stylelint

      - name: Build
        run: npm run build:prod

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: dist/web-store
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


