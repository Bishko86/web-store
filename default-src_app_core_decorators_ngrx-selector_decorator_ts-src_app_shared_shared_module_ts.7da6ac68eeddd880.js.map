{"version":3,"file":"default-src_app_core_decorators_ngrx-selector_decorator_ts-src_app_shared_shared_module_ts.7da6ac68eeddd880.js","mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMyiB,mBAAmB,GAAG,IAAIziB,yDAAJ,CAAmB,mBAAnB,CAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAM0iB,YAAY,GAAG,oMAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAN,CAAiB;AACb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACc,SAAHC,GAAG,CAACA,GAAD,EAAM;AACZ,WAAOC,YAAY,CAACD,GAAD,CAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACc,SAAHhkB,GAAG,CAACA,GAAD,EAAM;AACZ,WAAOkkB,YAAY,CAAClkB,GAAD,CAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACmB,SAARvF,QAAQ,CAAC0pB,OAAD,EAAU;AACrB,WAAOC,iBAAiB,CAACD,OAAD,CAAxB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACuB,SAAZE,YAAY,CAACF,OAAD,EAAU;AACzB,WAAOG,qBAAqB,CAACH,OAAD,CAA5B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACgB,SAALI,KAAK,CAACJ,OAAD,EAAU;AAClB,WAAOK,cAAc,CAACL,OAAD,CAArB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACoB,SAATM,SAAS,CAACA,SAAD,EAAY;AACxB,WAAOC,kBAAkB,CAACD,SAAD,CAAzB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACoB,SAATE,SAAS,CAACA,SAAD,EAAY;AACxB,WAAOC,kBAAkB,CAACD,SAAD,CAAzB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACkB,SAAPE,OAAO,CAACA,OAAD,EAAU;AACpB,WAAOC,gBAAgB,CAACD,OAAD,CAAvB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACwB,SAAbE,aAAa,CAACZ,OAAD,EAAU;AAC1B,WAAOY,aAAa,CAACZ,OAAD,CAApB;AACH;;AACa,SAAPa,OAAO,CAACC,UAAD,EAAa;AACvB,WAAOD,OAAO,CAACC,UAAD,CAAd;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACuB,SAAZC,YAAY,CAACD,UAAD,EAAa;AAC5B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AAKusB,mBAAL,GAA2B,EAA3B;AACH;AACD;AACJ;AACA;AACA;;;AACInJ,EAAAA,KAAK,CAACnpB,KAAK,GAAGC,SAAT,EAAoB;AACrB,QAAI,KAAK4uB,OAAT,EACI,KAAKA,OAAL,CAAa1F,KAAb,CAAmBnpB,KAAnB;AACP;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIyzB,EAAAA,QAAQ,CAACC,SAAD,EAAYT,IAAZ,EAAkB;AACtB,WAAO,KAAKpE,OAAL,GAAe,KAAKA,OAAL,CAAa4E,QAAb,CAAsBC,SAAtB,EAAiCT,IAAjC,CAAf,GAAwD,KAA/D;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIU,EAAAA,QAAQ,CAACD,SAAD,EAAYT,IAAZ,EAAkB;AACtB,WAAO,KAAKpE,OAAL,GAAe,KAAKA,OAAL,CAAa8E,QAAb,CAAsBD,SAAtB,EAAiCT,IAAjC,CAAf,GAAwD,IAA/D;AACH;;AApQ0B;AAuQ/B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMW,gBAAN,SAA+BvB,wBAA/B,CAAwD;AACpD;AACJ;AACA;AACA;AACqB,MAAbwB,aAAa,GAAG;AAChB,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACY,MAAJZ,IAAI,GAAG;AACP,WAAO,IAAP;AACH;;AAdmD;AAiBxD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMvqB,SAAN,SAAwB2pB,wBAAxB,CAAiD;AAC7CpvB,EAAAA,WAAW,GAAG;AACV,UAAM,GAAG6wB,SAAT;AACA;AACR;AACA;AACA;AACA;AACA;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KkC,mBAAlB,CAArC;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIO,EAAAA,gBAAgB,CAACzC,UAAD,EAAa;AACzB,SAAKoI,aAAL,CAAmB3F,gBAAgB,CAACzC,UAAD,EAAa,KAAKgC,cAAlB,CAAnC;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIuG,EAAAA,qBAAqB,CAACvI,UAAD,EAAa;AAC9B,SAAKqI,kBAAL,CAAwB5F,gBAAgB,CAACzC,UAAD,EAAa,KAAKkC,mBAAlB,CAAxC;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,YAAY,CAACjB,SAAD,EAAY;AACpB,WAAOiB,YAAY,CAAC,KAAKJ,cAAN,EAAsBb,SAAtB,CAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIqH,EAAAA,iBAAiB,CAACrH,SAAD,EAAY;AACzB,WAAOiB,YAAY,CAAC,KAAKF,mBAAN,EAA2Bf,SAA3B,CAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIsH,EAAAA,eAAe,GAAG;AACd,SAAKtH,SAAL,GAAiB,IAAjB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIuH,EAAAA,oBAAoB,GAAG;AACnB,SAAK/E,cAAL,GAAsB,IAAtB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIgF,EAAAA,aAAa,CAACC,IAAI,GAAG,EAAR,EAAY;AACrB,SAAK3F,OAAL,GAAe,IAAf;;AACA,QAAI,KAAKmB,OAAL,IAAgB,CAACwE,IAAI,CAACC,QAA1B,EAAoC;AAChC,WAAKzE,OA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P;AAkBlB,GArBxB,EAqB0C;AAAEjmB,IAAAA,IAAI,EAAE,CAAC;AACnC7E,MAAAA,IAAI,EAAE3B,gDAD6B;AAEnC7C,MAAAA,IAAI,EAAE,CAAC,cAAD;AAF6B,KAAD;AAAR,GArB1C;AAAA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMujC,oBAAoB,GAAG;AACzBz5B,EAAAA,OAAO,EAAEL,SADgB;AAEzBM,EAAAA,WAAW,EAAEzH,yDAAU,CAAC,MAAMkhC,OAAP;AAFE,CAA7B;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,eAAe,GAAG,CAAC,MAAMnyB,OAAO,CAACC,OAAR,EAAP,GAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMiyB,OAAN,SAAsB/5B,SAAtB,CAAgC;AAC5BzF,EAAAA,WAAW,CAAC8zB,MAAD,EAASpH,UAAT,EAAqBiH,eAArB,EAAsC0I,cAAtC,EAAsD1lB,kBAAtD,EAA0E;AACjF;AACA,SAAKA,kBAAL,GAA0BA,kBAA1B;AACA,SAAKiV,OAAL,GAAe,IAAI2S,WAAJ,EAAf;AACA;;AACA,SAAKmB,WAAL,GAAmB,KAAnB;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKC,MAAL,GAAc,IAAIz2B,uDAAJ,EAAd;AACA,SAAK4nB,O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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMO,SAAN,SAAwBvT,eAAxB,CAAwC;AACpC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIp0B,EAAAA,WAAW,CAACg0B,QAAD,EAAWT,eAAX,EAA4BlD,cAA5B,EAA4C;AACnD,UAAMiD,cAAc,CAACC,eAAD,CAApB,EAAuCG,mBAAmB,CAACrD,cAAD,EAAiBkD,eAAjB,CAA1D;AACA,SAAKS,QAAL,GAAgBA,QAAhB;;AACA,SAAKwD,gBAAL;;AACA,SAAKM,kBAAL,CAAwBvE,eAAxB;;AACA,SAAK0E,cAAL;;AACA,SAAK1B,sBAAL,CAA4B;AACxBhB,MAAAA,QAAQ,EAAE,IADc;AAExB;AACA;AACA;AACA;AACAQ,MAAAA,SAAS,EAAE,CAAC,CAAC,KAAK1F;AANM,KAA5B;AAQH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIuX,EAAAA,EAAE,CAAC1pC,KAAD,EAAQ;AACN,WAAO,KAAK81B,QAAL,CAAc,KAAK6T,YAAL,CAAkB3pC,KAAlB,CAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI2G,EAAAA,IAAI,CAAC+mB,OAAD,EAAUzoB,OAAO,GAAG,EAApB,EAAwB;AACxB,SAAK6wB,QAAL,CAAcnvB,IAAd,CAAmB+mB,OAAnB;;AACA,SAAKkc,gBAAL,CAAsBlc,OAAtB;;AACA,SAAK2K,sBAAL,CAA4B;AAAER,MAAAA,SAAS,EAAE5yB,OAAO,CAAC4yB;AAArB,KAA5B;;AACA,SAAKvB,mBAAL;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIuT,EAAAA,MAAM,CAAC7pC,KAAD,EAAQ0tB,OAAR,EAAiBzoB,OAAO,GAAG,EAA3B,EAA+B;AACjC,SAAK6wB,QAAL,CAAc4I,MAAd,CAAqB1+B,KAArB,EAA4B,CAA5B,EAA+B0tB,OAA/B;;AACA,SAAKkc,gBAAL,CAAsBlc,OAAtB;;AACA,SAAK2K,sBAAL,CAA4B;AAAER,MAAAA,SAAS,EAAE5yB,OAAO,CAAC4yB;AAArB,KAA5B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIiS,EAAAA,QAAQ,CAAC9pC,KAAD,EAAQiF,OAAO,GAAG,EAAlB,EAAsB;AAC1B;AACA,QAAI8kC,aAAa,GAAG,KAAKJ,YAAL,CAAkB3pC,KAAlB,CAApB;;AACA,QAAI+pC,aAAa,GAAG,CAApB,EACIA,aAAa,GAAG,CAAhB;AACJ,QAAI,KAAKjU,QAAL,CAAciU,aAAd,CAAJ,EACI,KAAKjU,QAAL,CAAciU,aAAd,EAA6BpQ,2BAA7B,CAAyD,MAAM,CAAG,CAAlE;AACJ,SAAK7D,QAAL,CAAc4I,MAAd,CAAqBqL,aAArB,EAAoC,CAApC;AACA,SAAK1R,sBAAL,CAA4B;AAAER,MAAAA,SAAS,EAAE5yB,OAAO,CAAC4yB;AAArB,KAA5B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIsC,EAAAA,UAAU,CAACn6B,KAAD,EAAQ0tB,OAAR,EAAiBzoB,OAAO,GAAG,EAA3B,EAA+B;AACrC;AACA,QAAI8kC,aAAa,GAAG,KAAKJ,YAAL,CAAkB3pC,KAAlB,CAApB;;AACA,QAAI+pC,aAAa,GAAG,CAApB,EACIA,aAAa,GAAG,CAAhB;AACJ,QAAI,KAAKjU,QAAL,CAAciU,aAAd,CAAJ,EACI,KAAKjU,QAAL,CAAciU,aAAd,EAA6BpQ,2BAA7B,CAAyD,MAAM,CAAG,CAAlE;AACJ,SAAK7D,QAAL,CAAc4I,MAAd,CAAqBqL,aAArB,EAAoC,CAApC;;AACA,QAAIrc,OAAJ,EAAa;AACT,WAAKoI,QAAL,CAAc4I,MAAd,CAAqBqL,aAArB,EAAoC,CAApC,EAAuCrc,OAAvC;;AACA,WAAKkc,gBAAL,CAAsBlc,OAAtB;AACH;;AACD,SAAK2K,sBAAL,CAA4B;AAAER,MAAAA,SAAS,EAAE5yB,OAAO,CAAC4yB;AAArB,KAA5B;;AACA,SAAKvB,mBAAL;AACH;AACD;AACJ;AACA;;;AACc,MAANl4B,MAAM,GAAG;AACT,WAAO,KAAK03B,QAAL,CAAc13B,MAArB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIk8B,EAAAA,QAAQ,CAACz7B,KAAD,EAAQoG,OAAO,GAAG,EAAlB,EAAsB;AAC1B+wB,IAAAA,sBAAsB,CAAC,IAAD,EAAO,KAAP,EAAcn3B,KAAd,CAAtB;AACAA,IAAAA,KAAK,CAAC6d,OAAN,CAAc,CAACggB,QAAD,EAAW18B,KAAX,KAAqB;AAC/B21B,MAAAA,oBAAoB,CAAC,IAAD,EAAO,KAAP,EAAc31B,KAAd,CAApB;AACA,WAAK0pC,EAAL,CAAQ1pC,KAAR,EAAes6B,QAAf,CAAwBoC,QAAxB,EAAkC;AAAErF,QAAAA,QAAQ,EAAE,IAAZ;AAAkBQ,QAAAA,SAAS,EAAE5yB,OAAO,CAAC4yB;AAArC,OAAlC;AACH,KAHD;AAIA,SAAKQ,sBAAL,CAA4BpzB,OAA5B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIs1B,EAAAA,UAAU,CAAC17B,KAAD,EAAQoG,OAAO,GAAG,EAAlB,EAAsB;AAC5B;AACA;AACA;AACA;AACA,QAAIpG,KAAK,IAAI;AAAK;AAAlB,MACI;AACJA,IAAAA,KAAK,CAAC6d,OAAN,CAAc,CAACggB,QAAD,EAAW18B,KAAX,KAAqB;AAC/B,UAAI,KAAK0pC,EAAL,CAAQ1pC,KAAR,CAAJ,EAAoB;AAChB,aAAK0pC,EAAL,CAAQ1pC,KAAR,EAAeu6B,UAAf,CAA0BmC,QAA1B,EAAoC;AAAErF,UAAAA,QAAQ,EAAE,IAAZ;AAAkBQ,UAAAA,SAAS,EAAE5yB,OAAO,CAAC4yB;AAArC,SAApC;AACH;AACJ,KAJD;AAKA,SAAKQ,sBAAL,CAA4BpzB,OAA5B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI+iB,EAAAA,KAAK,CAACnpB,KAAK,GAAG,EAAT,EAAaoG,OAAO,GAAG,EAAvB,EAA2B;AAC5B,SAAKgxB,aAAL,CAAmB,CAACvI,OAAD,EAAU1tB,KAAV,KAAoB;AACnC0tB,MAAAA,OAAO,CAAC1F,KAAR,CAAcnpB,KAAK,CAACmB,KAAD,CAAnB,EAA4B;AAAEq3B,QAAAA,QAAQ,EAAE,IAAZ;AAAkBQ,QAAAA,SAAS,EAAE5yB,OAAO,CAAC4yB;AAArC,OAA5B;AACH,KAFD;;AAGA,SAAKF,eAAL,CAAqB1yB,OAArB;;AACA,SAAKuyB,cAAL,CAAoBvyB,OAApB;;AACA,SAAKozB,sBAAL,CAA4BpzB,OAA5B;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIszB,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKzC,QAAL,CAAc7uB,GAAd,CAAmBymB,OAAD,IAAaA,OAAO,CAAC6K,WAAR,EAA/B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI3b,EAAAA,KAAK,CAAC3X,OAAO,GAAG,EAAX,EAAe;AAChB,QAAI,KAAK6wB,QAAL,CAAc13B,MAAd,GAAuB,CAA3B,EACI;;AACJ,SAAK63B,aAAL,CAAoBvI,OAAD,IAAaA,OAAO,CAACiM,2BAAR,CAAoC,MAAM,CAAG,CAA7C,CAAhC;;AACA,SAAK7D,QAAL,CAAc4I,MAAd,CAAqB,CAArB;AACA,SAAKrG,sBAAL,CAA4B;AAAER,MAAAA,SAAS,EAAE5yB,OAAO,CAAC4yB;AAArB,KAA5B;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACI8R,EAAAA,YAAY,CAAC3pC,KAAD,EAAQ;AAChB,WAAOA,KAAK,GAAG,CAAR,GAAYA,KAAK,GAAG,KAAK5B,MAAzB,GAAkC4B,KAAzC;AACH;AACD;;;AACAy6B,EAAAA,oBAAoB,GAAG;AACnB,QAAIC,cAAc,GAAG,KAAK5E,QAAL,CAAc9rB,MAAd,CAAqB,CAAC2wB,OAAD,EAAUC,KAAV,KAAoB;AAC1D,aAAOA,KAAK,CAACH,oBAAN,KAA+B,IAA/B,GAAsCE,OAA7C;AACH,KAFoB,EAElB,KAFkB,CAArB;AAGA,QAAID,cAAJ,EACI,KAAKrC,sBAAL,CAA4B;AAAEhB,MAAAA,QAAQ,EAAE;AAAZ,KAA5B;AACJ,WAAOqD,cAAP;AACH;AACD;;;AACAzE,EAAAA,aAAa,CAAC4E,EAAD,EAAK;AACd,SAAK/E,QAAL,CAAcpZ,OAAd,CAAsB,CAACgR,OAAD,EAAU1tB,KAAV,KAAoB;AACtC66B,MAAAA,EAAE,CAACnN,OAAD,EAAU1tB,KAAV,CAAF;AACH,KAFD;AAGH;AACD;;;AACAi4B,EAAAA,YAAY,GAAG;AACX,SAAKp5B,KAAL,GACI,KAAKi3B,QAAL,CAAc5U,MAAd,CAAsBwM,OAAD,IAAaA,OAAO,CAAC5F,OAAR,IAAmB,KAAKjkB,QAA1D,EACKoD,GADL,CACUymB,OAAD,IAAaA,OAAO,CAAC7uB,KAD9B,CADJ;AAGH;AACD;;;AACA26B,EAAAA,YAAY,CAACuB,SAAD,EAAY;AACpB,WAAO,KAAKjF,QAAL,CAAc7iB,IAAd,CAAoBya,OAAD,IAAaA,OAAO,CAAC5F,OAAR,IAAmBiT,SAAS,CAACrN,OAAD,CAA5D,CAAP;AACH;AACD;;;AACAqM,EAAAA,cAAc,GAAG;AACb,SAAK9D,aAAL,CAAoBvI,OAAD,IAAa,KAAKkc,gBAAL,CAAsBlc,OAAtB,CAAhC;AACH;AACD;;;AACAoL,EAAAA,oBAAoB,GAAG;AACnB,SAAK,MAAMpL,OAAX,IAAsB,KAAKoI,QAA3B,EAAqC;AACjC,UAAIpI,OAAO,CAAC5F,OAAZ,EACI,OAAO,KAAP;AACP;;AACD,WAAO,KAAKgO,QAAL,CAAc13B,MAAd,GAAuB,CAAvB,IAA4B,KAAKyF,QAAxC;AACH;;AACD+lC,EAAAA,gBAAgB,CAAClc,OAAD,EAAU;AACtBA,IAAAA,OAAO,CAAC4K,SAAR,CAAkB,IAAlB;;AACA5K,IAAAA,OAAO,CAACiM,2BAAR,CAAoC,KAAKrD,mBAAzC;AACH;AACD;;;AACA8C,EAAAA,KAAK,CAACjyB,IAAD,EAAO;AACR,WAAO,KAAKuiC,EAAL,CAAQviC,IAAR,KAAiB,IAAxB;AACH;;AAvXmC;;AAyXxC,MAAM6iC,gBAAgB,GAAGP,SAAzB;;AACA,MAAMQ,WAAW,GAAIvc,OAAD,IAAaA,OAAO,YAAY+b,SAApD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASS,wBAAT,CAAkCjlC,OAAlC,EAA2C;AACvC,SAAO,CAAC,CAACA,OAAF,KACFA,OAAO,CAACwwB,eAAR,KAA4B32B,SAA5B,IACGmG,OAAO,CAACupB,UAAR,KAAuB1vB,SAD1B,IAEGmG,OAAO,CAACyxB,QAAR,KAAqB53B,SAHtB,CAAP;AAIH,EACD;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMqrC,WAAN,CAAkB;AACdroC,EAAAA,WAAW,GAAG;AACV,SAAKsoC,cAAL,GAAsB,KAAtB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACmB,MAAX5J,WAAW,GAAG;AACd,UAAM6J,IAAI,GAAG,IAAIF,WAAJ,EAAb;AACAE,IAAAA,IAAI,CAACD,cAAL,GAAsB,IAAtB;AACA,WAAOC,IAAP;AACH;;AACD7K,EAAAA,KAAK,CAAC1J,QAAD,EAAW7wB,OAAO,GAAG,IAArB,EAA2B;AAC5B,UAAMqlC,eAAe,GAAG,KAAKC,eAAL,CAAqBzU,QAArB,CAAxB;;AACA,QAAI0U,UAAU,GAAG,EAAjB;;AACA,QAAIN,wBAAwB,CAACjlC,OAAD,CAA5B,EAAuC;AACnC;AACAulC,MAAAA,UAAU,GAAGvlC,OAAb;AACH,KAHD,MAIK,IAAIA,OAAO,KAAK,IAAhB,EAAsB;AACvB;AACAulC,MAAAA,UAAU,CAAChc,UAAX,GAAwBvpB,OAAO,CAAC0qB,SAAhC;AACA6a,MAAAA,UAAU,CAAC/U,eAAX,GAA6BxwB,OAAO,CAACktB,cAArC;AACH;;AACD,WAAO,IAAI2H,SAAJ,CAAcwQ,eAAd,EAA+BE,UAA/B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIptB,EAAAA,MAAM,CAAC0Y,QAAD,EAAW7wB,OAAO,GAAG,IAArB,EAA2B;AAC7B,UAAMqlC,eAAe,GAAG,KAAKC,eAAL,CAAqBzU,QAArB,CAAxB,CAD6B,CAE7B;;;AACA,WAAO,IAAIqF,UAAJ,CAAemP,eAAf,EAAgCrlC,OAAhC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIyoB,EAAAA,OAAO,CAAC0S,SAAD,EAAY/K,eAAZ,EAA6BlD,cAA7B,EAA6C;AAChD,QAAIqY,UAAU,GAAG,EAAjB;;AACA,QAAI,CAAC,KAAKJ,cAAV,EAA0B;AACtB,aAAO,IAAI/J,WAAJ,CAAgBD,SAAhB,EAA2B/K,eAA3B,EAA4ClD,cAA5C,CAAP;AACH;;AACD,QAAI+X,wBAAwB,CAAC7U,eAAD,CAA5B,EAA+C;AAC3C;AACAmV,MAAAA,UAAU,GAAGnV,eAAb;AACH,KAHD,MAIK;AACD;AACAmV,MAAAA,UAAU,CAAChc,UAAX,GAAwB6G,eAAxB;AACAmV,MAAAA,UAAU,CAAC/U,eAAX,GAA6BtD,cAA7B;AACH;;AACD,WAAO,IAAIkO,WAAJ,CAAgBD,SAAhB,EAA2B,EAAE,GAAGoK,UAAL;AAAiBhK,MAAAA,WAAW,EAAE;AAA9B,KAA3B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIrc,EAAAA,KAAK,CAAC2R,QAAD,EAAWT,eAAX,EAA4BlD,cAA5B,EAA4C;AAC7C,UAAMsY,eAAe,GAAG3U,QAAQ,CAAC7uB,GAAT,CAAa8oB,CAAC,IAAI,KAAK2a,cAAL,CAAoB3a,CAApB,CAAlB,CAAxB,CAD6C,CAE7C;;AACA,WAAO,IAAI0Z,SAAJ,CAAcgB,eAAd,EAA+BpV,eAA/B,EAAgDlD,cAAhD,CAAP;AACH;AACD;;;AACAoY,EAAAA,eAAe,CAACzU,QAAD,EAAW;AACtB,UAAM2U,eAAe,GAAG,EAAxB;AACAhb,IAAAA,MAAM,CAACxxB,IAAP,CAAY63B,QAAZ,EAAsBpZ,OAAtB,CAA8B0d,WAAW,IAAI;AACzCqQ,MAAAA,eAAe,CAACrQ,WAAD,CAAf,GAA+B,KAAKsQ,cAAL,CAAoB5U,QAAQ,CAACsE,WAAD,CAA5B,CAA/B;AACH,KAFD;AAGA,WAAOqQ,eAAP;AACH;AACD;;;AACAC,EAAAA,cAAc,CAAC5U,QAAD,EAAW;AACrB,QAAIA,QAAQ,YAAYuK,WAAxB,EAAqC;AACjC,aAAOvK,QAAP;AACH,KAFD,MAGK,IAAIA,QAAQ,YAAYI,eAAxB,EAAyC;AAAE;AAC5C,aAAOJ,QAAP;AACH,KAFI,MAGA,IAAIv3B,KAAK,CAACyI,OAAN,CAAc8uB,QAAd,CAAJ,EAA6B;AAAE;AAChC,YAAMj3B,KAAK,GAAGi3B,QAAQ,CAAC,CAAD,CAAtB;AACA,YAAMnG,SAAS,GAAGmG,QAAQ,CAAC13B,MAAT,GAAkB,CAAlB,GAAsB03B,QAAQ,CAAC,CAAD,CAA9B,GAAoC,IAAtD;AACA,YAAM3D,cAAc,GAAG2D,QAAQ,CAAC13B,MAAT,GAAkB,CAAlB,GAAsB03B,QAAQ,CAAC,CAAD,CAA9B,GAAoC,IAA3D;AACA,aAAO,KAAKpI,OAAL,CAAa7uB,KAAb,EAAoB8wB,SAApB,EAA+BwC,cAA/B,CAAP;AACH,KALI,MAMA;AAAE;AACH,aAAO,KAAKzE,OAAL,CAAaoI,QAAb,CAAP;AACH;AACJ;;AA3Ka;;AA6KlBqU,WAAW,CAAC/nC,IAAZ;AAAA,mBAAwG+nC,WAAxG;AAAA;;AACAA,WAAW,CAAC56B,KAAZ,kBA3gO2GrP,gEA2gO3G;AAAA,SAA4GiqC,WAA5G;AAAA,WAA4GA,WAA5G;AAAA,cAAqId;AAArI;;AACA;AAAA,qDA5gO2GnpC,+DA4gO3G,CAA2FiqC,WAA3F,EAAoH,CAAC;AACzG7nC,IAAAA,IAAI,EAAEuI,qDADmG;AAEzG/M,IAAAA,IAAI,EAAE,CAAC;AAAE6oB,MAAAA,UAAU,EAAE0iB;AAAd,KAAD;AAFmG,GAAD,CAApH;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMsB,sBAAN,CAA6B;;AAE7BA,sBAAsB,CAACvoC,IAAvB;AAAA,mBAAmHuoC,sBAAnH;AAAA;;AACAA,sBAAsB,CAACp7B,KAAvB,kBA1hO2GrP,gEA0hO3G;AAAA,SAAuHyqC,sBAAvH;AAAA;AAAA,YAA4L,MAAM1f,qDAAM,CAACkf,WAAD,CAAN,CAAoB3J,WAAtN;AAAA;AAAA,cAA2J6I;AAA3J;;AACA;AAAA,qDA3hO2GnpC,+DA2hO3G,CAA2FyqC,sBAA3F,EAA+H,CAAC;AACpHroC,IAAAA,IAAI,EAAEuI,qDAD8G;AAEpH/M,IAAAA,IAAI,EAAE,CAAC;AACC6oB,MAAAA,UAAU,EAAE0iB,mBADb;AAECuB,MAAAA,UAAU,EAAE,MAAM3f,qDAAM,CAACkf,WAAD,CAAN,CAAoB3J;AAFvC,KAAD;AAF8G,GAAD,CAA/H;AAAA;AAOA;AACA;AACA;;;AACA,MAAMqK,kBAAN,SAAiCV,WAAjC,CAA6C;AACzC3K,EAAAA,KAAK,CAACsL,cAAD,EAAiB7lC,OAAO,GAAG,IAA3B,EAAiC;AAClC,WAAO,MAAMu6B,KAAN,CAAYsL,cAAZ,EAA4B7lC,OAA5B,CAAP;AACH;AACD;AACJ;AACA;;;AACIyoB,EAAAA,OAAO,CAAC0S,SAAD,EAAY/K,eAAZ,EAA6BlD,cAA7B,EAA6C;AAChD,WAAO,MAAMzE,OAAN,CAAc0S,SAAd,EAAyB/K,eAAzB,EAA0ClD,cAA1C,CAAP;AACH;AACD;AACJ;AACA;;;AACIhO,EAAAA,KAAK,CAAC2mB,cAAD,EAAiBzV,eAAjB,EAAkClD,cAAlC,EAAkD;AACnD,WAAO,MAAMhO,KAAN,CAAY2mB,cAAZ,EAA4BzV,eAA5B,EAA6ClD,cAA7C,CAAP;AACH;;AAfwC;;AAiB7C0Y,kBAAkB,CAACzoC,IAAnB;AAAA;AAAA;AAAA,kFAtjO2GlC,mEAsjO3G,CAA+G2qC,kBAA/G,SAA+GA,kBAA/G;AAAA;AAAA;;AACAA,kBAAkB,CAACt7B,KAAnB,kBAvjO2GrP,gEAujO3G;AAAA,SAAmH2qC,kBAAnH;AAAA,WAAmHA,kBAAnH;AAAA,cAAmJxB;AAAnJ;;AACA;AAAA,qDAxjO2GnpC,+DAwjO3G,CAA2F2qC,kBAA3F,EAA2H,CAAC;AAChHvoC,IAAAA,IAAI,EAAEuI,qDAD0G;AAEhH/M,IAAAA,IAAI,EAAE,CAAC;AAAE6oB,MAAAA,UAAU,EAAE0iB;AAAd,KAAD;AAF0G,GAAD,CAA3H;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA,MAAM0B,OAAO,GAAG,IAAI7f,kDAAJ,CAAY,QAAZ,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5qOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAmB2FhrB,IAAAA,qEA0nB83F;AA1nB93FA,IAAAA,4DA0nBs7F;AA1nBt7FA,IAAAA,uDA0nBs+F;AA1nBt+FA,IAAAA,0DA0nBopG;AA1nBppGA,IAAAA,4DA0nBkqG;AA1nBlqGA,IAAAA,uDA0nB+uG;AA1nB/uGA,IAAAA,0DA0nB65G;AA1nB75GA,IAAAA,mEA0nBy6G;;;;;;iBA1nBz6GA;;AAAAA,IAAAA,4DA0nBg8G;AA1nBh8GA,IAAAA,wDA0nB2hH;AA1nB3hHA,MAAAA,2DA0nB2hH;AAAA,qBA1nB3hHA,2DA0nB2hH;AAAA,aA1nB3hHA,yDA0nBijH,2BAAtB;AAAA;AA1nB3hHA,IAAAA,0DA0nB6oH;AA1nB7oHA,IAAAA,0DA0nBmsH;;;;mBA1nBnsHA;AAAAA,IAAAA,wDA0nB6kH;;;;;;AA1nB7kHA,IAAAA,qEA0nByyJ;AA1nBzyJA,IAAAA,0DA0nB61J;AA1nB71JA,IAAAA,4DA0nB+5J;AA1nB/5JA,IAAAA,oDA0nBq6J;AA1nBr6JA,IAAAA,0DA0nB67J;AA1nB77JA,IAAAA,mEA0nBg9J;;;;oBA1nBh9JA;AAAAA,IAAAA,uDA0nBq6J;AA1nBr6JA,IAAAA,+DA0nBq6J;;;;;;AA1nBr6JA,IAAAA,0DA0nB6+J;;;;;;AA1nB7+JA,IAAAA,4DA0nBmpK;AA1nBnpKA,IAAAA,oDA0nBg2K;AA1nBh2KA,IAAAA,0DA0nBs2K;;;;;;iBA1nBt2KA;;AAAAA,IAAAA,4DA0nB0gI;AA1nB1gIA,IAAAA,wDA0nBgkI;AA1nBhkIA,MAAAA,2DA0nBgkI;AAAA,sBA1nBhkIA,2DA0nBgkI;AAAA,aA1nBhkIA,yDA0nBslI,4BAAtB;AAAA;AA1nBhkIA,IAAAA,wDA0nByyJ;AA1nBzyJA,IAAAA,wDA0nB6+J;AA1nB7+JA,IAAAA,wDA0nBmpK;AA1nBnpKA,IAAAA,0DA0nBu3K;;;;mBA1nBv3KA;AAAAA,IAAAA,yDA0nBi0I;AA1nBj0IA,IAAAA,wDA0nB2nI;AA1nB3nIA,IAAAA,yDA0nBquI;AA1nBruIA,IAAAA,uDA0nBwzJ;AA1nBxzJA,IAAAA,wDA0nBwzJ;AA1nBxzJA,IAAAA,uDA0nB+gK;AA1nB/gKA,IAAAA,wDA0nB+gK;AA1nB/gKA,IAAAA,uDA0nBwxK;AA1nBxxKA,IAAAA,wDA0nBwxK;;;;;;AA1nBxxKA,IAAAA,4DA0nBk6K;AA1nBl6KA,IAAAA,0DA0nBg/K;AA1nBh/KA,IAAAA,0DA0nBsiL;;;;;;AA1nBtiLA,IAAAA,4DA0nBkoL;AA1nBloLA,IAAAA,uDA0nB0tL;AA1nB1tLA,IAAAA,0DA0nB+2L;;;;mBA1nB/2LA;AAAAA,IAAAA,uDA0nB2wL;AA1nB3wLA,IAAAA,yDA0nB2wL;;;;;;AA1nB3wLA,IAAAA,4DA0nBg+L;AA1nBh+LA,IAAAA,0DA0nB0jM;AA1nB1jMA,IAAAA,0DA0nB8mM;;;;mBA1nB9mMA;AAAAA,IAAAA,wDA0nB+/L;;;;;;AA1nB//LA,IAAAA,4DA0nBo2M;AA1nBp2MA,IAAAA,oDA0nBs6M;AA1nBt6MA,IAAAA,0DA0nBm7M;;;;oBA1nBn7MA;AAAAA,IAAAA,wDA0nB63M;AA1nB73MA,IAAAA,uDA0nBs6M;AA1nBt6MA,IAAAA,+DA0nBs6M;;;;;;AA1nBt6MA,IAAAA,4DA0nB4nM;AA1nB5nMA,IAAAA,wDA0nBo2M;AA1nBp2MA,IAAAA,0DA0nBi8M;AA1nBj8MA,IAAAA,uDA0nBygN;AA1nBzgNA,IAAAA,0DA0nBikN;AA1nBjkNA,IAAAA,0DA0nBioN;;;;mBA1nBjoNA;AAAAA,IAAAA,wDA0nBusM;AA1nBvsMA,IAAAA,uDA0nB02M;AA1nB12MA,IAAAA,wDA0nB02M;;;;;;AA5oBr8M,IAAIurC,cAAc,GAAG,CAArB;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,IAAI/gC,yDAAJ,CAAmB,UAAnB,CAAlB;AACA;;AACA,MAAMghC,QAAN,CAAe;AACX7pC,EAAAA,WAAW,CAAC8pC,QAAD,EAAWh+B,UAAX,EAAuB;AAC9B,SAAKjK,EAAL,GAAW,aAAY8nC,cAAc,EAAG,EAAxC,CAD8B,CAE9B;AACA;;AACA,QAAI,CAACG,QAAL,EAAe;AACXh+B,MAAAA,UAAU,CAACzI,aAAX,CAAyBiJ,YAAzB,CAAsC,WAAtC,EAAmD,QAAnD;AACH;AACJ;;AARU;;AAUfu9B,QAAQ,CAACvpC,IAAT;AAAA,mBAAqGupC,QAArG,EAA2FzrC,+DAA3F,CAA+H,WAA/H,GAA2FA,+DAA3F,CAAwKA,qDAAxK;AAAA;;AACAyrC,QAAQ,CAACtpC,IAAT,kBAD2FnC,+DAC3F;AAAA,QAAyFyrC,QAAzF;AAAA;AAAA,6BAAqL,MAArL;AAAA;AAAA;AAAA;AAD2FzrC,MAAAA,yDAC3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAD2FA,gEAC3F,CAA0Q,CAAC;AAAE0H,IAAAA,OAAO,EAAE8jC,SAAX;AAAsB7jC,IAAAA,WAAW,EAAE8jC;AAAnC,GAAD,CAA1Q;AAAA;;AACA;AAAA,qDAF2FzrC,+DAE3F,CAA2FyrC,QAA3F,EAAiH,CAAC;AACtGrpC,IAAAA,IAAI,EAAEnC,oDADgG;AAEtGrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,WADX;AAEC6F,MAAAA,IAAI,EAAE;AACF,iBAAS,WADP;AAEF,qBAAa,IAFX;AAGF,uBAAe;AAHb,OAFP;AAOCC,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAE8jC,SAAX;AAAsB7jC,QAAAA,WAAW,EAAE8jC;AAAnC,OAAD;AAPZ,KAAD;AAFgG,GAAD,CAAjH,EAW4B,YAAY;AAAE,WAAO,CAAC;AAAErpC,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC9DnG,QAAAA,IAAI,EAAE4I,oDADwD;AAE9DpN,QAAAA,IAAI,EAAE,CAAC,WAAD;AAFwD,OAAD;AAA/B,KAAD,EAG3B;AAAEwE,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAH2B,CAAP;AAGO,GAdjD,EAcmE;AAAEzD,IAAAA,EAAE,EAAE,CAAC;AAC1DrB,MAAAA,IAAI,EAAE3B,gDAAKA;AAD+C,KAAD;AAAN,GAdnE;AAAA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMkrC,sBAAsB,GAAG;AAC3B;AACAC,EAAAA,kBAAkB,EAAET,4DAAO,CAAC,oBAAD,EAAuB,CAC9C;AACAn4B,EAAAA,0DAAK,CAAC,OAAD,EAAU+C,0DAAK,CAAC;AAAE81B,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,SAAS,EAAE;AAAzB,GAAD,CAAf,CAFyC,EAG9CV,+DAAU,CAAC,eAAD,EAAkB,CACxBr1B,0DAAK,CAAC;AAAE81B,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,SAAS,EAAE;AAAzB,GAAD,CADmB,EAExBT,4DAAO,CAAC,wCAAD,CAFiB,CAAlB,CAHoC,CAAvB;AAFA,CAA/B;AAYA;;AACA,MAAMvqC,mBAAN,CAA0B;;AAE1BA,mBAAmB,CAACoB,IAApB;AAAA,mBAAgHpB,mBAAhH;AAAA;;AACAA,mBAAmB,CAACqB,IAApB,kBA/C2FnC,+DA+C3F;AAAA,QAAoGc;AAApG;;AACA;AAAA,qDAhD2Fd,+DAgD3F,CAA2Fc,mBAA3F,EAA4H,CAAC;AACjHsB,IAAAA,IAAI,EAAEnC,oDAASA;AADkG,GAAD,CAA5H;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,SAAS8rC,uCAAT,GAAmD;AAC/C,SAAO90B,KAAK,CAAC,8DAAD,CAAZ;AACH;AACD;;;AACA,SAAS+0B,kCAAT,CAA4CC,KAA5C,EAAmD;AAC/C,SAAOh1B,KAAK,CAAE,2CAA0Cg1B,KAAM,KAAlD,CAAZ;AACH;AACD;;;AACA,SAASC,kCAAT,GAA8C;AAC1C,SAAOj1B,KAAK,CAAC,oDAAD,CAAZ;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIk1B,cAAc,GAAG,CAArB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAG,IAAI3hC,yDAAJ,CAAmB,SAAnB,CAAlB;AACA;;;AACA,MAAM4hC,OAAN,CAAc;AACVzqC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKqqC,KAAL,GAAa,OAAb;AACA;;AACA,SAAKxoC,EAAL,GAAW,YAAW0oC,cAAc,EAAG,EAAvC;AACH;;AANS;;AAQdE,OAAO,CAACnqC,IAAR;AAAA,mBAAoGmqC,OAApG;AAAA;;AACAA,OAAO,CAAClqC,IAAR,kBAnG2FnC,+DAmG3F;AAAA,QAAwFqsC,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAnG2FrsC,MAAAA,yDAmG3F;AAnG2FA,MAAAA,yDAmG3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnG2FA,gEAmG3F,CAA2T,CAAC;AAAE0H,IAAAA,OAAO,EAAE0kC,SAAX;AAAsBzkC,IAAAA,WAAW,EAAE0kC;AAAnC,GAAD,CAA3T;AAAA;;AACA;AAAA,qDApG2FrsC,+DAoG3F,CAA2FqsC,OAA3F,EAAgH,CAAC;AACrGjqC,IAAAA,IAAI,EAAEnC,oDAD+F;AAErGrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,UADX;AAEC6F,MAAAA,IAAI,EAAE;AACF,iBAAS,UADP;AAEF,2CAAmC,iBAFjC;AAGF,qBAAa,IAHX;AAIF;AACA,wBAAgB;AALd,OAFP;AASCC,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAE0kC,SAAX;AAAsBzkC,QAAAA,WAAW,EAAE0kC;AAAnC,OAAD;AATZ,KAAD;AAF+F,GAAD,CAAhH,QAa4B;AAAEJ,IAAAA,KAAK,EAAE,CAAC;AACtB7pC,MAAAA,IAAI,EAAE3B,gDAAKA;AADW,KAAD,CAAT;AAEZgD,IAAAA,EAAE,EAAE,CAAC;AACLrB,MAAAA,IAAI,EAAE3B,gDAAKA;AADN,KAAD;AAFQ,GAb5B;AAAA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,MAAM6rC,QAAN,CAAe;;AAEfA,QAAQ,CAACpqC,IAAT;AAAA,mBAAqGoqC,QAArG;AAAA;;AACAA,QAAQ,CAACnqC,IAAT,kBAlI2FnC,+DAkI3F;AAAA,QAAyFssC,QAAzF;AAAA;AAAA;;AACA;AAAA,qDAnI2FtsC,+DAmI3F,CAA2FssC,QAA3F,EAAiH,CAAC;AACtGlqC,IAAAA,IAAI,EAAEnC,oDADgG;AAEtGrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE;AADX,KAAD;AAFgG,GAAD,CAAjH;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMkqC,cAAN,CAAqB;;AAErBA,cAAc,CAACrqC,IAAf;AAAA,mBAA2GqqC,cAA3G;AAAA;;AACAA,cAAc,CAACpqC,IAAf,kBA1J2FnC,+DA0J3F;AAAA,QAA+FusC,cAA/F;AAAA;AAAA;;AACA;AAAA,qDA3J2FvsC,+DA2J3F,CAA2FusC,cAA3F,EAAuH,CAAC;AAC5GnqC,IAAAA,IAAI,EAAEnC,oDADsG;AAE5GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE;AADX,KAAD;AAFsG,GAAD,CAAvH;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMmqC,UAAU,GAAG,IAAI/hC,yDAAJ,CAAmB,WAAnB,CAAnB;AACA;;AACA,MAAMgiC,SAAN,CAAgB;;AAEhBA,SAAS,CAACvqC,IAAV;AAAA,mBAAsGuqC,SAAtG;AAAA;;AACAA,SAAS,CAACtqC,IAAV,kBAnL2FnC,+DAmL3F;AAAA,QAA0FysC,SAA1F;AAAA;AAAA,aAnL2FzsC,gEAmL3F,CAAyI,CAAC;AAAE0H,IAAAA,OAAO,EAAE8kC,UAAX;AAAuB7kC,IAAAA,WAAW,EAAE8kC;AAApC,GAAD,CAAzI;AAAA;;AACA;AAAA,qDApL2FzsC,+DAoL3F,CAA2FysC,SAA3F,EAAkH,CAAC;AACvGrqC,IAAAA,IAAI,EAAEnC,oDADiG;AAEvGrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,aADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAE8kC,UAAX;AAAuB7kC,QAAAA,WAAW,EAAE8kC;AAApC,OAAD;AAFZ,KAAD;AAFiG,GAAD,CAAlH;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,UAAU,GAAG,IAAIjiC,yDAAJ,CAAmB,WAAnB,CAAnB;AACA;;AACA,MAAM3C,SAAN,CAAgB;;AAEhBA,SAAS,CAAC5F,IAAV;AAAA,mBAAsG4F,SAAtG;AAAA;;AACAA,SAAS,CAAC3F,IAAV,kBA7M2FnC,+DA6M3F;AAAA,QAA0F8H,SAA1F;AAAA;AAAA,aA7M2F9H,gEA6M3F,CAAyI,CAAC;AAAE0H,IAAAA,OAAO,EAAEglC,UAAX;AAAuB/kC,IAAAA,WAAW,EAAEG;AAApC,GAAD,CAAzI;AAAA;;AACA;AAAA,qDA9M2F9H,+DA8M3F,CAA2F8H,SAA3F,EAAkH,CAAC;AACvG1F,IAAAA,IAAI,EAAEnC,oDADiG;AAEvGrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,aADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAEglC,UAAX;AAAuB/kC,QAAAA,WAAW,EAAEG;AAApC,OAAD;AAFZ,KAAD;AAFiG,GAAD,CAAlH;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIpG,YAAY,GAAG,CAAnB;AACA,MAAMirC,kBAAkB,GAAG,IAA3B;AACA,MAAMC,iBAAiB,GAAG,CAA1B;AACA;AACA;AACA;AACA;;AACA,MAAMC,iBAAiB,GAAG9B,kEAAU,CAAC,MAAM;AACvCnpC,EAAAA,WAAW,CAACW,WAAD,EAAc;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AAHsC,CAAP,EAIjC,SAJiC,CAApC;AAKA;AACA;AACA;AACA;;;AACA,MAAMuqC,8BAA8B,GAAG,IAAIriC,yDAAJ,CAAmB,gCAAnB,CAAvC;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMsiC,cAAc,GAAG,IAAItiC,yDAAJ,CAAmB,cAAnB,CAAvB;AACA;;AACA,MAAMuiC,YAAN,SAA2BH,iBAA3B,CAA6C;AACzCjrC,EAAAA,WAAW,CAAC8L,UAAD,EAAa6K,kBAAb,EAAiCC,IAAjC,EAAuCy0B,SAAvC,EAAkDzqC,SAAlD,EAA6DiM,OAA7D,EAAsEy+B,cAAtE,EAAsF;AAC7F,UAAMx/B,UAAN;AACA,SAAK6K,kBAAL,GAA0BA,kBAA1B;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKy0B,SAAL,GAAiBA,SAAjB;AACA,SAAKzqC,SAAL,GAAiBA,SAAjB;AACA,SAAKiM,OAAL,GAAeA,OAAf;AACA;AACR;AACA;AACA;;AACQ,SAAK0+B,uCAAL,GAA+C,KAA/C;AACA;;AACA,SAAKC,oCAAL,GAA4C,KAA5C;AACA,SAAKz+B,UAAL,GAAkB,IAAI3N,yCAAJ,EAAlB;AACA;;AACA,SAAKqsC,kBAAL,GAA0B,KAA1B;AACA;;AACA,SAAKC,wBAAL,GAAgC,EAAhC;AACA,SAAKC,UAAL,GAAkB,EAAlB,CAnB6F,CAoB7F;;AACA,SAAKC,YAAL,GAAqB,YAAW9rC,YAAY,EAAG,EAA/C,CArB6F,CAsB7F;;AACA,SAAK+rC,QAAL,GAAiB,wBAAuB/rC,YAAY,EAAG,EAAvD;AACA,SAAKgsC,UAAL,GAAkB,KAAKC,0BAAL,EAAlB;AACA,SAAKC,kBAAL,GAA0BV,cAAc,KAAK,gBAA7C,CAzB6F,CA0B7F;;AACA,SAAKW,UAAL,GAAkBZ,SAAS,IAAIA,SAAS,CAACY,UAAvB,GAAoCZ,SAAS,CAACY,UAA9C,GAA2D,QAA7E;AACA,SAAKC,mBAAL,GACIb,SAAS,IAAIA,SAAS,CAACc,kBAAV,IAAgC,IAA7C,GAAoDd,SAAS,CAACc,kBAA9D,GAAmF,KADvF;AAEH;AACD;;;AACc,MAAVF,UAAU,GAAG;AACb,WAAO,KAAKG,WAAZ;AACH;;AACa,MAAVH,UAAU,CAAClvC,KAAD,EAAQ;AAClB,UAAMsvC,QAAQ,GAAG,KAAKD,WAAtB;AACA,SAAKA,WAAL,GAAmBrvC,KAAK,IAAK,KAAKsuC,SAAL,IAAkB,KAAKA,SAAL,CAAeY,UAA3C,IAA0D,QAA7E;;AACA,QAAI,KAAKG,WAAL,KAAqB,SAArB,IAAkCC,QAAQ,KAAKtvC,KAAnD,EAA0D;AACtD,WAAKyuC,oCAAL,GAA4C,IAA5C;AACH;AACJ;AACD;;;AACsB,MAAlBW,kBAAkB,GAAG;AACrB,WAAO,KAAKD,mBAAZ;AACH;;AACqB,MAAlBC,kBAAkB,CAACpvC,KAAD,EAAQ;AAC1B,SAAKmvC,mBAAL,GAA2B/tC,4EAAqB,CAACpB,KAAD,CAAhD;AACH;AACD;;;AACAuvC,EAAAA,kBAAkB,GAAG;AACjB,WAAO,KAAKR,UAAL,KAAoB,QAApB,IAAgC,CAAC,KAAKL,kBAA7C;AACH;AACD;;;AACAc,EAAAA,cAAc,GAAG;AACb,WAAO,KAAKT,UAAL,KAAoB,OAA3B;AACH;AACD;;;AACa,MAATU,SAAS,GAAG;AACZ,WAAO,KAAKb,UAAZ;AACH;;AACY,MAATa,SAAS,CAACzvC,KAAD,EAAQ;AACjB,SAAK4uC,UAAL,GAAkB5uC,KAAlB;;AACA,SAAK0vC,aAAL;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACkB,MAAVX,UAAU,GAAG;AACb,WAAO,KAAKG,UAAL,KAAoB,QAApB,IAAgC,KAAKS,WAAL,KAAqB,OAArD,GAA+D,MAA/D,GAAwE,KAAKA,WAApF;AACH;;AACa,MAAVZ,UAAU,CAAC/uC,KAAD,EAAQ;AAClB,QAAIA,KAAK,KAAK,KAAK2vC,WAAnB,EAAgC;AAC5B,WAAKA,WAAL,GAAmB3vC,KAAK,IAAI,KAAKgvC,0BAAL,EAA5B;;AACA,WAAKp1B,kBAAL,CAAwBlT,YAAxB;AACH;AACJ;;AACW,MAAR69B,QAAQ,GAAG;AACX;AACA;AACA,WAAO,KAAKqL,yBAAL,IAAkC,KAAKC,iBAAvC,IAA4D,KAAKC,cAAxE;AACH;;AACW,MAARvL,QAAQ,CAACvkC,KAAD,EAAQ;AAChB,SAAK4vC,yBAAL,GAAiC5vC,KAAjC;AACH;AACD;AACJ;AACA;;;AACI+vC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKC,iBAAL,KAA2B,KAAKlB,QAAhC,GAA2C,IAAlD;AACH;AACD;AACJ;AACA;AACA;;;AACImB,EAAAA,yBAAyB,GAAG;AACxB,WAAO,KAAKC,uBAAL,IAAgC,KAAKtsC,WAA5C;AACH;;AACDusC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,qBAAL;;AACA,UAAMvhB,OAAO,GAAG,KAAK0V,QAArB;;AACA,QAAI1V,OAAO,CAACzqB,WAAZ,EAAyB;AACrB,WAAKR,WAAL,CAAiB0C,aAAjB,CAA+B0I,SAA/B,CAAyClE,GAAzC,CAA8C,uBAAsB+jB,OAAO,CAACzqB,WAAY,EAAxF;AACH,KALgB,CAMjB;;;AACAyqB,IAAAA,OAAO,CAAC3qB,YAAR,CAAqB/D,IAArB,CAA0BosC,yDAAS,CAAC,IAAD,CAAnC,EAA2CxsC,SAA3C,CAAqD,MAAM;AACvD,WAAKswC,qBAAL;;AACA,WAAKC,mBAAL;;AACA,WAAK12B,kBAAL,CAAwBlT,YAAxB;AACH,KAJD,EAPiB,CAYjB;;AACA,QAAImoB,OAAO,CAACxrB,SAAR,IAAqBwrB,OAAO,CAACxrB,SAAR,CAAkB2vB,YAA3C,EAAyD;AACrDnE,MAAAA,OAAO,CAACxrB,SAAR,CAAkB2vB,YAAlB,CACK7yB,IADL,CACU0M,yDAAS,CAAC,KAAKmD,UAAN,CADnB,EAEKjQ,SAFL,CAEe,MAAM,KAAK6Z,kBAAL,CAAwBlT,YAAxB,EAFrB;AAGH,KAjBgB,CAkBjB;AACA;AACA;;;AACA,SAAKoJ,OAAL,CAAa0X,iBAAb,CAA+B,MAAM;AACjC,WAAK1X,OAAL,CAAaW,QAAb,CAAsBtQ,IAAtB,CAA2B0M,yDAAS,CAAC,KAAKmD,UAAN,CAApC,EAAuDjQ,SAAvD,CAAiE,MAAM;AACnE,YAAI,KAAK0uC,oCAAT,EAA+C;AAC3C,eAAK8B,gBAAL;AACH;AACJ,OAJD;AAKH,KAND,EArBiB,CA4BjB;;;AACAjE,IAAAA,2CAAK,CAAC,KAAKkE,eAAL,CAAqB1/B,OAAtB,EAA+B,KAAK2/B,eAAL,CAAqB3/B,OAApD,CAAL,CAAkE/Q,SAAlE,CAA4E,MAAM;AAC9E,WAAK0uC,oCAAL,GAA4C,IAA5C;;AACA,WAAK70B,kBAAL,CAAwBlT,YAAxB;AACH,KAHD,EA7BiB,CAiCjB;;AACA,SAAKgqC,aAAL,CAAmB5/B,OAAnB,CAA2B3Q,IAA3B,CAAgCosC,yDAAS,CAAC,IAAD,CAAzC,EAAiDxsC,SAAjD,CAA2D,MAAM;AAC7D,WAAK2vC,aAAL;;AACA,WAAK91B,kBAAL,CAAwBlT,YAAxB;AACH,KAHD,EAlCiB,CAsCjB;;;AACA,SAAKiqC,cAAL,CAAoB7/B,OAApB,CAA4B3Q,IAA5B,CAAiCosC,yDAAS,CAAC,IAAD,CAA1C,EAAkDxsC,SAAlD,CAA4D,MAAM;AAC9D,WAAKuwC,mBAAL;;AACA,WAAK12B,kBAAL,CAAwBlT,YAAxB;AACH,KAHD;;AAIA,QAAI,KAAKmT,IAAT,EAAe;AACX,WAAKA,IAAL,CAAU+C,MAAV,CAAiBzc,IAAjB,CAAsB0M,yDAAS,CAAC,KAAKmD,UAAN,CAA/B,EAAkDjQ,SAAlD,CAA4D,MAAM;AAC9D,YAAI,OAAOorB,qBAAP,KAAiC,UAArC,EAAiD;AAC7C,eAAKrb,OAAL,CAAa0X,iBAAb,CAA+B,MAAM;AACjC2D,YAAAA,qBAAqB,CAAC,MAAM,KAAKolB,gBAAL,EAAP,CAArB;AACH,WAFD;AAGH,SAJD,MAKK;AACD,eAAKA,gBAAL;AACH;AACJ,OATD;AAUH;AACJ;;AACD1zB,EAAAA,qBAAqB,GAAG;AACpB,SAAKuzB,qBAAL;;AACA,QAAI,KAAK5B,uCAAT,EAAkD;AAC9C,WAAK+B,gBAAL;AACH;AACJ;;AACD7mB,EAAAA,eAAe,GAAG;AACd;AACA,SAAKilB,wBAAL,GAAgC,OAAhC;;AACA,SAAK/0B,kBAAL,CAAwBg3B,aAAxB;AACH;;AACDnrC,EAAAA,WAAW,GAAG;AACV,SAAKuK,UAAL,CAAgB9P,IAAhB;;AACA,SAAK8P,UAAL,CAAgBxQ,QAAhB;AACH;AACD;;;AACAqxC,EAAAA,cAAc,CAACC,IAAD,EAAO;AACjB,UAAMztC,SAAS,GAAG,KAAKkhC,QAAL,GAAgB,KAAKA,QAAL,CAAclhC,SAA9B,GAA0C,IAA5D;AACA,WAAOA,SAAS,IAAIA,SAAS,CAACytC,IAAD,CAA7B;AACH;;AACDC,EAAAA,eAAe,GAAG;AACd,WAAO,CAAC,EAAG,KAAKxM,QAAL,IAAiB,KAAKA,QAAL,CAAc7/B,WAAhC,IAAgD,KAAKssC,iBAAvD,CAAR;AACH;;AACDC,EAAAA,SAAS,GAAG;AACR,WAAO,CAAC,EAAE,KAAKC,oBAAL,IAA6B,KAAKC,iBAApC,CAAR;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,WAAQ,KAAK5B,cAAL,OACF,KAAKjL,QAAL,IAAiB,KAAKA,QAAL,CAAcx9B,gBAAhC,IAAqD,KAAKwoC,kBAAL,EADlD,CAAR;AAEH;;AACD8B,EAAAA,uBAAuB,GAAG;AACtB;AACA,WAAS,KAAKnC,UAAL,KAAoB,QAApB,IAAgC,CAAC,KAAK+B,SAAL,EAAlC,IACH,KAAKA,SAAL,MAAoB,CAAC,KAAKG,iBAAL,EAD1B;AAEH;;AACDpB,EAAAA,iBAAiB,GAAG;AAChB;AACA,WAAO,KAAKiB,SAAL,MAAqB,KAAK/B,UAAL,KAAoB,QAApB,IAAgC,KAAK6B,eAAL,EAA5D;AACH;AACD;;;AACAO,EAAAA,qBAAqB,GAAG;AACpB,WAAO,KAAKX,cAAL,IAAuB,KAAKA,cAAL,CAAoBpxC,MAApB,GAA6B,CAApD,IAAyD,KAAKglC,QAAL,CAAcgN,UAAvE,GACD,OADC,GAED,MAFN;AAGH;AACD;;;AACAC,EAAAA,oBAAoB,GAAG;AACnB,QAAI,KAAKxB,iBAAL,MAA4B,KAAKR,cAAL,EAAhC,EAAuD;AACnD;AACA;AACA,UAAI,KAAKP,kBAAL,IAA2B,KAAKwC,MAApC,EAA4C;AACxC,aAAK/C,kBAAL,GAA0B,IAA1B;AACAnoB,QAAAA,+CAAS,CAAC,KAAKkrB,MAAL,CAAYnrC,aAAb,EAA4B,eAA5B,CAAT,CACKnG,IADL,CACUS,oDAAI,CAAC,CAAD,CADd,EAEKb,SAFL,CAEe,MAAM;AACjB,eAAK2uC,kBAAL,GAA0B,KAA1B;AACH,SAJD;AAKH;;AACD,WAAKK,UAAL,GAAkB,QAAlB;;AACA,WAAKn1B,kBAAL,CAAwBlT,YAAxB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACI2pC,EAAAA,qBAAqB,GAAG;AACpB,QAAI,KAAK9L,QAAL,CAAc7/B,WAAd,IACA,KAAKssC,iBADL,KAEC,OAAOt1B,SAAP,KAAqB,WAArB,IAAoCA,SAFrC,CAAJ,EAEqD;AACjD,YAAM0xB,uCAAuC,EAA7C;AACH;AACJ;AACD;;;AACAsC,EAAAA,aAAa,GAAG;AACZ,SAAKgC,cAAL;;AACA,SAAKpB,mBAAL;AACH;AACD;AACJ;AACA;AACA;;;AACIoB,EAAAA,cAAc,GAAG;AACb,QAAI,KAAKhB,aAAL,KAAuB,OAAOh1B,SAAP,KAAqB,WAArB,IAAoCA,SAA3D,CAAJ,EAA2E;AACvE,UAAIi2B,SAAJ;AACA,UAAIC,OAAJ;;AACA,WAAKlB,aAAL,CAAmB7yB,OAAnB,CAA4Bg0B,IAAD,IAAU;AACjC,YAAIA,IAAI,CAACvE,KAAL,KAAe,OAAnB,EAA4B;AACxB,cAAIqE,SAAS,IAAI,KAAKlC,SAAtB,EAAiC;AAC7B,kBAAMpC,kCAAkC,CAAC,OAAD,CAAxC;AACH;;AACDsE,UAAAA,SAAS,GAAGE,IAAZ;AACH,SALD,MAMK,IAAIA,IAAI,CAACvE,KAAL,KAAe,KAAnB,EAA0B;AAC3B,cAAIsE,OAAJ,EAAa;AACT,kBAAMvE,kCAAkC,CAAC,KAAD,CAAxC;AACH;;AACDuE,UAAAA,OAAO,GAAGC,IAAV;AACH;AACJ,OAbD;AAcH;AACJ;AACD;;;AACA7C,EAAAA,0BAA0B,GAAG;AACzB,WAAQ,KAAKV,SAAL,IAAkB,KAAKA,SAAL,CAAeS,UAAlC,IAAiD,MAAxD;AACH;AACD;AACJ;AACA;AACA;;;AACIuB,EAAAA,mBAAmB,GAAG;AAClB,QAAI,KAAK/L,QAAT,EAAmB;AACf,UAAIt9B,GAAG,GAAG,EAAV,CADe,CAEf;;AACA,UAAI,KAAKs9B,QAAL,CAAcuN,mBAAd,IACA,OAAO,KAAKvN,QAAL,CAAcuN,mBAArB,KAA6C,QADjD,EAC2D;AACvD7qC,QAAAA,GAAG,CAACa,IAAJ,CAAS,GAAG,KAAKy8B,QAAL,CAAcuN,mBAAd,CAAkCxX,KAAlC,CAAwC,GAAxC,CAAZ;AACH;;AACD,UAAI,KAAKgX,qBAAL,OAAiC,MAArC,EAA6C;AACzC,cAAMK,SAAS,GAAG,KAAKjB,aAAL,GACZ,KAAKA,aAAL,CAAmBx/B,IAAnB,CAAwB2gC,IAAI,IAAIA,IAAI,CAACvE,KAAL,KAAe,OAA/C,CADY,GAEZ,IAFN;AAGA,cAAMsE,OAAO,GAAG,KAAKlB,aAAL,GACV,KAAKA,aAAL,CAAmBx/B,IAAnB,CAAwB2gC,IAAI,IAAIA,IAAI,CAACvE,KAAL,KAAe,KAA/C,CADU,GAEV,IAFN;;AAGA,YAAIqE,SAAJ,EAAe;AACX1qC,UAAAA,GAAG,CAACa,IAAJ,CAAS6pC,SAAS,CAAC7sC,EAAnB;AACH,SAFD,MAGK,IAAI,KAAK8pC,UAAT,EAAqB;AACtB3nC,UAAAA,GAAG,CAACa,IAAJ,CAAS,KAAK+mC,YAAd;AACH;;AACD,YAAI+C,OAAJ,EAAa;AACT3qC,UAAAA,GAAG,CAACa,IAAJ,CAAS8pC,OAAO,CAAC9sC,EAAjB;AACH;AACJ,OAhBD,MAiBK,IAAI,KAAK6rC,cAAT,EAAyB;AAC1B1pC,QAAAA,GAAG,CAACa,IAAJ,CAAS,GAAG,KAAK6oC,cAAL,CAAoBvoC,GAApB,CAAwB2pC,KAAK,IAAIA,KAAK,CAACjtC,EAAvC,CAAZ;AACH;;AACD,WAAKy/B,QAAL,CAAcv9B,iBAAd,CAAgCC,GAAhC;AACH;AACJ;AACD;;;AACAmpC,EAAAA,qBAAqB,GAAG;AACpB,QAAI,CAAC,KAAK7L,QAAN,KAAmB,OAAO7oB,SAAP,KAAqB,WAArB,IAAoCA,SAAvD,CAAJ,EAAuE;AACnE,YAAM6xB,kCAAkC,EAAxC;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACIgD,EAAAA,gBAAgB,GAAG;AACf,UAAMyB,OAAO,GAAG,KAAKP,MAAL,GAAc,KAAKA,MAAL,CAAYnrC,aAA1B,GAA0C,IAA1D;AACA,UAAM0e,SAAS,GAAG,KAAKkrB,uBAAL,CAA6B5pC,aAA/C;AACA,UAAM2rC,oBAAoB,GAAG,+BAA7B;AACA,UAAMC,kBAAkB,GAAG,6BAA3B,CAJe,CAKf;;AACA,QAAI,KAAKhD,UAAL,KAAoB,SAApB,IAAiC,CAAC,KAAKrrC,SAAL,CAAe+gB,SAArD,EAAgE;AAC5D;AACH,KARc,CASf;;;AACA,QAAI,CAACotB,OAAD,IAAY,CAACA,OAAO,CAACn+B,QAAR,CAAiBtU,MAA9B,IAAwC,CAACyyC,OAAO,CAACG,WAAR,CAAoBC,IAApB,EAA7C,EAAyE;AACrE,YAAMC,WAAW,GAAGrtB,SAAS,CAACstB,gBAAV,CAA4B,GAAEL,oBAAqB,KAAIC,kBAAmB,EAA1E,CAApB;;AACA,WAAK,IAAIrqC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwqC,WAAW,CAAC9yC,MAAhC,EAAwCsI,CAAC,EAAzC,EAA6C;AACzCwqC,QAAAA,WAAW,CAACxqC,CAAD,CAAX,CAAeuP,KAAf,CAAqB1B,KAArB,GAA6B,GAA7B;AACH;;AACD;AACH,KAhBc,CAiBf;AACA;;;AACA,QAAI,CAAC,KAAK68B,gBAAL,EAAL,EAA8B;AAC1B,WAAK/D,uCAAL,GAA+C,IAA/C;AACA;AACH;;AACD,QAAIgE,UAAU,GAAG,CAAjB;AACA,QAAIC,QAAQ,GAAG,CAAf;AACA,UAAMC,QAAQ,GAAG1tB,SAAS,CAACstB,gBAAV,CAA2BL,oBAA3B,CAAjB;AACA,UAAMU,MAAM,GAAG3tB,SAAS,CAACstB,gBAAV,CAA2BJ,kBAA3B,CAAf;;AACA,QAAI,KAAKT,MAAL,IAAe,KAAKA,MAAL,CAAYnrC,aAAZ,CAA0BuN,QAA1B,CAAmCtU,MAAtD,EAA8D;AAC1D,YAAMqzC,aAAa,GAAG5tB,SAAS,CAACzO,qBAAV,EAAtB,CAD0D,CAE1D;AACA;AACA;AACA;AACA;AACA;;AACA,UAAIq8B,aAAa,CAACl9B,KAAd,KAAwB,CAAxB,IAA6Bk9B,aAAa,CAACt8B,MAAd,KAAyB,CAA1D,EAA6D;AACzD,aAAKm4B,oCAAL,GAA4C,IAA5C;AACA,aAAKD,uCAAL,GAA+C,KAA/C;AACA;AACH;;AACD,YAAMqE,cAAc,GAAG,KAAKC,YAAL,CAAkBF,aAAlB,CAAvB;;AACA,YAAMG,aAAa,GAAGf,OAAO,CAACn+B,QAA9B;;AACA,YAAMm/B,UAAU,GAAG,KAAKF,YAAL,CAAkBC,aAAa,CAAC,CAAD,CAAb,CAAiBx8B,qBAAjB,EAAlB,CAAnB;;AACA,UAAI08B,UAAU,GAAG,CAAjB;;AACA,WAAK,IAAIprC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkrC,aAAa,CAACxzC,MAAlC,EAA0CsI,CAAC,EAA3C,EAA+C;AAC3CorC,QAAAA,UAAU,IAAIF,aAAa,CAAClrC,CAAD,CAAb,CAAiBqrC,WAA/B;AACH;;AACDV,MAAAA,UAAU,GAAGtnB,IAAI,CAACioB,GAAL,CAASH,UAAU,GAAGH,cAAtB,IAAwC5E,iBAArD;AACAwE,MAAAA,QAAQ,GAAGQ,UAAU,GAAG,CAAb,GAAiBA,UAAU,GAAGjF,kBAAb,GAAkCC,iBAAiB,GAAG,CAAvE,GAA2E,CAAtF;AACH;;AACD,SAAK,IAAIpmC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6qC,QAAQ,CAACnzC,MAA7B,EAAqCsI,CAAC,EAAtC,EAA0C;AACtC6qC,MAAAA,QAAQ,CAAC7qC,CAAD,CAAR,CAAYuP,KAAZ,CAAkB1B,KAAlB,GAA2B,GAAE88B,UAAW,IAAxC;AACH;;AACD,SAAK,IAAI3qC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8qC,MAAM,CAACpzC,MAA3B,EAAmCsI,CAAC,EAApC,EAAwC;AACpC8qC,MAAAA,MAAM,CAAC9qC,CAAD,CAAN,CAAUuP,KAAV,CAAgB1B,KAAhB,GAAyB,GAAE+8B,QAAS,IAApC;AACH;;AACD,SAAKhE,oCAAL,GAA4C,KAAKD,uCAAL,GACxC,KADJ;AAEH;AACD;;;AACAsE,EAAAA,YAAY,CAACM,IAAD,EAAO;AACf,WAAO,KAAKv5B,IAAL,IAAa,KAAKA,IAAL,CAAU7Z,KAAV,KAAoB,KAAjC,GAAyCozC,IAAI,CAACp7B,KAA9C,GAAsDo7B,IAAI,CAACr7B,IAAlE;AACH;AACD;;;AACAw6B,EAAAA,gBAAgB,GAAG;AACf,UAAMz+B,OAAO,GAAG,KAAKlQ,WAAL,CAAiB0C,aAAjC;;AACA,QAAIwN,OAAO,CAACu/B,WAAZ,EAAyB;AACrB,YAAMpuB,QAAQ,GAAGnR,OAAO,CAACu/B,WAAR,EAAjB,CADqB,CAErB;AACA;;AACA,aAAOpuB,QAAQ,IAAIA,QAAQ,KAAKnR,OAAhC;AACH,KAPc,CAQf;AACA;;;AACA,WAAOsU,QAAQ,CAACkrB,eAAT,CAAyBlsB,QAAzB,CAAkCtT,OAAlC,CAAP;AACH;;AAlYwC;;AAoY7Cu6B,YAAY,CAAC9qC,IAAb;AAAA,mBAAyG8qC,YAAzG,EAznB2FhtC,+DAynB3F,CAAuIA,qDAAvI,GAznB2FA,+DAynB3F,CAAiKA,4DAAjK,GAznB2FA,+DAynB3F,CAAkMiB,8DAAlM,MAznB2FjB,+DAynB3F,CAAgP8sC,8BAAhP,MAznB2F9sC,+DAynB3F,CAA2SkB,4DAA3S,GAznB2FlB,+DAynB3F,CAAmUA,iDAAnU,GAznB2FA,+DAynB3F,CAAyVsrC,gEAAzV;AAAA;;AACA0B,YAAY,CAACvlC,IAAb,kBA1nB2FzH,+DA0nB3F;AAAA,QAA6FgtC,YAA7F;AAAA;AAAA;AAAA;AA1nB2FhtC,MAAAA,4DA0nB3F,WAAulDc,mBAAvlD;AA1nB2Fd,MAAAA,4DA0nB3F,WAA2rDc,mBAA3rD;AA1nB2Fd,MAAAA,4DA0nB3F,WAAmzDssC,QAAnzD;AA1nB2FtsC,MAAAA,4DA0nB3F,WAA+4DssC,QAA/4D;AA1nB2FtsC,MAAAA,4DA0nB3F,WAAy/DusC,cAAz/D;AA1nB2FvsC,MAAAA,4DA0nB3F,WAA2kEwrC,SAA3kE;AA1nB2FxrC,MAAAA,4DA0nB3F,WAAupEosC,SAAvpE;AA1nB2FpsC,MAAAA,4DA0nB3F,WAAquEwsC,UAAruE;AA1nB2FxsC,MAAAA,4DA0nB3F,WAAozE0sC,UAApzE;AAAA;;AAAA;AAAA;;AA1nB2F1sC,MAAAA,4DA0nB3F,MA1nB2FA,yDA0nB3F;AA1nB2FA,MAAAA,4DA0nB3F,MA1nB2FA,yDA0nB3F;AA1nB2FA,MAAAA,4DA0nB3F,MA1nB2FA,yDA0nB3F;AA1nB2FA,MAAAA,4DA0nB3F,MA1nB2FA,yDA0nB3F;AA1nB2FA,MAAAA,4DA0nB3F,MA1nB2FA,yDA0nB3F;AA1nB2FA,MAAAA,4DA0nB3F,MA1nB2FA,yDA0nB3F;AA1nB2FA,MAAAA,4DA0nB3F,MA1nB2FA,yDA0nB3F;AA1nB2FA,MAAAA,4DA0nB3F,MA1nB2FA,yDA0nB3F;AA1nB2FA,MAAAA,4DA0nB3F,MA1nB2FA,yDA0nB3F;AAAA;AAAA;AAAA;AAAA;AA1nB2FA,MAAAA,yDA0nB3F;AA1nB2FA,MAAAA,yDA0nB3F;AA1nB2FA,MAAAA,yDA0nB3F;AAAA;;AAAA;AAAA;;AA1nB2FA,MAAAA,4DA0nB3F,MA1nB2FA,yDA0nB3F;AA1nB2FA,MAAAA,4DA0nB3F,MA1nB2FA,yDA0nB3F;AA1nB2FA,MAAAA,4DA0nB3F,MA1nB2FA,yDA0nB3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1nB2FA,MAAAA,yDA0nB3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA1nB2FA,gEA0nB3F,CAAs9C,CAAC;AAAE0H,IAAAA,OAAO,EAAEqlC,cAAX;AAA2BplC,IAAAA,WAAW,EAAEqlC;AAAxC,GAAD,CAAt9C,GA1nB2FhtC,wEA0nB3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1nB2FA,MAAAA,6DA0nB3F;AA1nB2FA,MAAAA,4DA0nB8oF,6BAAzuF;AA1nB2FA,MAAAA,wDA0nBwvF;AAAA,gDAAuC,qCAAvC;AAAA,QAAn1F;AA1nB2FA,MAAAA,wDA0nB83F,kEAAz9F;AA1nB2FA,MAAAA,wDA0nBg8G,gDAA3hH;AA1nB2FA,MAAAA,4DA0nBitH,gBAA5yH;AA1nB2FA,MAAAA,0DA0nB6wH,GAAx2H;AA1nB2FA,MAAAA,4DA0nBgzH,cAA34H;AA1nB2FA,MAAAA,wDA0nB0gI,qDAArmI;AA1nB2FA,MAAAA,0DA0nBu4K,IAAl+K;AA1nB2FA,MAAAA,wDA0nBk6K,kDAA7/K;AA1nB2FA,MAAAA,0DA0nBgjL,EAA3oL;AA1nB2FA,MAAAA,wDA0nBkoL,mDAA7tL;AA1nB2FA,MAAAA,4DA0nB23L,eAAt9L;AA1nB2FA,MAAAA,wDA0nBg+L,mDAA3jM;AA1nB2FA,MAAAA,wDA0nB4nM,mDAAvtM;AA1nB2FA,MAAAA,0DA0nB2oN,IAAtuN;AAAA;;AAAA;AA1nB2FA,MAAAA,uDA0nB64F,GAAx+F;AA1nB2FA,MAAAA,wDA0nB64F,qCAAx+F;AA1nB2FA,MAAAA,uDA0nBo/G,GAA/kH;AA1nB2FA,MAAAA,wDA0nBo/G,oCAA/kH;AA1nB2FA,MAAAA,uDA0nB8mJ,GAAzsJ;AA1nB2FA,MAAAA,wDA0nB8mJ,iCAAzsJ;AA1nB2FA,MAAAA,uDA0nBw8K,GAAniL;AA1nB2FA,MAAAA,wDA0nBw8K,oCAAniL;AA1nB2FA,MAAAA,uDA0nBmrL,GAA9wL;AA1nB2FA,MAAAA,wDA0nBmrL,qCAA9wL;AA1nB2FA,MAAAA,uDA0nBm7L,GAA9gM;AA1nB2FA,MAAAA,wDA0nBm7L,yCAA9gM;AA1nB2FA,MAAAA,uDA0nBs+L,GAAjkM;AA1nB2FA,MAAAA,wDA0nBs+L,yBAAjkM;AA1nB2FA,MAAAA,uDA0nBwqM,GAAnwM;AA1nB2FA,MAAAA,wDA0nBwqM,wBAAnwM;AAAA;AAAA;AAAA,iBAAi0qBW,kDAAj0qB,EAAk5qBQ,sEAAl5qB,EAAukrBR,sDAAvkrB,EAA4orBA,0DAA5orB;AAAA;AAAA;AAAA;AAAA,eAAkurB,CAACgrC,sBAAsB,CAACC,kBAAxB;AAAlurB;AAAA;AAAA;;AACA;AAAA,qDA3nB2F5rC,+DA2nB3F,CAA2FgtC,YAA3F,EAAqH,CAAC;AAC1G5qC,IAAAA,IAAI,EAAEjC,oDADoG;AAE1GvC,IAAAA,IAAI,EAAE,CAAC;AAAEyE,MAAAA,QAAQ,EAAE,gBAAZ;AAA8B+F,MAAAA,QAAQ,EAAE,cAAxC;AAAwDiqC,MAAAA,UAAU,EAAE,CAAC1G,sBAAsB,CAACC,kBAAxB,CAApE;AAAiH1jC,MAAAA,IAAI,EAAE;AAClH,iBAAS,gBADyG;AAElH,sDAA8C,0BAFoE;AAGlH,kDAA0C,sBAHwE;AAIlH,qDAA6C,yBAJqE;AAKlH,oDAA4C,wBALsE;AAMlH,0CAAkC,qBANgF;AAOlH,4CAAoC,kBAP8E;AAQlH,+CAAuC,qBAR2E;AASlH,4CAAoC,qBAT8E;AAUlH,mDAA2C,2BAVuE;AAWlH,2CAAmC,mBAX+E;AAYlH,6CAAqC,qBAZ6E;AAalH,+BAAuB,kBAb2F;AAclH,gCAAwB,6BAd0F;AAelH,8BAAsB,2BAf4F;AAgBlH,+BAAuB,4BAhB2F;AAiBlH,4BAAoB,yBAjB8F;AAkBlH,4BAAoB,yBAlB8F;AAmBlH,8BAAsB,2BAnB4F;AAoBlH,8BAAsB,2BApB4F;AAqBlH,2CAAmC;AArB+E,OAAvH;AAsBIkF,MAAAA,MAAM,EAAE,CAAC,OAAD,CAtBZ;AAsBuBpF,MAAAA,aAAa,EAAE5H,iEAtBtC;AAsB8D4Q,MAAAA,eAAe,EAAEpG,yEAtB/E;AAsB+GzC,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAEqlC,cAAX;AAA2BplC,QAAAA,WAAW,EAAEqlC;AAAxC,OAAD,CAtB1H;AAsBoL3kC,MAAAA,QAAQ,EAAE,+gIAtB9L;AAsB+sIC,MAAAA,MAAM,EAAE,CAAC,gvGAAD,EAAmvG,8sCAAnvG,EAAm8I,mwIAAn8I,EAAwsR,24CAAxsR,EAAqlU,o0GAArlU,EAA25a,6oCAA35a;AAtBvtI,KAAD;AAFoG,GAAD,CAArH,EAyB4B,YAAY;AAAE,WAAO,CAAC;AAAElG,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAA1B,EAA0D;AAAEhF,MAAAA,IAAI,EAAEnB,8DAAR;AAA2BsH,MAAAA,UAAU,EAAE,CAAC;AAC/HnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADiH,OAAD;AAAvC,KAA1D,EAE3B;AAAE+B,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADoB,OAAD,EAElC;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAACkvC,8BAAD;AAFP,OAFkC;AAA/B,KAF2B,EAO3B;AAAE1qC,MAAAA,IAAI,EAAElB,4DAAWiG;AAAnB,KAP2B,EAOJ;AAAE/E,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAPI,EAOiB;AAAE3I,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC9EnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADgE,OAAD,EAE9E;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC0tC,gEAAD;AAFP,OAF8E;AAA/B,KAPjB,CAAP;AAYlB,GArCxB,EAqC0C;AAAEuC,IAAAA,UAAU,EAAE,CAAC;AACzCzrC,MAAAA,IAAI,EAAE3B,gDAAKA;AAD8B,KAAD,CAAd;AAE1BstC,IAAAA,kBAAkB,EAAE,CAAC;AACrB3rC,MAAAA,IAAI,EAAE3B,gDAAKA;AADU,KAAD,CAFM;AAI1B2tC,IAAAA,SAAS,EAAE,CAAC;AACZhsC,MAAAA,IAAI,EAAE3B,gDAAKA;AADC,KAAD,CAJe;AAM1BitC,IAAAA,UAAU,EAAE,CAAC;AACbtrC,MAAAA,IAAI,EAAE3B,gDAAKA;AADE,KAAD,CANc;AAQ1BouC,IAAAA,uBAAuB,EAAE,CAAC;AAC1BzsC,MAAAA,IAAI,EAAE7B,oDADoB;AAE1B3C,MAAAA,IAAI,EAAE,CAAC,qBAAD,EAAwB;AAAE4K,QAAAA,MAAM,EAAE;AAAV,OAAxB;AAFoB,KAAD,CARC;AAW1B+pC,IAAAA,kBAAkB,EAAE,CAAC;AACrBnwC,MAAAA,IAAI,EAAE7B,oDADe;AAErB3C,MAAAA,IAAI,EAAE,CAAC,gBAAD;AAFe,KAAD,CAXM;AAc1BwyC,IAAAA,MAAM,EAAE,CAAC;AACThuC,MAAAA,IAAI,EAAE7B,oDADG;AAET3C,MAAAA,IAAI,EAAE,CAAC,OAAD;AAFG,KAAD,CAdkB;AAiB1B4wC,IAAAA,iBAAiB,EAAE,CAAC;AACpBpsC,MAAAA,IAAI,EAAE5B,uDADc;AAEpB5C,MAAAA,IAAI,EAAE,CAACkD,mBAAD;AAFc,KAAD,CAjBO;AAoB1B2tC,IAAAA,cAAc,EAAE,CAAC;AACjBrsC,MAAAA,IAAI,EAAE5B,uDADW;AAEjB5C,MAAAA,IAAI,EAAE,CAACkD,mBAAD,EAAsB;AAAE0H,QAAAA,MAAM,EAAE;AAAV,OAAtB;AAFW,KAAD,CApBU;AAuB1BqnC,IAAAA,oBAAoB,EAAE,CAAC;AACvBztC,MAAAA,IAAI,EAAE5B,uDADiB;AAEvB5C,MAAAA,IAAI,EAAE,CAAC0uC,QAAD;AAFiB,KAAD,CAvBI;AA0B1BwD,IAAAA,iBAAiB,EAAE,CAAC;AACpB1tC,MAAAA,IAAI,EAAE5B,uDADc;AAEpB5C,MAAAA,IAAI,EAAE,CAAC0uC,QAAD,EAAW;AAAE9jC,QAAAA,MAAM,EAAE;AAAV,OAAX;AAFc,KAAD,CA1BO;AA6B1BmnC,IAAAA,iBAAiB,EAAE,CAAC;AACpBvtC,MAAAA,IAAI,EAAE5B,uDADc;AAEpB5C,MAAAA,IAAI,EAAE,CAAC2uC,cAAD;AAFc,KAAD,CA7BO;AAgC1B+C,IAAAA,cAAc,EAAE,CAAC;AACjBltC,MAAAA,IAAI,EAAE+I,0DADW;AAEjBvN,MAAAA,IAAI,EAAE,CAAC4tC,SAAD,EAAY;AAAExnB,QAAAA,WAAW,EAAE;AAAf,OAAZ;AAFW,KAAD,CAhCU;AAmC1BqrB,IAAAA,aAAa,EAAE,CAAC;AAChBjtC,MAAAA,IAAI,EAAE+I,0DADU;AAEhBvN,MAAAA,IAAI,EAAE,CAACwuC,SAAD,EAAY;AAAEpoB,QAAAA,WAAW,EAAE;AAAf,OAAZ;AAFU,KAAD,CAnCW;AAsC1BmrB,IAAAA,eAAe,EAAE,CAAC;AAClB/sC,MAAAA,IAAI,EAAE+I,0DADY;AAElBvN,MAAAA,IAAI,EAAE,CAAC4uC,UAAD,EAAa;AAAExoB,QAAAA,WAAW,EAAE;AAAf,OAAb;AAFY,KAAD,CAtCS;AAyC1BorB,IAAAA,eAAe,EAAE,CAAC;AAClBhtC,MAAAA,IAAI,EAAE+I,0DADY;AAElBvN,MAAAA,IAAI,EAAE,CAAC8uC,UAAD,EAAa;AAAE1oB,QAAAA,WAAW,EAAE;AAAf,OAAb;AAFY,KAAD;AAzCS,GArC1C;AAAA;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMjjB,kBAAN,CAAyB;;AAEzBA,kBAAkB,CAACmB,IAAnB;AAAA,mBAA+GnB,kBAA/G;AAAA;;AACAA,kBAAkB,CAAC6H,IAAnB,kBAxtB2F5I,8DAwtB3F;AAAA,QAAgHe;AAAhH;AAQAA,kBAAkB,CAAC8H,IAAnB,kBAhuB2F7I,8DAguB3F;AAAA,YAA8I,CAACwB,0DAAD,EAAewpC,mEAAf,EAAgCF,oEAAhC,CAA9I,EAAgME,mEAAhM;AAAA;;AACA;AAAA,qDAjuB2FhrC,+DAiuB3F,CAA2Fe,kBAA3F,EAA2H,CAAC;AAChHqB,IAAAA,IAAI,EAAE1B,mDAD0G;AAEhH9C,IAAAA,IAAI,EAAE,CAAC;AACCkL,MAAAA,YAAY,EAAE,CAAC2iC,QAAD,EAAWuB,YAAX,EAAyBX,OAAzB,EAAkCC,QAAlC,EAA4CC,cAA5C,EAA4DE,SAA5D,EAAuE3kC,SAAvE,CADf;AAECiB,MAAAA,OAAO,EAAE,CAACvH,0DAAD,EAAewpC,mEAAf,EAAgCF,oEAAhC,CAFV;AAGC9hC,MAAAA,OAAO,EAAE,CACLgiC,mEADK,EAELS,QAFK,EAGLuB,YAHK,EAILX,OAJK,EAKLC,QALK,EAMLC,cANK,EAOLE,SAPK,EAQL3kC,SARK;AAHV,KAAD;AAF0G,GAAD,CAA3H;AAAA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7yBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,IAAIorC,MAAJ;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,GAAqB;AACjB,MAAID,MAAM,KAAKt0C,SAAf,EAA0B;AACtBs0C,IAAAA,MAAM,GAAG,IAAT;;AACA,QAAI,OAAO3qB,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,YAAM6qB,QAAQ,GAAG7qB,MAAjB;;AACA,UAAI6qB,QAAQ,CAACC,YAAT,KAA0Bz0C,SAA9B,EAAyC;AACrCs0C,QAAAA,MAAM,GAAGE,QAAQ,CAACC,YAAT,CAAsBC,YAAtB,CAAmC,oBAAnC,EAAyD;AAC9DC,UAAAA,UAAU,EAAGC,CAAD,IAAOA;AAD2C,SAAzD,CAAT;AAGH;AACJ;AACJ;;AACD,SAAON,MAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASO,qBAAT,CAA+BC,IAA/B,EAAqC;AACjC,SAAOP,SAAS,IAAII,UAAb,CAAwBG,IAAxB,KAAiCA,IAAxC;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,2BAAT,CAAqCC,QAArC,EAA+C;AAC3C,SAAO38B,KAAK,CAAE,sCAAqC28B,QAAS,GAAhD,CAAZ;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASC,6BAAT,GAAyC;AACrC,SAAO58B,KAAK,CAAC,6EACT,wEADS,GAET,cAFQ,CAAZ;AAGH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAAS68B,kCAAT,CAA4CC,GAA5C,EAAiD;AAC7C,SAAO98B,KAAK,CAAE,wEAAD,GACR,kDAAiD88B,GAAI,IAD9C,CAAZ;AAEH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASC,sCAAT,CAAgDC,OAAhD,EAAyD;AACrD,SAAOh9B,KAAK,CAAE,0EAAD,GACR,kDAAiDg9B,OAAQ,IADlD,CAAZ;AAEH;AACD;AACA;AACA;AACA;;;AACA,MAAMC,aAAN,CAAoB;AAChBtyC,EAAAA,WAAW,CAACmyC,GAAD,EAAMI,OAAN,EAAepvC,OAAf,EAAwB;AAC/B,SAAKgvC,GAAL,GAAWA,GAAX;AACA,SAAKI,OAAL,GAAeA,OAAf;AACA,SAAKpvC,OAAL,GAAeA,OAAf;AACH;;AALe;AAOpB;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMqvC,eAAN,CAAsB;AAClBxyC,EAAAA,WAAW,CAACyyC,WAAD,EAAcC,UAAd,EAA0BvtB,QAA1B,EAAoCwtB,aAApC,EAAmD;AAC1D,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA;AACR;AACA;;AACQ,SAAKC,eAAL,GAAuB,IAAIz7B,GAAJ,EAAvB;AACA;AACR;AACA;AACA;;AACQ,SAAK07B,eAAL,GAAuB,IAAI17B,GAAJ,EAAvB;AACA;;AACA,SAAK27B,iBAAL,GAAyB,IAAI37B,GAAJ,EAAzB;AACA;;AACA,SAAK47B,qBAAL,GAA6B,IAAI57B,GAAJ,EAA7B;AACA;;AACA,SAAK67B,sBAAL,GAA8B,IAAI77B,GAAJ,EAA9B;AACA;;AACA,SAAK87B,UAAL,GAAkB,EAAlB;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKC,oBAAL,GAA4B,gBAA5B;AACA,SAAKr8B,SAAL,GAAiBsO,QAAjB;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIguB,EAAAA,UAAU,CAACnB,QAAD,EAAWG,GAAX,EAAgBhvC,OAAhB,EAAyB;AAC/B,WAAO,KAAKiwC,qBAAL,CAA2B,EAA3B,EAA+BpB,QAA/B,EAAyCG,GAAzC,EAA8ChvC,OAA9C,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIkwC,EAAAA,iBAAiB,CAACrB,QAAD,EAAWK,OAAX,EAAoBlvC,OAApB,EAA6B;AAC1C,WAAO,KAAKmwC,4BAAL,CAAkC,EAAlC,EAAsCtB,QAAtC,EAAgDK,OAAhD,EAAyDlvC,OAAzD,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIiwC,EAAAA,qBAAqB,CAACG,SAAD,EAAYvB,QAAZ,EAAsBG,GAAtB,EAA2BhvC,OAA3B,EAAoC;AACrD,WAAO,KAAKqwC,iBAAL,CAAuBD,SAAvB,EAAkCvB,QAAlC,EAA4C,IAAIM,aAAJ,CAAkBH,GAAlB,EAAuB,IAAvB,EAA6BhvC,OAA7B,CAA5C,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIswC,EAAAA,kBAAkB,CAACC,QAAD,EAAW;AACzB,SAAKT,UAAL,CAAgBpuC,IAAhB,CAAqB6uC,QAArB;;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIJ,EAAAA,4BAA4B,CAACC,SAAD,EAAYvB,QAAZ,EAAsBK,OAAtB,EAA+BlvC,OAA/B,EAAwC;AAChE,UAAMwwC,YAAY,GAAG,KAAKjB,UAAL,CAAgBkB,QAAhB,CAAyBhD,+DAAzB,EAA+CyB,OAA/C,CAArB,CADgE,CAEhE;;;AACA,QAAI,CAACsB,YAAL,EAAmB;AACf,YAAMvB,sCAAsC,CAACC,OAAD,CAA5C;AACH,KAL+D,CAMhE;;;AACA,UAAMyB,cAAc,GAAGjC,qBAAqB,CAAC8B,YAAD,CAA5C;AACA,WAAO,KAAKH,iBAAL,CAAuBD,SAAvB,EAAkCvB,QAAlC,EAA4C,IAAIM,aAAJ,CAAkB,EAAlB,EAAsBwB,cAAtB,EAAsC3wC,OAAtC,CAA5C,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACI4wC,EAAAA,aAAa,CAAC5B,GAAD,EAAMhvC,OAAN,EAAe;AACxB,WAAO,KAAK6wC,wBAAL,CAA8B,EAA9B,EAAkC7B,GAAlC,EAAuChvC,OAAvC,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACI8wC,EAAAA,oBAAoB,CAAC5B,OAAD,EAAUlvC,OAAV,EAAmB;AACnC,WAAO,KAAK+wC,+BAAL,CAAqC,EAArC,EAAyC7B,OAAzC,EAAkDlvC,OAAlD,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACI6wC,EAAAA,wBAAwB,CAACT,SAAD,EAAYpB,GAAZ,EAAiBhvC,OAAjB,EAA0B;AAC9C,WAAO,KAAKgxC,oBAAL,CAA0BZ,SAA1B,EAAqC,IAAIjB,aAAJ,CAAkBH,GAAlB,EAAuB,IAAvB,EAA6BhvC,OAA7B,CAArC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACI+wC,EAAAA,+BAA+B,CAACX,SAAD,EAAYlB,OAAZ,EAAqBlvC,OAArB,EAA8B;AACzD,UAAMwwC,YAAY,GAAG,KAAKjB,UAAL,CAAgBkB,QAAhB,CAAyBhD,+DAAzB,EAA+CyB,OAA/C,CAArB;;AACA,QAAI,CAACsB,YAAL,EAAmB;AACf,YAAMvB,sCAAsC,CAACC,OAAD,CAA5C;AACH,KAJwD,CAKzD;;;AACA,UAAMyB,cAAc,GAAGjC,qBAAqB,CAAC8B,YAAD,CAA5C;AACA,WAAO,KAAKQ,oBAAL,CAA0BZ,SAA1B,EAAqC,IAAIjB,aAAJ,CAAkB,EAAlB,EAAsBwB,cAAtB,EAAsC3wC,OAAtC,CAArC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIixC,EAAAA,sBAAsB,CAACC,KAAD,EAAQC,SAAS,GAAGD,KAApB,EAA2B;AAC7C,SAAKrB,sBAAL,CAA4B70B,GAA5B,CAAgCk2B,KAAhC,EAAuCC,SAAvC;;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,qBAAqB,CAACF,KAAD,EAAQ;AACzB,WAAO,KAAKrB,sBAAL,CAA4B/2B,GAA5B,CAAgCo4B,KAAhC,KAA0CA,KAAjD;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIG,EAAAA,sBAAsB,CAACF,SAAD,EAAY;AAC9B,SAAKpB,oBAAL,GAA4BoB,SAA5B;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIG,EAAAA,sBAAsB,GAAG;AACrB,WAAO,KAAKvB,oBAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIwB,EAAAA,iBAAiB,CAACC,OAAD,EAAU;AACvB,UAAMxC,GAAG,GAAG,KAAKO,UAAL,CAAgBkB,QAAhB,CAAyBhD,uEAAzB,EAAuD+D,OAAvD,CAAZ;;AACA,QAAI,CAACxC,GAAL,EAAU;AACN,YAAMD,kCAAkC,CAACyC,OAAD,CAAxC;AACH;;AACD,UAAME,UAAU,GAAG,KAAK/B,iBAAL,CAAuB72B,GAAvB,CAA2Bk2B,GAA3B,CAAnB;;AACA,QAAI0C,UAAJ,EAAgB;AACZ,aAAOlrC,wCAAE,CAACmrC,QAAQ,CAACD,UAAD,CAAT,CAAT;AACH;;AACD,WAAO,KAAKE,sBAAL,CAA4B,IAAIzC,aAAJ,CAAkBqC,OAAlB,EAA2B,IAA3B,CAA5B,EAA8Dz3C,IAA9D,CAAmE8zC,mDAAG,CAACgE,GAAG,IAAI,KAAKlC,iBAAL,CAAuB30B,GAAvB,CAA2Bg0B,GAA3B,EAAgC6C,GAAhC,CAAR,CAAtE,EAAqH7vC,mDAAG,CAAC6vC,GAAG,IAAIF,QAAQ,CAACE,GAAD,CAAhB,CAAxH,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,eAAe,CAAC5vC,IAAD,EAAOkuC,SAAS,GAAG,EAAnB,EAAuB;AAClC,UAAM3pB,GAAG,GAAGsrB,OAAO,CAAC3B,SAAD,EAAYluC,IAAZ,CAAnB;;AACA,QAAI8vC,MAAM,GAAG,KAAKvC,eAAL,CAAqB32B,GAArB,CAAyB2N,GAAzB,CAAb,CAFkC,CAGlC;;;AACA,QAAIurB,MAAJ,EAAY;AACR,aAAO,KAAKC,iBAAL,CAAuBD,MAAvB,CAAP;AACH,KANiC,CAOlC;;;AACAA,IAAAA,MAAM,GAAG,KAAKE,2BAAL,CAAiC9B,SAAjC,EAA4CluC,IAA5C,CAAT;;AACA,QAAI8vC,MAAJ,EAAY;AACR,WAAKvC,eAAL,CAAqBz0B,GAArB,CAAyByL,GAAzB,EAA8BurB,MAA9B;;AACA,aAAO,KAAKC,iBAAL,CAAuBD,MAAvB,CAAP;AACH,KAZiC,CAalC;;;AACA,UAAMG,cAAc,GAAG,KAAKzC,eAAL,CAAqB52B,GAArB,CAAyBs3B,SAAzB,CAAvB;;AACA,QAAI+B,cAAJ,EAAoB;AAChB,aAAO,KAAKC,yBAAL,CAA+BlwC,IAA/B,EAAqCiwC,cAArC,CAAP;AACH;;AACD,WAAOxE,gDAAU,CAACiB,2BAA2B,CAACnoB,GAAD,CAA5B,CAAjB;AACH;;AACDpnB,EAAAA,WAAW,GAAG;AACV,SAAKywC,UAAL,GAAkB,EAAlB;;AACA,SAAKL,eAAL,CAAqB93B,KAArB;;AACA,SAAK+3B,eAAL,CAAqB/3B,KAArB;;AACA,SAAKg4B,iBAAL,CAAuBh4B,KAAvB;AACH;AACD;AACJ;AACA;;;AACIs6B,EAAAA,iBAAiB,CAACD,MAAD,EAAS;AACtB,QAAIA,MAAM,CAAC5C,OAAX,EAAoB;AAChB;AACA,aAAO5oC,wCAAE,CAACmrC,QAAQ,CAAC,KAAKU,qBAAL,CAA2BL,MAA3B,CAAD,CAAT,CAAT;AACH,KAHD,MAIK;AACD;AACA,aAAO,KAAKJ,sBAAL,CAA4BI,MAA5B,EAAoCj4C,IAApC,CAAyCiI,mDAAG,CAAC6vC,GAAG,IAAIF,QAAQ,CAACE,GAAD,CAAhB,CAA5C,CAAP;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIO,EAAAA,yBAAyB,CAAClwC,IAAD,EAAOiwC,cAAP,EAAuB;AAC5C;AACA;AACA,UAAMG,SAAS,GAAG,KAAKC,8BAAL,CAAoCrwC,IAApC,EAA0CiwC,cAA1C,CAAlB;;AACA,QAAIG,SAAJ,EAAe;AACX;AACA;AACA;AACA,aAAO9rC,wCAAE,CAAC8rC,SAAD,CAAT;AACH,KAT2C,CAU5C;AACA;;;AACA,UAAME,oBAAoB,GAAGL,cAAc,CACtCl2B,MADwB,CACjBw2B,aAAa,IAAI,CAACA,aAAa,CAACrD,OADf,EAExBptC,GAFwB,CAEpBywC,aAAa,IAAI;AACtB,aAAO,KAAKC,yBAAL,CAA+BD,aAA/B,EAA8C14C,IAA9C,CAAmD+zC,0DAAU,CAAE6E,GAAD,IAAS;AAC1E,cAAM3D,GAAG,GAAG,KAAKO,UAAL,CAAgBkB,QAAhB,CAAyBhD,uEAAzB,EAAuDgF,aAAa,CAACzD,GAArE,CAAZ,CAD0E,CAE1E;AACA;;;AACA,cAAM7kB,YAAY,GAAI,yBAAwB6kB,GAAI,YAAW2D,GAAG,CAACxa,OAAQ,EAAzE;;AACA,aAAKqX,aAAL,CAAmBoD,WAAnB,CAA+B,IAAI1gC,KAAJ,CAAUiY,YAAV,CAA/B;;AACA,eAAO3jB,wCAAE,CAAC,IAAD,CAAT;AACH,OAPmE,CAA7D,CAAP;AAQH,KAX4B,CAA7B,CAZ4C,CAwB5C;AACA;;AACA,WAAO5N,8CAAQ,CAAC45C,oBAAD,CAAR,CAA+Bz4C,IAA/B,CAAoCiI,mDAAG,CAAC,MAAM;AACjD,YAAM6wC,SAAS,GAAG,KAAKN,8BAAL,CAAoCrwC,IAApC,EAA0CiwC,cAA1C,CAAlB,CADiD,CAEjD;;;AACA,UAAI,CAACU,SAAL,EAAgB;AACZ,cAAMjE,2BAA2B,CAAC1sC,IAAD,CAAjC;AACH;;AACD,aAAO2wC,SAAP;AACH,KAP6C,CAAvC,CAAP;AAQH;AACD;AACJ;AACA;AACA;AACA;;;AACIN,EAAAA,8BAA8B,CAAC1D,QAAD,EAAWsD,cAAX,EAA2B;AACrD;AACA,SAAK,IAAI1wC,CAAC,GAAG0wC,cAAc,CAACh5C,MAAf,GAAwB,CAArC,EAAwCsI,CAAC,IAAI,CAA7C,EAAgDA,CAAC,EAAjD,EAAqD;AACjD,YAAMuwC,MAAM,GAAGG,cAAc,CAAC1wC,CAAD,CAA7B,CADiD,CAEjD;AACA;AACA;AACA;;AACA,UAAIuwC,MAAM,CAAC5C,OAAP,IAAkB4C,MAAM,CAAC5C,OAAP,CAAetlB,QAAf,GAA0B9a,OAA1B,CAAkC6/B,QAAlC,IAA8C,CAAC,CAArE,EAAwE;AACpE,cAAMgD,GAAG,GAAG,KAAKQ,qBAAL,CAA2BL,MAA3B,CAAZ;;AACA,cAAMa,SAAS,GAAG,KAAKC,sBAAL,CAA4BjB,GAA5B,EAAiChD,QAAjC,EAA2CmD,MAAM,CAAChyC,OAAlD,CAAlB;;AACA,YAAI6yC,SAAJ,EAAe;AACX,iBAAOA,SAAP;AACH;AACJ;AACJ;;AACD,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIjB,EAAAA,sBAAsB,CAACI,MAAD,EAAS;AAC3B,WAAO,KAAKe,UAAL,CAAgBf,MAAhB,EAAwBj4C,IAAxB,CAA6B8zC,mDAAG,CAACuB,OAAO,IAAK4C,MAAM,CAAC5C,OAAP,GAAiBA,OAA9B,CAAhC,EAAyEptC,mDAAG,CAAC,MAAM,KAAKqwC,qBAAL,CAA2BL,MAA3B,CAAP,CAA5E,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIU,EAAAA,yBAAyB,CAACV,MAAD,EAAS;AAC9B,QAAIA,MAAM,CAAC5C,OAAX,EAAoB;AAChB,aAAO5oC,wCAAE,CAAC,IAAD,CAAT;AACH;;AACD,WAAO,KAAKusC,UAAL,CAAgBf,MAAhB,EAAwBj4C,IAAxB,CAA6B8zC,mDAAG,CAACuB,OAAO,IAAK4C,MAAM,CAAC5C,OAAP,GAAiBA,OAA9B,CAAhC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACI0D,EAAAA,sBAAsB,CAACE,OAAD,EAAUnE,QAAV,EAAoB7uC,OAApB,EAA6B;AAC/C;AACA;AACA,UAAMizC,UAAU,GAAGD,OAAO,CAACliC,aAAR,CAAuB,QAAO+9B,QAAS,IAAvC,CAAnB;;AACA,QAAI,CAACoE,UAAL,EAAiB;AACb,aAAO,IAAP;AACH,KAN8C,CAO/C;AACA;;;AACA,UAAMC,WAAW,GAAGD,UAAU,CAACrvB,SAAX,CAAqB,IAArB,CAApB;AACAsvB,IAAAA,WAAW,CAACjwB,eAAZ,CAA4B,IAA5B,EAV+C,CAW/C;AACA;;AACA,QAAIiwB,WAAW,CAAC/9B,QAAZ,CAAqBmS,WAArB,OAAuC,KAA3C,EAAkD;AAC9C,aAAO,KAAK6rB,iBAAL,CAAuBD,WAAvB,EAAoClzC,OAApC,CAAP;AACH,KAf8C,CAgB/C;AACA;AACA;;;AACA,QAAIkzC,WAAW,CAAC/9B,QAAZ,CAAqBmS,WAArB,OAAuC,QAA3C,EAAqD;AACjD,aAAO,KAAK6rB,iBAAL,CAAuB,KAAKC,aAAL,CAAmBF,WAAnB,CAAvB,EAAwDlzC,OAAxD,CAAP;AACH,KArB8C,CAsB/C;AACA;AACA;AACA;AACA;;;AACA,UAAM6xC,GAAG,GAAG,KAAKwB,qBAAL,CAA2B3E,qBAAqB,CAAC,aAAD,CAAhD,CAAZ,CA3B+C,CA4B/C;;;AACAmD,IAAAA,GAAG,CAACxzB,WAAJ,CAAgB60B,WAAhB;AACA,WAAO,KAAKC,iBAAL,CAAuBtB,GAAvB,EAA4B7xC,OAA5B,CAAP;AACH;AACD;AACJ;AACA;;;AACIqzC,EAAAA,qBAAqB,CAACC,GAAD,EAAM;AACvB,UAAMC,GAAG,GAAG,KAAK7/B,SAAL,CAAe0K,aAAf,CAA6B,KAA7B,CAAZ;;AACAm1B,IAAAA,GAAG,CAACC,SAAJ,GAAgBF,GAAhB;AACA,UAAMzB,GAAG,GAAG0B,GAAG,CAACziC,aAAJ,CAAkB,KAAlB,CAAZ,CAHuB,CAIvB;;AACA,QAAI,CAAC+gC,GAAL,EAAU;AACN,YAAM3/B,KAAK,CAAC,qBAAD,CAAX;AACH;;AACD,WAAO2/B,GAAP;AACH;AACD;AACJ;AACA;;;AACIuB,EAAAA,aAAa,CAAC1lC,OAAD,EAAU;AACnB,UAAMmkC,GAAG,GAAG,KAAKwB,qBAAL,CAA2B3E,qBAAqB,CAAC,aAAD,CAAhD,CAAZ;;AACA,UAAM+E,UAAU,GAAG/lC,OAAO,CAAC+lC,UAA3B,CAFmB,CAGnB;;AACA,SAAK,IAAIhyC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgyC,UAAU,CAACt6C,MAA/B,EAAuCsI,CAAC,EAAxC,EAA4C;AACxC,YAAM;AAAES,QAAAA,IAAF;AAAQtI,QAAAA;AAAR,UAAkB65C,UAAU,CAAChyC,CAAD,CAAlC;;AACA,UAAIS,IAAI,KAAK,IAAb,EAAmB;AACf2vC,QAAAA,GAAG,CAAC1oC,YAAJ,CAAiBjH,IAAjB,EAAuBtI,KAAvB;AACH;AACJ;;AACD,SAAK,IAAI6H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiM,OAAO,CAACgmC,UAAR,CAAmBv6C,MAAvC,EAA+CsI,CAAC,EAAhD,EAAoD;AAChD,UAAIiM,OAAO,CAACgmC,UAAR,CAAmBjyC,CAAnB,EAAsBsH,QAAtB,KAAmC,KAAK2K,SAAL,CAAelG,YAAtD,EAAoE;AAChEqkC,QAAAA,GAAG,CAACxzB,WAAJ,CAAgB3Q,OAAO,CAACgmC,UAAR,CAAmBjyC,CAAnB,EAAsBmiB,SAAtB,CAAgC,IAAhC,CAAhB;AACH;AACJ;;AACD,WAAOiuB,GAAP;AACH;AACD;AACJ;AACA;;;AACIsB,EAAAA,iBAAiB,CAACtB,GAAD,EAAM7xC,OAAN,EAAe;AAC5B6xC,IAAAA,GAAG,CAAC1oC,YAAJ,CAAiB,KAAjB,EAAwB,EAAxB;AACA0oC,IAAAA,GAAG,CAAC1oC,YAAJ,CAAiB,QAAjB,EAA2B,MAA3B;AACA0oC,IAAAA,GAAG,CAAC1oC,YAAJ,CAAiB,OAAjB,EAA0B,MAA1B;AACA0oC,IAAAA,GAAG,CAAC1oC,YAAJ,CAAiB,qBAAjB,EAAwC,eAAxC;AACA0oC,IAAAA,GAAG,CAAC1oC,YAAJ,CAAiB,WAAjB,EAA8B,OAA9B,EAL4B,CAKY;;AACxC,QAAInJ,OAAO,IAAIA,OAAO,CAAC2zC,OAAvB,EAAgC;AAC5B9B,MAAAA,GAAG,CAAC1oC,YAAJ,CAAiB,SAAjB,EAA4BnJ,OAAO,CAAC2zC,OAApC;AACH;;AACD,WAAO9B,GAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIkB,EAAAA,UAAU,CAACa,UAAD,EAAa;AACnB,UAAM;AAAE5E,MAAAA,GAAG,EAAEwC,OAAP;AAAgBxxC,MAAAA;AAAhB,QAA4B4zC,UAAlC;AACA,UAAMC,eAAe,GAAG7zC,OAAO,EAAE6zC,eAAT,IAA4B,KAApD;;AACA,QAAI,CAAC,KAAKvE,WAAV,EAAuB;AACnB,YAAMR,6BAA6B,EAAnC;AACH,KALkB,CAMnB;;;AACA,QAAI0C,OAAO,IAAI,IAAf,EAAqB;AACjB,YAAMt/B,KAAK,CAAE,+BAA8Bs/B,OAAQ,IAAxC,CAAX;AACH;;AACD,UAAMxC,GAAG,GAAG,KAAKO,UAAL,CAAgBkB,QAAhB,CAAyBhD,uEAAzB,EAAuD+D,OAAvD,CAAZ,CAVmB,CAWnB;;;AACA,QAAI,CAACxC,GAAL,EAAU;AACN,YAAMD,kCAAkC,CAACyC,OAAD,CAAxC;AACH,KAdkB,CAenB;AACA;AACA;;;AACA,UAAMsC,eAAe,GAAG,KAAKlE,qBAAL,CAA2B92B,GAA3B,CAA+Bk2B,GAA/B,CAAxB;;AACA,QAAI8E,eAAJ,EAAqB;AACjB,aAAOA,eAAP;AACH;;AACD,UAAMC,GAAG,GAAG,KAAKzE,WAAL,CAAiBx2B,GAAjB,CAAqBk2B,GAArB,EAA0B;AAAEgF,MAAAA,YAAY,EAAE,MAAhB;AAAwBH,MAAAA;AAAxB,KAA1B,EAAqE95C,IAArE,CAA0EiI,mDAAG,CAAC6vC,GAAG,IAAI;AAC7F;AACA;AACA,aAAOnD,qBAAqB,CAACmD,GAAD,CAA5B;AACH,KAJwF,CAA7E,EAIR9D,wDAAQ,CAAC,MAAM,KAAK6B,qBAAL,CAA2Bz2B,MAA3B,CAAkC61B,GAAlC,CAAP,CAJA,EAIgDhB,qDAAK,EAJrD,CAAZ;;AAKA,SAAK4B,qBAAL,CAA2B50B,GAA3B,CAA+Bg0B,GAA/B,EAAoC+E,GAApC;;AACA,WAAOA,GAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACI1D,EAAAA,iBAAiB,CAACD,SAAD,EAAYvB,QAAZ,EAAsBmD,MAAtB,EAA8B;AAC3C,SAAKvC,eAAL,CAAqBz0B,GAArB,CAAyB+2B,OAAO,CAAC3B,SAAD,EAAYvB,QAAZ,CAAhC,EAAuDmD,MAAvD;;AACA,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIhB,EAAAA,oBAAoB,CAACZ,SAAD,EAAY4B,MAAZ,EAAoB;AACpC,UAAMiC,eAAe,GAAG,KAAKvE,eAAL,CAAqB52B,GAArB,CAAyBs3B,SAAzB,CAAxB;;AACA,QAAI6D,eAAJ,EAAqB;AACjBA,MAAAA,eAAe,CAACvyC,IAAhB,CAAqBswC,MAArB;AACH,KAFD,MAGK;AACD,WAAKtC,eAAL,CAAqB10B,GAArB,CAAyBo1B,SAAzB,EAAoC,CAAC4B,MAAD,CAApC;AACH;;AACD,WAAO,IAAP;AACH;AACD;;;AACAK,EAAAA,qBAAqB,CAACL,MAAD,EAAS;AAC1B,QAAI,CAACA,MAAM,CAACkC,UAAZ,EAAwB;AACpB,YAAMrC,GAAG,GAAG,KAAKwB,qBAAL,CAA2BrB,MAAM,CAAC5C,OAAlC,CAAZ;;AACA,WAAK+D,iBAAL,CAAuBtB,GAAvB,EAA4BG,MAAM,CAAChyC,OAAnC;;AACAgyC,MAAAA,MAAM,CAACkC,UAAP,GAAoBrC,GAApB;AACH;;AACD,WAAOG,MAAM,CAACkC,UAAd;AACH;AACD;;;AACAhC,EAAAA,2BAA2B,CAAC9B,SAAD,EAAYluC,IAAZ,EAAkB;AACzC,SAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKquC,UAAL,CAAgB32C,MAApC,EAA4CsI,CAAC,EAA7C,EAAiD;AAC7C,YAAMxI,MAAM,GAAG,KAAK62C,UAAL,CAAgBruC,CAAhB,EAAmBS,IAAnB,EAAyBkuC,SAAzB,CAAf;;AACA,UAAIn3C,MAAJ,EAAY;AACR,eAAOk7C,oBAAoB,CAACl7C,MAAD,CAApB,GACD,IAAIk2C,aAAJ,CAAkBl2C,MAAM,CAAC+1C,GAAzB,EAA8B,IAA9B,EAAoC/1C,MAAM,CAAC+G,OAA3C,CADC,GAED,IAAImvC,aAAJ,CAAkBl2C,MAAlB,EAA0B,IAA1B,CAFN;AAGH;AACJ;;AACD,WAAOY,SAAP;AACH;;AAndiB;;AAqdtBw1C,eAAe,CAAClyC,IAAhB;AAAA,mBAA4GkyC,eAA5G,EAAkGp0C,sDAAlG,CAA6IiB,4DAA7I,MAAkGjB,sDAAlG,CAAuLkB,oEAAvL,GAAkGlB,sDAAlG,CAAmNwK,sDAAnN,MAAkGxK,sDAAlG,CAAwPA,uDAAxP;AAAA;;AACAo0C,eAAe,CAAC/kC,KAAhB,kBADkGrP,gEAClG;AAAA,SAAgHo0C,eAAhH;AAAA,WAAgHA,eAAhH;AAAA,cAA6I;AAA7I;;AACA;AAAA,qDAFkGp0C,+DAElG,CAA2Fo0C,eAA3F,EAAwH,CAAC;AAC7GhyC,IAAAA,IAAI,EAAEuI,qDADuG;AAE7G/M,IAAAA,IAAI,EAAE,CAAC;AAAE6oB,MAAAA,UAAU,EAAE;AAAd,KAAD;AAFuG,GAAD,CAAxH,EAG4B,YAAY;AAAE,WAAO,CAAC;AAAErkB,MAAAA,IAAI,EAAEnB,4DAAR;AAAuBsH,MAAAA,UAAU,EAAE,CAAC;AAClEnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADoD,OAAD;AAAnC,KAAD,EAE3B;AAAE+B,MAAAA,IAAI,EAAElB,oEAAe+xC;AAAvB,KAF2B,EAEA;AAAE7wC,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC7DnG,QAAAA,IAAI,EAAE/B,mDAAQA;AAD+C,OAAD,EAE7D;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC4M,sDAAD;AAFP,OAF6D;AAA/B,KAFA,EAO3B;AAAEpI,MAAAA,IAAI,EAAEpC,uDAAeyyC;AAAvB,KAP2B,CAAP;AAOS,GAVnD;AAAA;AAWA;;;AACA,SAAS0G,8BAAT,CAAwCC,cAAxC,EAAwDC,UAAxD,EAAoEC,SAApE,EAA+EC,YAA/E,EAA6FxyB,QAA7F,EAAuG;AACnG,SAAOqyB,cAAc,IAAI,IAAIhF,eAAJ,CAAoBiF,UAApB,EAAgCC,SAAhC,EAA2CvyB,QAA3C,EAAqDwyB,YAArD,CAAzB;AACH;AACD;;;AACA,MAAMC,sBAAsB,GAAG;AAC3B;AACA9xC,EAAAA,OAAO,EAAE0sC,eAFkB;AAG3BqF,EAAAA,IAAI,EAAE,CACF,CAAC,IAAIp5C,mDAAJ,EAAD,EAAiB,IAAI4K,mDAAJ,EAAjB,EAAiCmpC,eAAjC,CADE,EAEF,CAAC,IAAI/zC,mDAAJ,EAAD,EAAiB2yC,4DAAjB,CAFE,EAGFC,oEAHE,EAIFR,uDAJE,EAKF,CAAC,IAAIpyC,mDAAJ,EAAD,EAAiBmK,sDAAjB,CALE,CAHqB;AAU3BkgC,EAAAA,UAAU,EAAEyO;AAVe,CAA/B;AAYA;;AACA,SAASzC,QAAT,CAAkBE,GAAlB,EAAuB;AACnB,SAAOA,GAAG,CAACjuB,SAAJ,CAAc,IAAd,CAAP;AACH;AACD;;;AACA,SAASmuB,OAAT,CAAiB3B,SAAjB,EAA4BluC,IAA5B,EAAkC;AAC9B,SAAOkuC,SAAS,GAAG,GAAZ,GAAkBluC,IAAzB;AACH;;AACD,SAASiyC,oBAAT,CAA8Bv6C,KAA9B,EAAqC;AACjC,SAAO,CAAC,EAAEA,KAAK,CAACo1C,GAAN,IAAap1C,KAAK,CAACoG,OAArB,CAAR;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,MAAM20C,YAAY,GAAG3O,mEAAU,CAAC,MAAM;AAClCnpC,EAAAA,WAAW,CAACW,WAAD,EAAc;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AAHiC,CAAP,CAA/B;AAKA;AACA;AACA;AACA;AACA;;;AACA,MAAMo3C,iBAAiB,GAAG,IAAIlvC,yDAAJ,CAAmB,mBAAnB,EAAwC;AAC9Dgc,EAAAA,UAAU,EAAE,MADkD;AAE9DmzB,EAAAA,OAAO,EAAEC;AAFqD,CAAxC,CAA1B;AAIA;;AACA,SAASA,yBAAT,GAAqC;AACjC,QAAMphC,SAAS,GAAGsS,qDAAM,CAACvgB,sDAAD,CAAxB;;AACA,QAAMsvC,SAAS,GAAGrhC,SAAS,GAAGA,SAAS,CAACshC,QAAb,GAAwB,IAAnD;;AACA,SAAO;AACH;AACA;AACAC,IAAAA,WAAW,EAAE,MAAOF,SAAS,GAAGA,SAAS,CAACG,QAAV,GAAqBH,SAAS,CAACI,MAAlC,GAA2C;AAHrE,GAAP;AAKH;AACD;;;AACA,MAAMC,iBAAiB,GAAG,CACtB,WADsB,EAEtB,eAFsB,EAGtB,KAHsB,EAItB,QAJsB,EAKtB,MALsB,EAMtB,QANsB,EAOtB,QAPsB,EAQtB,cARsB,EAStB,YATsB,EAUtB,YAVsB,EAWtB,MAXsB,EAYtB,QAZsB,CAA1B;AAcA;;AACA,MAAMC,wBAAwB,GAAGD,iBAAiB,CAACpzC,GAAlB,CAAsBszC,IAAI,IAAK,IAAGA,IAAK,GAAvC,EAA2Cv0C,IAA3C,CAAgD,IAAhD,CAAjC;AACA;;AACA,MAAMw0C,cAAc,GAAG,2BAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMzyC,OAAN,SAAsB6xC,YAAtB,CAAmC;AAC/B93C,EAAAA,WAAW,CAAC8L,UAAD,EAAa6sC,aAAb,EAA4BC,UAA5B,EAAwCV,SAAxC,EAAmDvF,aAAnD,EAAkE;AACzE,UAAM7mC,UAAN;AACA,SAAK6sC,aAAL,GAAqBA,aAArB;AACA,SAAKT,SAAL,GAAiBA,SAAjB;AACA,SAAKvF,aAAL,GAAqBA,aAArB;AACA,SAAKkG,OAAL,GAAe,KAAf;AACA;;AACA,SAAKC,iBAAL,GAAyB/H,qDAAzB,CAPyE,CAQzE;AACA;;AACA,QAAI,CAAC6H,UAAL,EAAiB;AACb9sC,MAAAA,UAAU,CAACzI,aAAX,CAAyBiJ,YAAzB,CAAsC,aAAtC,EAAqD,MAArD;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACc,MAANysC,MAAM,GAAG;AACT,WAAO,KAAKF,OAAZ;AACH;;AACS,MAANE,MAAM,CAACA,MAAD,EAAS;AACf,SAAKF,OAAL,GAAe16C,6EAAqB,CAAC46C,MAAD,CAApC;AACH;AACD;;;AACW,MAAPC,OAAO,GAAG;AACV,WAAO,KAAKC,QAAZ;AACH;;AACU,MAAPD,OAAO,CAACj8C,KAAD,EAAQ;AACf,QAAIA,KAAK,KAAK,KAAKk8C,QAAnB,EAA6B;AACzB,UAAIl8C,KAAJ,EAAW;AACP,aAAKm8C,cAAL,CAAoBn8C,KAApB;AACH,OAFD,MAGK,IAAI,KAAKk8C,QAAT,EAAmB;AACpB,aAAKE,gBAAL;AACH;;AACD,WAAKF,QAAL,GAAgBl8C,KAAhB;AACH;AACJ;AACD;;;AACW,MAAPq8C,OAAO,GAAG;AACV,WAAO,KAAKC,QAAZ;AACH;;AACU,MAAPD,OAAO,CAACr8C,KAAD,EAAQ;AACf,UAAM69B,QAAQ,GAAG,KAAK0e,iBAAL,CAAuBv8C,KAAvB,CAAjB;;AACA,QAAI69B,QAAQ,KAAK,KAAKye,QAAtB,EAAgC;AAC5B,WAAKA,QAAL,GAAgBze,QAAhB;;AACA,WAAK2e,sBAAL;AACH;AACJ;AACD;;;AACY,MAARC,QAAQ,GAAG;AACX,WAAO,KAAKC,SAAZ;AACH;;AACW,MAARD,QAAQ,CAACz8C,KAAD,EAAQ;AAChB,UAAM69B,QAAQ,GAAG,KAAK0e,iBAAL,CAAuBv8C,KAAvB,CAAjB;;AACA,QAAI69B,QAAQ,KAAK,KAAK6e,SAAtB,EAAiC;AAC7B,WAAKA,SAAL,GAAiB7e,QAAjB;;AACA,WAAK2e,sBAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIG,EAAAA,cAAc,CAAC1H,QAAD,EAAW;AACrB,QAAI,CAACA,QAAL,EAAe;AACX,aAAO,CAAC,EAAD,EAAK,EAAL,CAAP;AACH;;AACD,UAAM2H,KAAK,GAAG3H,QAAQ,CAAC3a,KAAT,CAAe,GAAf,CAAd;;AACA,YAAQsiB,KAAK,CAACr9C,MAAd;AACI,WAAK,CAAL;AACI,eAAO,CAAC,EAAD,EAAKq9C,KAAK,CAAC,CAAD,CAAV,CAAP;AAAuB;;AAC3B,WAAK,CAAL;AACI,eAAOA,KAAP;;AACJ;AACI,cAAMtkC,KAAK,CAAE,uBAAsB28B,QAAS,GAAjC,CAAX;AAAiD;AANzD;AAQH;;AACD54B,EAAAA,QAAQ,GAAG;AACP;AACA;AACA,SAAKmgC,sBAAL;AACH;;AACDK,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,cAAc,GAAG,KAAKC,+BAA5B;;AACA,QAAID,cAAc,IAAIA,cAAc,CAAC5xC,IAArC,EAA2C;AACvC,YAAM8xC,OAAO,GAAG,KAAK7B,SAAL,CAAeE,WAAf,EAAhB,CADuC,CAEvC;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAI2B,OAAO,KAAK,KAAKC,aAArB,EAAoC;AAChC,aAAKA,aAAL,GAAqBD,OAArB;;AACA,aAAKE,wBAAL,CAA8BF,OAA9B;AACH;AACJ;AACJ;;AACDv3C,EAAAA,WAAW,GAAG;AACV,SAAKs2C,iBAAL,CAAuBn5B,WAAvB;;AACA,QAAI,KAAKm6B,+BAAT,EAA0C;AACtC,WAAKA,+BAAL,CAAqCh/B,KAArC;AACH;AACJ;;AACDo/B,EAAAA,cAAc,GAAG;AACb,WAAO,CAAC,KAAKlB,OAAb;AACH;;AACDmB,EAAAA,cAAc,CAACnF,GAAD,EAAM;AAChB,SAAKmE,gBAAL,GADgB,CAEhB;AACA;;;AACA,UAAMnpB,IAAI,GAAG,KAAKkoB,SAAL,CAAeE,WAAf,EAAb;;AACA,SAAK4B,aAAL,GAAqBhqB,IAArB;;AACA,SAAKoqB,oCAAL,CAA0CpF,GAA1C;;AACA,SAAKiF,wBAAL,CAA8BjqB,IAA9B;;AACA,SAAKrvB,WAAL,CAAiB0C,aAAjB,CAA+Bme,WAA/B,CAA2CwzB,GAA3C;AACH;;AACDmE,EAAAA,gBAAgB,GAAG;AACf,UAAMkB,aAAa,GAAG,KAAK15C,WAAL,CAAiB0C,aAAvC;AACA,QAAIi3C,UAAU,GAAGD,aAAa,CAACxD,UAAd,CAAyBv6C,MAA1C;;AACA,QAAI,KAAKw9C,+BAAT,EAA0C;AACtC,WAAKA,+BAAL,CAAqCh/B,KAArC;AACH,KALc,CAMf;AACA;;;AACA,WAAOw/B,UAAU,EAAjB,EAAqB;AACjB,YAAMxhB,KAAK,GAAGuhB,aAAa,CAACxD,UAAd,CAAyByD,UAAzB,CAAd,CADiB,CAEjB;AACA;;AACA,UAAIxhB,KAAK,CAAC5sB,QAAN,KAAmB,CAAnB,IAAwB4sB,KAAK,CAACxgB,QAAN,CAAemS,WAAf,OAAiC,KAA7D,EAAoE;AAChEqO,QAAAA,KAAK,CAAC1kB,MAAN;AACH;AACJ;AACJ;;AACDmlC,EAAAA,sBAAsB,GAAG;AACrB,QAAI,CAAC,KAAKW,cAAL,EAAL,EAA4B;AACxB;AACH;;AACD,UAAMK,IAAI,GAAG,KAAK55C,WAAL,CAAiB0C,aAA9B;AACA,UAAMm3C,YAAY,GAAG,KAAKpB,OAAL,GACf,KAAKT,aAAL,CAAmBpE,qBAAnB,CAAyC,KAAK6E,OAA9C,CADe,GAEf,KAAKT,aAAL,CAAmBlE,sBAAnB,EAFN;;AAGA,QAAI+F,YAAY,IAAI,KAAKC,qBAAzB,EAAgD;AAC5C,UAAI,KAAKA,qBAAT,EAAgC;AAC5BF,QAAAA,IAAI,CAACxuC,SAAL,CAAeqI,MAAf,CAAsB,KAAKqmC,qBAA3B;AACH;;AACD,UAAID,YAAJ,EAAkB;AACdD,QAAAA,IAAI,CAACxuC,SAAL,CAAelE,GAAf,CAAmB2yC,YAAnB;AACH;;AACD,WAAKC,qBAAL,GAA6BD,YAA7B;AACH;;AACD,QAAI,KAAKhB,QAAL,IAAiB,KAAKkB,sBAA1B,EAAkD;AAC9C,UAAI,KAAKA,sBAAT,EAAiC;AAC7BH,QAAAA,IAAI,CAACxuC,SAAL,CAAeqI,MAAf,CAAsB,KAAKsmC,sBAA3B;AACH;;AACD,UAAI,KAAKlB,QAAT,EAAmB;AACfe,QAAAA,IAAI,CAACxuC,SAAL,CAAelE,GAAf,CAAmB,KAAK2xC,QAAxB;AACH;;AACD,WAAKkB,sBAAL,GAA8B,KAAKlB,QAAnC;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;AACIF,EAAAA,iBAAiB,CAACv8C,KAAD,EAAQ;AACrB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACoyC,IAAN,GAAa9X,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAA5B,GAAyDt6B,KAAhE;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIk9C,EAAAA,wBAAwB,CAACjqB,IAAD,EAAO;AAC3B,UAAMpc,QAAQ,GAAG,KAAKkmC,+BAAtB;;AACA,QAAIlmC,QAAJ,EAAc;AACVA,MAAAA,QAAQ,CAACgH,OAAT,CAAiB,CAAC+/B,KAAD,EAAQ9pC,OAAR,KAAoB;AACjC8pC,QAAAA,KAAK,CAAC//B,OAAN,CAAc69B,IAAI,IAAI;AAClB5nC,UAAAA,OAAO,CAACvE,YAAR,CAAqBmsC,IAAI,CAACpzC,IAA1B,EAAiC,QAAO2qB,IAAK,IAAGyoB,IAAI,CAAC17C,KAAM,IAA3D;AACH,SAFD;AAGH,OAJD;AAKH;AACJ;AACD;AACJ;AACA;AACA;;;AACIq9C,EAAAA,oCAAoC,CAACvpC,OAAD,EAAU;AAC1C,UAAM+pC,mBAAmB,GAAG/pC,OAAO,CAACw+B,gBAAR,CAAyBmJ,wBAAzB,CAA5B;AACA,UAAM5kC,QAAQ,GAAI,KAAKkmC,+BAAL,GACd,KAAKA,+BAAL,IAAwC,IAAI3iC,GAAJ,EAD5C;;AAEA,SAAK,IAAIvS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGg2C,mBAAmB,CAACt+C,MAAxC,EAAgDsI,CAAC,EAAjD,EAAqD;AACjD2zC,MAAAA,iBAAiB,CAAC39B,OAAlB,CAA0B69B,IAAI,IAAI;AAC9B,cAAMoC,oBAAoB,GAAGD,mBAAmB,CAACh2C,CAAD,CAAhD;AACA,cAAM7H,KAAK,GAAG89C,oBAAoB,CAACzuC,YAArB,CAAkCqsC,IAAlC,CAAd;AACA,cAAMqC,KAAK,GAAG/9C,KAAK,GAAGA,KAAK,CAAC+9C,KAAN,CAAYpC,cAAZ,CAAH,GAAiC,IAApD;;AACA,YAAIoC,KAAJ,EAAW;AACP,cAAIlE,UAAU,GAAGhjC,QAAQ,CAACqI,GAAT,CAAa4+B,oBAAb,CAAjB;;AACA,cAAI,CAACjE,UAAL,EAAiB;AACbA,YAAAA,UAAU,GAAG,EAAb;AACAhjC,YAAAA,QAAQ,CAACuK,GAAT,CAAa08B,oBAAb,EAAmCjE,UAAnC;AACH;;AACDA,UAAAA,UAAU,CAAC/xC,IAAX,CAAgB;AAAEQ,YAAAA,IAAI,EAAEozC,IAAR;AAAc17C,YAAAA,KAAK,EAAE+9C,KAAK,CAAC,CAAD;AAA1B,WAAhB;AACH;AACJ,OAZD;AAaH;AACJ;AACD;;;AACA5B,EAAAA,cAAc,CAAC6B,OAAD,EAAU;AACpB,SAAKC,aAAL,GAAqB,IAArB;AACA,SAAKC,QAAL,GAAgB,IAAhB;;AACA,SAAKnC,iBAAL,CAAuBn5B,WAAvB;;AACA,QAAIo7B,OAAJ,EAAa;AACT,YAAM,CAACxH,SAAD,EAAYvB,QAAZ,IAAwB,KAAK0H,cAAL,CAAoBqB,OAApB,CAA9B;;AACA,UAAIxH,SAAJ,EAAe;AACX,aAAKyH,aAAL,GAAqBzH,SAArB;AACH;;AACD,UAAIvB,QAAJ,EAAc;AACV,aAAKiJ,QAAL,GAAgBjJ,QAAhB;AACH;;AACD,WAAK8G,iBAAL,GAAyB,KAAKH,aAAL,CACpB1D,eADoB,CACJjD,QADI,EACMuB,SADN,EAEpBr2C,IAFoB,CAEfS,qDAAI,CAAC,CAAD,CAFW,EAGpBb,SAHoB,CAGVk4C,GAAG,IAAI,KAAKmF,cAAL,CAAoBnF,GAApB,CAHG,EAGwBc,GAAD,IAAS;AACrD,cAAMxoB,YAAY,GAAI,yBAAwBimB,SAAU,IAAGvB,QAAS,KAAI8D,GAAG,CAACxa,OAAQ,EAApF;;AACA,aAAKqX,aAAL,CAAmBoD,WAAnB,CAA+B,IAAI1gC,KAAJ,CAAUiY,YAAV,CAA/B;AACH,OANwB,CAAzB;AAOH;AACJ;;AAjP8B;;AAmPnCrnB,OAAO,CAAC3F,IAAR;AAAA,mBAAoG2F,OAApG,EA5WkG7H,+DA4WlG,CAA6HA,qDAA7H,GA5WkGA,+DA4WlG,CAAuJo0C,eAAvJ,GA5WkGp0C,+DA4WlG,CAAmL,aAAnL,GA5WkGA,+DA4WlG,CAA8N25C,iBAA9N,GA5WkG35C,+DA4WlG,CAA4PA,uDAA5P;AAAA;;AACA6H,OAAO,CAACJ,IAAR,kBA7WkGzH,+DA6WlG;AAAA,QAAwF6H,OAAxF;AAAA;AAAA,sBAAiQ,KAAjQ;AAAA;AAAA;AAAA;AA7WkG7H,MAAAA,yDA6WlG;AA7WkGA,MAAAA,yDA6WlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA7WkGA,wEA6WlG;AAAA;AAAA;AAAA;AAAA;AAAA;AA7WkGA,MAAAA,6DA6WlG;AA7WkGA,MAAAA,0DA6WimB,GAAnsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA,qDA9WkGA,+DA8WlG,CAA2F6H,OAA3F,EAAgH,CAAC;AACrGzF,IAAAA,IAAI,EAAEjC,oDAD+F;AAErGvC,IAAAA,IAAI,EAAE,CAAC;AAAEyK,MAAAA,QAAQ,EAAE,2BAAZ;AAAyChG,MAAAA,QAAQ,EAAE,UAAnD;AAA+D+F,MAAAA,QAAQ,EAAE,SAAzE;AAAoFgF,MAAAA,MAAM,EAAE,CAAC,OAAD,CAA5F;AAAuGlF,MAAAA,IAAI,EAAE;AACxG,gBAAQ,KADgG;AAExG,iBAAS,sBAF+F;AAGxG,qCAA6B,mCAH2E;AAIxG,qCAA6B,sBAJ2E;AAKxG,0CAAkC,0BALsE;AAMxG,mCAA2B,QAN6E;AAOxG,qCAA6B;AAP2E,OAA7G;AAQIF,MAAAA,aAAa,EAAE5H,iEARnB;AAQ2C4Q,MAAAA,eAAe,EAAEpG,yEAR5D;AAQ4FtC,MAAAA,MAAM,EAAE,CAAC,isBAAD;AARpG,KAAD;AAF+F,GAAD,CAAhH,EAW4B,YAAY;AAAE,WAAO,CAAC;AAAElG,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEgyC;AAAR,KAA1B,EAAqD;AAAEhyC,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClHnG,QAAAA,IAAI,EAAE4I,oDAD4G;AAElHpN,QAAAA,IAAI,EAAE,CAAC,aAAD;AAF4G,OAAD;AAA/B,KAArD,EAG3B;AAAEwE,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAEsI,iDAD4B;AAElC9M,QAAAA,IAAI,EAAE,CAAC+7C,iBAAD;AAF4B,OAAD;AAA/B,KAH2B,EAM3B;AAAEv3C,MAAAA,IAAI,EAAEpC,uDAAeyyC;AAAvB,KAN2B,CAAP;AAMS,GAjBnD,EAiBqE;AAAEkI,IAAAA,MAAM,EAAE,CAAC;AAChEv4C,MAAAA,IAAI,EAAE3B,gDAAKA;AADqD,KAAD,CAAV;AAErDm6C,IAAAA,OAAO,EAAE,CAAC;AACVx4C,MAAAA,IAAI,EAAE3B,gDAAKA;AADD,KAAD,CAF4C;AAIrDu6C,IAAAA,OAAO,EAAE,CAAC;AACV54C,MAAAA,IAAI,EAAE3B,gDAAKA;AADD,KAAD,CAJ4C;AAMrD26C,IAAAA,QAAQ,EAAE,CAAC;AACXh5C,MAAAA,IAAI,EAAE3B,gDAAKA;AADA,KAAD;AAN2C,GAjBrE;AAAA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMa,aAAN,CAAoB;;AAEpBA,aAAa,CAACY,IAAd;AAAA,mBAA0GZ,aAA1G;AAAA;;AACAA,aAAa,CAACsH,IAAd,kBAnZkG5I,8DAmZlG;AAAA,QAA2GsB;AAA3G;AACAA,aAAa,CAACuH,IAAd,kBApZkG7I,8DAoZlG;AAAA,YAAoI,CAACgrC,oEAAD,CAApI,EAAuJA,oEAAvJ;AAAA;;AACA;AAAA,qDArZkGhrC,+DAqZlG,CAA2FsB,aAA3F,EAAsH,CAAC;AAC3Gc,IAAAA,IAAI,EAAE1B,mDADqG;AAE3G9C,IAAAA,IAAI,EAAE,CAAC;AACCmL,MAAAA,OAAO,EAAE,CAACiiC,oEAAD,CADV;AAEChiC,MAAAA,OAAO,EAAE,CAACnB,OAAD,EAAUmjC,oEAAV,CAFV;AAGCliC,MAAAA,YAAY,EAAE,CAACjB,OAAD;AAHf,KAAD;AAFqG,GAAD,CAAtH;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACz/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA,SAASk1C,+BAAT,CAAyC36C,IAAzC,EAA+C;AAC3C,SAAO6U,KAAK,CAAE,eAAc7U,IAAK,gCAArB,CAAZ;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM46C,wBAAwB,GAAG,IAAIvyC,yDAAJ,CAAmB,0BAAnB,CAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMwyC,uBAAuB,GAAG,CAC5B,QAD4B,EAE5B,UAF4B,EAG5B,MAH4B,EAI5B,QAJ4B,EAK5B,OAL4B,EAM5B,OAN4B,EAO5B,OAP4B,EAQ5B,OAR4B,EAS5B,QAT4B,CAAhC;AAWA,IAAIv7C,YAAY,GAAG,CAAnB,EACA;;AACA;;AACA,MAAMw7C,aAAa,GAAGt8C,uEAAe,CAAC,MAAM;AACxCgB,EAAAA,WAAW,CAACC,yBAAD,EAA4BC,WAA5B,EAAyCC,gBAAzC;AACX;AACAC,EAAAA,SAFW,EAEA;AACP,SAAKH,yBAAL,GAAiCA,yBAAjC;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AARuC,CAAP,CAArC;AAUA;;;AACA,MAAMm7C,QAAN,SAAuBD,aAAvB,CAAqC;AACjCt7C,EAAAA,WAAW,CAACW,WAAD,EAAcC,SAAd,EAAyBR,SAAzB,EAAoCF,WAApC,EAAiDC,gBAAjD,EAAmEF,yBAAnE,EAA8Fu7C,kBAA9F,EAAkHz2B,gBAAlH,EAAoI02B,MAApI,EACX;AACA;AACAC,EAAAA,UAHW,EAGC;AACR,UAAMz7C,yBAAN,EAAiCC,WAAjC,EAA8CC,gBAA9C,EAAgEC,SAAhE;AACA,SAAKO,WAAL,GAAmBA,WAAnB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKmkB,gBAAL,GAAwBA,gBAAxB;AACA,SAAK22B,UAAL,GAAkBA,UAAlB;AACA,SAAK16C,IAAL,GAAa,aAAYlB,YAAY,EAAG,EAAxC;AACA;AACR;AACA;AACA;;AACQ,SAAKoB,OAAL,GAAe,KAAf;AACA;AACR;AACA;AACA;;AACQ,SAAKD,YAAL,GAAoB,IAAI7B,yCAAJ,EAApB;AACA;AACR;AACA;AACA;;AACQ,SAAK+B,WAAL,GAAmB,WAAnB;AACA;AACR;AACA;AACA;;AACQ,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKG,SAAL,GAAiB,KAAjB;AACA,SAAKo6C,KAAL,GAAa,MAAb;AACA,SAAK/5C,SAAL,GAAiB,KAAjB;AACA,SAAKg6C,qBAAL,GAA6B,CACzB,MADyB,EAEzB,UAFyB,EAGzB,gBAHyB,EAIzB,OAJyB,EAKzB,MALyB,EAMzB,MANyB,EAO3Bx8B,MAP2B,CAOpBy8B,CAAC,IAAIX,6EAAsB,GAAGh9B,GAAzB,CAA6B29B,CAA7B,CAPe,CAA7B;;AAQA,SAAKC,iBAAL,GAA0B13C,KAAD,IAAW;AAChC,YAAMu4B,EAAE,GAAGv4B,KAAK,CAACigB,MAAjB,CADgC,CAEhC;AACA;AACA;AACA;AACA;AACA;;AACA,UAAI,CAACsY,EAAE,CAAC5/B,KAAJ,IAAa4/B,EAAE,CAAClU,cAAH,KAAsB,CAAnC,IAAwCkU,EAAE,CAACjU,YAAH,KAAoB,CAAhE,EAAmE;AAC/D;AACA;AACA;AACA;AACAiU,QAAAA,EAAE,CAAC/T,iBAAH,CAAqB,CAArB,EAAwB,CAAxB;AACA+T,QAAAA,EAAE,CAAC/T,iBAAH,CAAqB,CAArB,EAAwB,CAAxB;AACH;AACJ,KAhBD;;AAiBA,UAAM/X,OAAO,GAAG,KAAKlQ,WAAL,CAAiB0C,aAAjC;AACA,UAAMiV,QAAQ,GAAGzH,OAAO,CAACyH,QAAR,CAAiBmS,WAAjB,EAAjB,CAxDQ,CAyDR;AACA;;AACA,SAAKsxB,mBAAL,GAA2BP,kBAAkB,IAAI3qC,OAAjD;AACA,SAAKmrC,oBAAL,GAA4B,KAAKj/C,KAAjC,CA5DQ,CA6DR;;AACA,SAAK8E,EAAL,GAAU,KAAKA,EAAf,CA9DQ,CA+DR;AACA;AACA;;AACA,QAAIjB,SAAS,CAACq7C,GAAd,EAAmB;AACfR,MAAAA,MAAM,CAACl3B,iBAAP,CAAyB,MAAM;AAC3B5jB,QAAAA,WAAW,CAAC0C,aAAZ,CAA0BmhB,gBAA1B,CAA2C,OAA3C,EAAoD,KAAKs3B,iBAAzD;AACH,OAFD;AAGH;;AACD,SAAKI,SAAL,GAAiB,CAAC,KAAKt7C,SAAL,CAAe+gB,SAAjC;AACA,SAAKw6B,eAAL,GAAuB7jC,QAAQ,KAAK,QAApC;AACA,SAAK8jC,WAAL,GAAmB9jC,QAAQ,KAAK,UAAhC;AACA,SAAK+jC,cAAL,GAAsB,CAAC,CAACX,UAAxB;;AACA,QAAI,KAAKS,eAAT,EAA0B;AACtB,WAAKh7C,WAAL,GAAmB0P,OAAO,CAAC5O,QAAR,GACb,4BADa,GAEb,mBAFN;AAGH;AACJ;AACD;AACJ;AACA;AACA;;;AACgB,MAARF,QAAQ,GAAG;AACX,QAAI,KAAK3B,SAAL,IAAkB,KAAKA,SAAL,CAAe2B,QAAf,KAA4B,IAAlD,EAAwD;AACpD,aAAO,KAAK3B,SAAL,CAAe2B,QAAtB;AACH;;AACD,WAAO,KAAKR,SAAZ;AACH;;AACW,MAARQ,QAAQ,CAAChF,KAAD,EAAQ;AAChB,SAAKwE,SAAL,GAAiBpD,4EAAqB,CAACpB,KAAD,CAAtC,CADgB,CAEhB;AACA;;AACA,QAAI,KAAKmE,OAAT,EAAkB;AACd,WAAKA,OAAL,GAAe,KAAf;AACA,WAAKD,YAAL,CAAkBhE,IAAlB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACU,MAAF4E,EAAE,GAAG;AACL,WAAO,KAAKG,GAAZ;AACH;;AACK,MAAFH,EAAE,CAAC9E,KAAD,EAAQ;AACV,SAAKiF,GAAL,GAAWjF,KAAK,IAAI,KAAKiE,IAAzB;AACH;AACD;AACJ;AACA;AACA;;;AACgB,MAARkB,QAAQ,GAAG;AACX,WAAO,KAAKP,SAAL,IAAkB,KAAKvB,SAAL,EAAgBwrB,OAAhB,EAAyBkD,YAAzB,CAAsCtD,+DAAtC,CAAlB,IAAgF,KAAvF;AACH;;AACW,MAARtpB,QAAQ,CAACnF,KAAD,EAAQ;AAChB,SAAK4E,SAAL,GAAiBxD,4EAAqB,CAACpB,KAAD,CAAtC;AACH;AACD;;;AACQ,MAAJyD,IAAI,GAAG;AACP,WAAO,KAAKm7C,KAAZ;AACH;;AACO,MAAJn7C,IAAI,CAACzD,KAAD,EAAQ;AACZ,SAAK4+C,KAAL,GAAa5+C,KAAK,IAAI,MAAtB;;AACA,SAAKu/C,aAAL,GAFY,CAGZ;AACA;AACA;;;AACA,QAAI,CAAC,KAAKF,WAAN,IAAqBlB,6EAAsB,GAAGh9B,GAAzB,CAA6B,KAAKy9B,KAAlC,CAAzB,EAAmE;AAC/D,WAAKh7C,WAAL,CAAiB0C,aAAjB,CAA+B7C,IAA/B,GAAsC,KAAKm7C,KAA3C;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACa,MAAL5+C,KAAK,GAAG;AACR,WAAO,KAAKg/C,mBAAL,CAAyBh/C,KAAhC;AACH;;AACQ,MAALA,KAAK,CAACA,KAAD,EAAQ;AACb,QAAIA,KAAK,KAAK,KAAKA,KAAnB,EAA0B;AACtB,WAAKg/C,mBAAL,CAAyBh/C,KAAzB,GAAiCA,KAAjC;AACA,WAAKkE,YAAL,CAAkBhE,IAAlB;AACH;AACJ;AACD;;;AACY,MAARmF,QAAQ,GAAG;AACX,WAAO,KAAKR,SAAZ;AACH;;AACW,MAARQ,QAAQ,CAACrF,KAAD,EAAQ;AAChB,SAAK6E,SAAL,GAAiBzD,4EAAqB,CAACpB,KAAD,CAAtC;AACH;;AACD0pB,EAAAA,eAAe,GAAG;AACd,QAAI,KAAK7lB,SAAL,CAAe+gB,SAAnB,EAA8B;AAC1B,WAAKoD,gBAAL,CAAsBnB,OAAtB,CAA8B,KAAKjjB,WAAL,CAAiB0C,aAA/C,EAA8DvG,SAA9D,CAAwEsH,KAAK,IAAI;AAC7E,aAAKhD,UAAL,GAAkBgD,KAAK,CAACkgB,YAAxB;AACA,aAAKrjB,YAAL,CAAkBhE,IAAlB;AACH,OAHD;AAIH;AACJ;;AACDsF,EAAAA,WAAW,GAAG;AACV,SAAKtB,YAAL,CAAkBhE,IAAlB;AACH;;AACDuF,EAAAA,WAAW,GAAG;AACV,SAAKvB,YAAL,CAAkB1E,QAAlB;;AACA,QAAI,KAAKqE,SAAL,CAAe+gB,SAAnB,EAA8B;AAC1B,WAAKoD,gBAAL,CAAsBJ,cAAtB,CAAqC,KAAKhkB,WAAL,CAAiB0C,aAAtD;AACH;;AACD,QAAI,KAAKzC,SAAL,CAAeq7C,GAAnB,EAAwB;AACpB,WAAKt7C,WAAL,CAAiB0C,aAAjB,CAA+BqhB,mBAA/B,CAAmD,OAAnD,EAA4D,KAAKo3B,iBAAjE;AACH;AACJ;;AACDr5C,EAAAA,SAAS,GAAG;AACR,QAAI,KAAKrC,SAAT,EAAoB;AAChB;AACA;AACA;AACA,WAAKsC,gBAAL;AACH,KANO,CAOR;AACA;AACA;;;AACA,SAAK65C,sBAAL,GAVQ,CAWR;AACA;;;AACA,SAAKC,sBAAL;AACH;AACD;;;AACAt5C,EAAAA,KAAK,CAACC,OAAD,EAAU;AACX,SAAKxC,WAAL,CAAiB0C,aAAjB,CAA+BH,KAA/B,CAAqCC,OAArC;AACH;AACD;;;AACAG,EAAAA,aAAa,CAACC,SAAD,EAAY;AACrB,QAAIA,SAAS,KAAK,KAAKrC,OAAvB,EAAgC;AAC5B,WAAKA,OAAL,GAAeqC,SAAf;AACA,WAAKtC,YAAL,CAAkBhE,IAAlB;AACH;AACJ;;AACDw/C,EAAAA,QAAQ,GAAG,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACD;;;AACAD,EAAAA,sBAAsB,GAAG;AACrB;AACA;AACA;AACA;AACA,UAAM/6C,WAAW,GAAG,KAAKi6C,UAAL,EAAiBtN,uBAAjB,OAA+C,IAA/C,GAAsD,KAAK3sC,WAA/E;;AACA,QAAIA,WAAW,KAAK,KAAKi7C,oBAAzB,EAA+C;AAC3C,YAAM7rC,OAAO,GAAG,KAAKlQ,WAAL,CAAiB0C,aAAjC;AACA,WAAKq5C,oBAAL,GAA4Bj7C,WAA5B;AACAA,MAAAA,WAAW,GACLoP,OAAO,CAACvE,YAAR,CAAqB,aAArB,EAAoC7K,WAApC,CADK,GAELoP,OAAO,CAACuV,eAAR,CAAwB,aAAxB,CAFN;AAGH;AACJ;AACD;;;AACAm2B,EAAAA,sBAAsB,GAAG;AACrB,UAAM3hB,QAAQ,GAAG,KAAKj6B,WAAL,CAAiB0C,aAAjB,CAA+BtG,KAAhD;;AACA,QAAI,KAAKi/C,oBAAL,KAA8BphB,QAAlC,EAA4C;AACxC,WAAKohB,oBAAL,GAA4BphB,QAA5B;AACA,WAAK35B,YAAL,CAAkBhE,IAAlB;AACH;AACJ;AACD;;;AACAq/C,EAAAA,aAAa,GAAG;AACZ,QAAIjB,uBAAuB,CAAClpC,OAAxB,CAAgC,KAAKwpC,KAArC,IAA8C,CAAC,CAA/C,KACC,OAAOljC,SAAP,KAAqB,WAArB,IAAoCA,SADrC,CAAJ,EACqD;AACjD,YAAM0iC,+BAA+B,CAAC,KAAKQ,KAAN,CAArC;AACH;AACJ;AACD;;;AACAgB,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAKf,qBAAL,CAA2BzpC,OAA3B,CAAmC,KAAKwpC,KAAxC,IAAiD,CAAC,CAAzD;AACH;AACD;;;AACAj4C,EAAAA,WAAW,GAAG;AACV;AACA,QAAIC,QAAQ,GAAG,KAAKhD,WAAL,CAAiB0C,aAAjB,CAA+BM,QAA9C;AACA,WAAOA,QAAQ,IAAIA,QAAQ,CAACC,QAA5B;AACH;AACD;AACJ;AACA;AACA;;;AACa,MAALC,KAAK,GAAG;AACR,WAAQ,CAAC,KAAK84C,aAAL,EAAD,IACJ,CAAC,KAAKh8C,WAAL,CAAiB0C,aAAjB,CAA+BtG,KAD5B,IAEJ,CAAC,KAAK2G,WAAL,EAFG,IAGJ,CAAC,KAAKtC,UAHV;AAIH;AACD;AACJ;AACA;AACA;;;AACwB,MAAhB0C,gBAAgB,GAAG;AACnB,QAAI,KAAKq4C,eAAT,EAA0B;AACtB;AACA;AACA;AACA,YAAMS,aAAa,GAAG,KAAKj8C,WAAL,CAAiB0C,aAAvC;AACA,YAAMw5C,WAAW,GAAGD,aAAa,CAACz5C,OAAd,CAAsB,CAAtB,CAApB,CALsB,CAMtB;AACA;;AACA,aAAQ,KAAKjC,OAAL,IACJ07C,aAAa,CAAC36C,QADV,IAEJ,CAAC,KAAK4B,KAFF,IAGJ,CAAC,EAAE+4C,aAAa,CAACE,aAAd,GAA8B,CAAC,CAA/B,IAAoCD,WAApC,IAAmDA,WAAW,CAACE,KAAjE,CAHL;AAIH,KAZD,MAaK;AACD,aAAO,KAAK77C,OAAL,IAAgB,CAAC,KAAK2C,KAA7B;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACIE,EAAAA,iBAAiB,CAACC,GAAD,EAAM;AACnB,QAAIA,GAAG,CAAC1H,MAAR,EAAgB;AACZ,WAAKqE,WAAL,CAAiB0C,aAAjB,CAA+BiJ,YAA/B,CAA4C,kBAA5C,EAAgEtI,GAAG,CAACE,IAAJ,CAAS,GAAT,CAAhE;AACH,KAFD,MAGK;AACD,WAAKvD,WAAL,CAAiB0C,aAAjB,CAA+B+iB,eAA/B,CAA+C,kBAA/C;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACIphB,EAAAA,gBAAgB,GAAG;AACf;AACA;AACA;AACA,QAAI,CAAC,KAAK9D,OAAV,EAAmB;AACf,WAAKgC,KAAL;AACH;AACJ;AACD;;;AACA85C,EAAAA,eAAe,GAAG;AACd,UAAMnsC,OAAO,GAAG,KAAKlQ,WAAL,CAAiB0C,aAAjC;AACA,WAAO,KAAK84C,eAAL,KAAyBtrC,OAAO,CAAC5O,QAAR,IAAoB4O,OAAO,CAAC5I,IAAR,GAAe,CAA5D,CAAP;AACH;;AAzTgC;;AA2TrCszC,QAAQ,CAACj7C,IAAT;AAAA,mBAAqGi7C,QAArG,EAA2Fn9C,+DAA3F,CAA+HA,qDAA/H,GAA2FA,+DAA3F,CAAyJiB,2DAAzJ,GAA2FjB,+DAA3F,CAAiLkB,qDAAjL,OAA2FlB,+DAA3F,CAAsOkB,kDAAtO,MAA2FlB,+DAA3F,CAA4QkB,8DAA5Q,MAA2FlB,+DAA3F,CAA8TW,qEAA9T,GAA2FX,+DAA3F,CAA+Vg9C,wBAA/V,OAA2Fh9C,+DAA3F,CAAgamB,oEAAha,GAA2FnB,+DAA3F,CAA+bA,iDAA/b,GAA2FA,+DAA3F,CAAqd+sC,wEAArd;AAAA;;AACAoQ,QAAQ,CAACh7C,IAAT,kBAD2FnC,+DAC3F;AAAA,QAAyFm9C,QAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAD2Fn9C,MAAAA,wDAC3F;AAAA,eAAyF,kBAAc,IAAd,CAAzF;AAAA;AAAA,eAAyF,kBAAc,KAAd,CAAzF;AAAA;AAAA,eAAyF,cAAzF;AAAA;AAAA;;AAAA;AAD2FA,MAAAA,4DAC3F;AAD2FA,MAAAA,yDAC3F;AAD2FA,MAAAA,yDAC3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAD2FA,gEAC3F,CAAmkC,CAAC;AAAE0H,IAAAA,OAAO,EAAE5G,6EAAX;AAAgC6G,IAAAA,WAAW,EAAEw1C;AAA7C,GAAD,CAAnkC,GAD2Fn9C,wEAC3F,EAD2FA,kEAC3F;AAAA;;AACA;AAAA,qDAF2FA,+DAE3F,CAA2Fm9C,QAA3F,EAAiH,CAAC;AACtG/6C,IAAAA,IAAI,EAAEnC,oDADgG;AAEtGrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAG;AAC/B,0DAFmB;AAGC+F,MAAAA,QAAQ,EAAE,UAHX;AAICF,MAAAA,IAAI,EAAE;AACF;AACxB;AACA;AACwB,iBAAS,mDAJP;AAKF,oCAA4B,WAL1B;AAMF;AACA;AACA,qBAAa,IARX;AASF;AACA;AACA;AACA,mCAA2B,aAZzB;AAaF,sBAAc,UAbZ;AAcF,sBAAc,UAdZ;AAeF,uBAAe,cAfb;AAgBF,2BAAmB,sCAhBjB;AAiBF,4CAAoC,mBAjBlC;AAkBF;AACA;AACA,+BAAuB,yCApBrB;AAqBF,gCAAwB,UArBtB;AAsBF,mBAAW,qBAtBT;AAuBF,kBAAU,sBAvBR;AAwBF,mBAAW;AAxBT,OAJP;AA8BCC,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAE5G,6EAAX;AAAgC6G,QAAAA,WAAW,EAAEw1C;AAA7C,OAAD;AA9BZ,KAAD;AAFgG,GAAD,CAAjH,EAkC4B,YAAY;AAAE,WAAO,CAAC;AAAE/6C,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEnB,2DAAWkG;AAAnB,KAA1B,EAAiD;AAAE/E,MAAAA,IAAI,EAAElB,qDAAR;AAAsBqH,MAAAA,UAAU,EAAE,CAAC;AACjHnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADmG,OAAD,EAEjH;AACC+B,QAAAA,IAAI,EAAE9B,+CAAIA;AADX,OAFiH;AAAlC,KAAjD,EAI3B;AAAE8B,MAAAA,IAAI,EAAElB,kDAAR;AAAmBqH,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADoB,OAAD;AAA/B,KAJ2B,EAM3B;AAAE+B,MAAAA,IAAI,EAAElB,8DAAR;AAA+BqH,MAAAA,UAAU,EAAE,CAAC;AAC9CnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADgC,OAAD;AAA3C,KAN2B,EAQ3B;AAAE+B,MAAAA,IAAI,EAAEzB,qEAAoB6G;AAA5B,KAR2B,EAQK;AAAEpF,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClEnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADoD,OAAD,EAElE;AACC+B,QAAAA,IAAI,EAAE9B,+CAAIA;AADX,OAFkE,EAIlE;AACC8B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAACo/C,wBAAD;AAFP,OAJkE;AAA/B,KARL,EAe3B;AAAE56C,MAAAA,IAAI,EAAEjB,oEAAkBmkB;AAA1B,KAf2B,EAeG;AAAEljB,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAfH,EAewB;AAAE3I,MAAAA,IAAI,EAAEf,sEAAR;AAAyBkH,MAAAA,UAAU,EAAE,CAAC;AAC3FnG,QAAAA,IAAI,EAAE/B,mDAAQA;AAD6E,OAAD,EAE3F;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAACmvC,wEAAD;AAFP,OAF2F;AAArC,KAfxB,CAAP;AAoBlB,GAtDxB,EAsD0C;AAAEppC,IAAAA,QAAQ,EAAE,CAAC;AACvCvB,MAAAA,IAAI,EAAE3B,gDAAKA;AAD4B,KAAD,CAAZ;AAE1BgD,IAAAA,EAAE,EAAE,CAAC;AACLrB,MAAAA,IAAI,EAAE3B,gDAAKA;AADN,KAAD,CAFsB;AAI1B4C,IAAAA,WAAW,EAAE,CAAC;AACdjB,MAAAA,IAAI,EAAE3B,gDAAKA;AADG,KAAD,CAJa;AAM1BwG,IAAAA,IAAI,EAAE,CAAC;AACP7E,MAAAA,IAAI,EAAE3B,gDAAKA;AADJ,KAAD,CANoB;AAQ1BqD,IAAAA,QAAQ,EAAE,CAAC;AACX1B,MAAAA,IAAI,EAAE3B,gDAAKA;AADA,KAAD,CARgB;AAU1B2B,IAAAA,IAAI,EAAE,CAAC;AACPA,MAAAA,IAAI,EAAE3B,gDAAKA;AADJ,KAAD,CAVoB;AAY1BiI,IAAAA,iBAAiB,EAAE,CAAC;AACpBtG,MAAAA,IAAI,EAAE3B,gDAAKA;AADS,KAAD,CAZO;AAc1BgwC,IAAAA,mBAAmB,EAAE,CAAC;AACtBruC,MAAAA,IAAI,EAAE3B,gDADgB;AAEtB7C,MAAAA,IAAI,EAAE,CAAC,kBAAD;AAFgB,KAAD,CAdK;AAiB1Be,IAAAA,KAAK,EAAE,CAAC;AACRyD,MAAAA,IAAI,EAAE3B,gDAAKA;AADH,KAAD,CAjBmB;AAmB1BuD,IAAAA,QAAQ,EAAE,CAAC;AACX5B,MAAAA,IAAI,EAAE3B,gDAAKA;AADA,KAAD;AAnBgB,GAtD1C;AAAA;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMgB,cAAN,CAAqB;;AAErBA,cAAc,CAACS,IAAf;AAAA,mBAA2GT,cAA3G;AAAA;;AACAA,cAAc,CAACmH,IAAf,kBAzF2F5I,8DAyF3F;AAAA,QAA4GyB;AAA5G;AAKAA,cAAc,CAACoH,IAAf,kBA9F2F7I,8DA8F3F;AAAA,aAAuI,CAACwH,qEAAD,CAAvI;AAAA,YAAsK,CAACijB,oEAAD,EAAkB1pB,4EAAlB,EAAsCiqC,mEAAtC,CAAtK,EAA8NvgB,oEAA9N,EACQ;AACA;AACA1pB,EAAAA,4EAHR;AAAA;;AAIA;AAAA,qDAlG2Ff,+DAkG3F,CAA2FyB,cAA3F,EAAuH,CAAC;AAC5GW,IAAAA,IAAI,EAAE1B,mDADsG;AAE5G9C,IAAAA,IAAI,EAAE,CAAC;AACCkL,MAAAA,YAAY,EAAE,CAACq0C,QAAD,CADf;AAECp0C,MAAAA,OAAO,EAAE,CAAC0hB,oEAAD,EAAkB1pB,4EAAlB,EAAsCiqC,mEAAtC,CAFV;AAGChiC,MAAAA,OAAO,EAAE,CACLyhB,oEADK,EAEL;AACA;AACA1pB,MAAAA,4EAJK,EAKLo8C,QALK,CAHV;AAUCh1C,MAAAA,SAAS,EAAE,CAACX,qEAAD;AAVZ,KAAD;AAFsG,GAAD,CAAvH;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1gBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAmHsGxH,IAAAA,4DA0LiyB;AA1LjyBA,IAAAA,4DA0LiyB;AA1LjyBA,IAAAA,uDA0Ls5B;AA1Lt5BA,IAAAA,0DA0Lw7B;;;;;;;;gBA1Lx7BA;;AAAAA,IAAAA,4DAwmB+R;AAxmB/RA,IAAAA,wDAwmB2X;AAxmB3XA,MAAAA,2DAwmB2X;AAAA,qBAxmB3XA,2DAwmB2X;AAAA,aAxmB3XA,yDAwmBuY,+BAAZ;AAAA;AAxmB3XA,MAAAA,2DAwmB2X;AAAA,qBAxmB3XA,2DAwmB2X;AAAA,aAxmB3XA,yDAwmB+a,oBAAY,OAAZ,EAApD;AAAA;AAxmB3XA,MAAAA,2DAwmB2X;AAAA,qBAxmB3XA,2DAwmB2X;AAAA,aAxmB3XA,yDAwmBmhB,kCAAxJ;AAAA;AAxmB3XA,MAAAA,2DAwmB2X;AAAA,qBAxmB3XA,2DAwmB2X;AAAA,aAxmB3XA,yDAwmB4kB,iCAAjN;AAAA;AAxmB3XA,IAAAA,4DAwmBkzB;AAxmBlzBA,IAAAA,0DAwmB01B;AAxmB11BA,IAAAA,0DAwmBy3B;;;;mBAxmBz3BA;AAAAA,IAAAA,wDAwmBuU;AAxmBvUA,IAAAA,yDAwmBopB;;;;AA1tB1vB,MAAMsgD,iBAAiB,GAAG;AACtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,aAAa,EAAEpV,4DAAO,CAAC,eAAD,EAAkB,CACpCn4B,0DAAK,CAAC,MAAD,EAAS+C,0DAAK,CAAC;AAChB81B,IAAAA,OAAO,EAAE,CADO;AAEhBC,IAAAA,SAAS,EAAE;AAFK,GAAD,CAAd,CAD+B,EAKpCV,+DAAU,CAAC,eAAD,EAAkBC,4DAAO,CAAC,kCAAD,EAAqCt1B,0DAAK,CAAC;AAC1E81B,IAAAA,OAAO,EAAE,CADiE;AAE1EC,IAAAA,SAAS,EAAE;AAF+D,GAAD,CAA1C,CAAzB,CAL0B,EASpCV,+DAAU,CAAC,WAAD,EAAcC,4DAAO,CAAC,mBAAD,EAAsBt1B,0DAAK,CAAC;AAAE81B,IAAAA,OAAO,EAAE;AAAX,GAAD,CAA3B,CAArB,CAT0B,CAAlB,CATA;;AAoBtB;AACJ;AACA;AACA;AACI2U,EAAAA,WAAW,EAAErV,4DAAO,CAAC,aAAD,EAAgB,CAChC;AACA;AACAn4B,EAAAA,0DAAK,CAAC,SAAD,EAAY+C,0DAAK,CAAC;AAAE81B,IAAAA,OAAO,EAAE;AAAX,GAAD,CAAjB,CAH2B,EAIhCT,+DAAU,CAAC,WAAD,EAAc,CACpBr1B,0DAAK,CAAC;AAAE81B,IAAAA,OAAO,EAAE;AAAX,GAAD,CADe,EAEpBR,4DAAO,CAAC,8CAAD,CAFa,CAAd,CAJsB,CAAhB;AAxBE,CAA1B;AAkCA;AACA;AACA;AACA;AACA;;AACA,MAAMmV,WAAW,GAAGF,iBAAiB,CAACE,WAAtC;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMD,aAAa,GAAGD,iBAAiB,CAACC,aAAxC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,MAAME,gBAAgB,GAAG,IAAIh2C,yDAAJ,CAAmB,gBAAnB,CAAzB;;AACA,MAAMi2C,mBAAN,CAA0B;AACtB9+C,EAAAA,WAAW,CAAC++C,SAAD,EAAYC,yBAAZ,EAAuCC,OAAvC,EAAgDzd,SAAhD,EAA2D0d,iBAA3D,EAA8EroC,SAA9E,EAAyFF,kBAAzF,EAA6G;AACpH,SAAKooC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,yBAAL,GAAiCA,yBAAjC;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKzd,SAAL,GAAiBA,SAAjB;AACA,SAAK0d,iBAAL,GAAyBA,iBAAzB;AACA,SAAKroC,SAAL,GAAiBA,SAAjB;AACA,SAAKF,kBAAL,GAA0BA,kBAA1B;AACA;;AACA,SAAKwoC,SAAL,GAAiB,IAAI//C,yCAAJ,EAAjB;AACH;AACD;AACJ;AACA;AACA;;;AACIggD,EAAAA,MAAM,CAACzjC,OAAO,GAAG,EAAX,EAAe;AACjB,QAAI,CAAC,KAAK0jC,OAAV,EAAmB;AACf,WAAKA,OAAL,GAAe,IAAItB,+DAAJ,CAAmB,KAAKgB,SAAxB,EAAmC,KAAKG,iBAAxC,CAAf;AACH;;AACD,SAAKI,MAAL;;AACA,QAAI,CAAC,KAAKC,OAAV,EAAmB;AACf,WAAKA,OAAL,GAAe,IAAIvB,gEAAJ,CAAoB,KAAKnnC,SAAL,CAAe0K,aAAf,CAA6B,KAA7B,CAApB,EAAyD,KAAKy9B,yBAA9D,EAAyF,KAAKC,OAA9F,EAAuG,KAAKzd,SAA5G,CAAf;AACH;;AACD,UAAM3wB,OAAO,GAAG,KAAKkuC,SAAL,CAAejzC,UAAf,CAA0BzI,aAA1C,CARiB,CASjB;AACA;AACA;;AACAwN,IAAAA,OAAO,CAACuW,UAAR,CAAmBo4B,YAAnB,CAAgC,KAAKD,OAAL,CAAaE,aAA7C,EAA4D5uC,OAA5D,EAZiB,CAajB;AACA;AACA;AACA;AACA;AACA;;AACA,SAAK8F,kBAAL,EAAyBlT,YAAzB;;AACA,SAAK47C,OAAL,CAAaD,MAAb,CAAoB,KAAKG,OAAzB,EAAkC5jC,OAAlC;;AACA,SAAKwjC,SAAL,CAAeliD,IAAf;AACH;AACD;AACJ;AACA;AACA;;;AACIqiD,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKD,OAAL,CAAaK,UAAjB,EAA6B;AACzB,WAAKL,OAAL,CAAaC,MAAb;AACH;AACJ;;AACD98C,EAAAA,WAAW,GAAG;AACV,QAAI,KAAK+8C,OAAT,EAAkB;AACd,WAAKA,OAAL,CAAaI,OAAb;AACH;AACJ;;AApDqB;;AAsD1Bb,mBAAmB,CAACx+C,IAApB;AAAA,mBAAgHw+C,mBAAhH,EAAsG1gD,+DAAtG,CAAqJA,sDAArJ,GAAsGA,+DAAtG,CAAgLA,mEAAhL,GAAsGA,+DAAtG,CAAwNA,yDAAxN,GAAsGA,+DAAtG,CAAsPA,mDAAtP,GAAsGA,+DAAtG,CAA8QA,2DAA9Q,GAAsGA,+DAAtG,CAA8SwK,qDAA9S,GAAsGxK,+DAAtG,CAAmUA,4DAAnU;AAAA;;AACA0gD,mBAAmB,CAACv+C,IAApB,kBADsGnC,+DACtG;AAAA,QAAoG0gD;AAApG;;AACA;AAAA,qDAFsG1gD,+DAEtG,CAA2F0gD,mBAA3F,EAA4H,CAAC;AACjHt+C,IAAAA,IAAI,EAAEnC,oDAASA;AADkG,GAAD,CAA5H,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEmC,MAAAA,IAAI,EAAEpC,sDAAcqM;AAAtB,KAAD,EAA2B;AAAEjK,MAAAA,IAAI,EAAEpC,mEAA2BwhD;AAAnC,KAA3B,EAAkE;AAAEp/C,MAAAA,IAAI,EAAEpC,yDAAiByhD;AAAzB,KAAlE,EAA+F;AAAEr/C,MAAAA,IAAI,EAAEpC,mDAAWwjC;AAAnB,KAA/F,EAAsH;AAAEphC,MAAAA,IAAI,EAAEpC,2DAAmB8Q;AAA3B,KAAtH,EAAqJ;AAAE1O,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClNnG,QAAAA,IAAI,EAAEsI,iDAD4M;AAElN9M,QAAAA,IAAI,EAAE,CAAC4M,qDAAD;AAF4M,OAAD;AAA/B,KAArJ,EAG3B;AAAEpI,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAH2B,CAAP;AAGc,GALxD;AAAA;AAMA;AACA;AACA;;;AACA,MAAMs6C,cAAN,SAA6BhB,mBAA7B,CAAiD;;AAEjDgB,cAAc,CAACx/C,IAAf;AAAA;AAAA;AAAA,0EAbsGlC,mEAatG,CAA2G0hD,cAA3G,SAA2GA,cAA3G;AAAA;AAAA;;AACAA,cAAc,CAACv/C,IAAf,kBAdsGnC,+DActG;AAAA,QAA+F0hD,cAA/F;AAAA;AAAA,aAdsG1hD,gEActG,CAAmK,CAAC;AAAE0H,IAAAA,OAAO,EAAE+4C,gBAAX;AAA6B94C,IAAAA,WAAW,EAAE+5C;AAA1C,GAAD,CAAnK,GAdsG1hD,wEActG;AAAA;;AACA;AAAA,qDAfsGA,+DAetG,CAA2F0hD,cAA3F,EAAuH,CAAC;AAC5Gt/C,IAAAA,IAAI,EAAEnC,oDADsG;AAE5GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,6BADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAE+4C,gBAAX;AAA6B94C,QAAAA,WAAW,EAAE+5C;AAA1C,OAAD;AAFZ,KAAD;AAFsG,GAAD,CAAvH;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,SAASC,wBAAT,GAAoC;AAChC,QAAM1qC,KAAK,CAAE;AACjB;AACA;AACA;AACA,mDAJe,CAAX;AAKH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAAS2qC,4BAAT,GAAwC;AACpC,QAAM3qC,KAAK,CAAE;AACjB,wEADe,CAAX;AAEH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAAS4qC,4BAAT,GAAwC;AACpC,QAAM5qC,KAAK,CAAE;AACjB,uEADe,CAAX;AAEH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAAS6qC,0BAAT,GAAsC;AAClC,QAAM7qC,KAAK,CAAE,gFAAD,GACP,sEADM,CAAX;AAEH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAM8qC,cAAc,GAAG,IAAIt3C,yDAAJ,CAAmB,gBAAnB,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA,MAAMu3C,gBAAgB,GAAGnC,0EAAkB,CAACC,qEAAa,CAAC,MAAM,EAAP,CAAd,CAA3C;AAEA;AACA;AACA;;;AACA,MAAMmC,WAAN,SAA0BD,gBAA1B,CAA2C;AACvCpgD,EAAAA,WAAW,CAACW,WAAD,EAAckW,SAAd,EAAyBypC,aAAzB,EAAwCC,WAAxC,EAAqD5pC,kBAArD,EAAyE;AAChF;AACA,SAAKhW,WAAL,GAAmBA,WAAnB;AACA,SAAKkW,SAAL,GAAiBA,SAAjB;AACA,SAAKypC,aAAL,GAAqBA,aAArB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAK5pC,kBAAL,GAA0BA,kBAA1B;AACA;;AACA,SAAKtK,IAAL,GAAY,UAAZ;AACA;;AACA,SAAKm0C,QAAL,GAAgB,IAAIphD,yCAAJ,EAAhB;AACA;;AACA,SAAKqhD,QAAL,GAAgB,IAAIrhD,yCAAJ,EAAhB;AACA;;AACA,SAAKshD,YAAL,GAAoB,KAApB;AACA;;AACA,SAAKC,gBAAL,GAAwB,KAAxB;AACAJ,IAAAA,WAAW,EAAEK,OAAb,GAAuB,IAAvB;AACH;AACD;;;AACA19C,EAAAA,KAAK,CAAC29C,MAAD,EAAS19C,OAAT,EAAkB;AACnB,QAAI,KAAKm9C,aAAL,IAAsBO,MAA1B,EAAkC;AAC9B,WAAKP,aAAL,CAAmBQ,QAAnB,CAA4B,KAAKC,eAAL,EAA5B,EAAoDF,MAApD,EAA4D19C,OAA5D;AACH,KAFD,MAGK;AACD,WAAK49C,eAAL,GAAuB79C,KAAvB,CAA6BC,OAA7B;AACH;;AACD,SAAKs9C,QAAL,CAAcxjD,IAAd,CAAmB,IAAnB;AACH;;AACDwpB,EAAAA,eAAe,GAAG;AACd,QAAI,KAAK65B,aAAT,EAAwB;AACpB;AACA;AACA;AACA,WAAKA,aAAL,CAAmB18B,OAAnB,CAA2B,KAAKjjB,WAAhC,EAA6C,KAA7C;AACH;AACJ;;AACD6B,EAAAA,WAAW,GAAG;AACV,QAAI,KAAK89C,aAAT,EAAwB;AACpB,WAAKA,aAAL,CAAmB37B,cAAnB,CAAkC,KAAKhkB,WAAvC;AACH;;AACD,QAAI,KAAK4/C,WAAL,IAAoB,KAAKA,WAAL,CAAiBS,UAAzC,EAAqD;AACjD,WAAKT,WAAL,CAAiBS,UAAjB,CAA4B,IAA5B;AACH;;AACD,SAAKR,QAAL,CAAcjkD,QAAd;;AACA,SAAKkkD,QAAL,CAAclkD,QAAd;AACH;AACD;;;AACA0kD,EAAAA,YAAY,GAAG;AACX,WAAO,KAAKl/C,QAAL,GAAgB,IAAhB,GAAuB,GAA9B;AACH;AACD;;;AACAg/C,EAAAA,eAAe,GAAG;AACd,WAAO,KAAKpgD,WAAL,CAAiB0C,aAAxB;AACH;AACD;;;AACA69C,EAAAA,cAAc,CAAC98C,KAAD,EAAQ;AAClB,QAAI,KAAKrC,QAAT,EAAmB;AACfqC,MAAAA,KAAK,CAACG,cAAN;AACAH,MAAAA,KAAK,CAACI,eAAN;AACH;AACJ;AACD;;;AACA28C,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,QAAL,CAAcvjD,IAAd,CAAmB,IAAnB;AACH;AACD;;;AACAmkD,EAAAA,QAAQ,GAAG;AACP,UAAMC,KAAK,GAAG,KAAK1gD,WAAL,CAAiB0C,aAAjB,CAA+B0jB,SAA/B,CAAyC,IAAzC,CAAd;;AACA,UAAMu6B,KAAK,GAAGD,KAAK,CAAChS,gBAAN,CAAuB,2BAAvB,CAAd,CAFO,CAGP;;AACA,SAAK,IAAIzqC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG08C,KAAK,CAAChlD,MAA1B,EAAkCsI,CAAC,EAAnC,EAAuC;AACnC08C,MAAAA,KAAK,CAAC18C,CAAD,CAAL,CAASwP,MAAT;AACH;;AACD,WAAOitC,KAAK,CAACnS,WAAN,EAAmBC,IAAnB,MAA6B,EAApC;AACH;;AACDoS,EAAAA,eAAe,CAACC,aAAD,EAAgB;AAC3B;AACA;AACA;AACA;AACA,SAAKd,YAAL,GAAoBc,aAApB;AACA,SAAK7qC,kBAAL,EAAyBlT,YAAzB;AACH;;AACD+hB,EAAAA,SAAS,GAAG;AACR,WAAO,KAAK3O,SAAL,IAAkB,KAAKA,SAAL,CAAe4qC,aAAf,KAAiC,KAAKV,eAAL,EAA1D;AACH;;AAvFsC;;AAyF3CV,WAAW,CAAC//C,IAAZ;AAAA,mBAAwG+/C,WAAxG,EAzLsGjiD,+DAyLtG,CAAqIA,qDAArI,GAzLsGA,+DAyLtG,CAA+JwK,qDAA/J,GAzLsGxK,+DAyLtG,CAAoLiB,2DAApL,GAzLsGjB,+DAyLtG,CAAgN+hD,cAAhN,MAzLsG/hD,+DAyLtG,CAA2PA,4DAA3P;AAAA;;AACAiiD,WAAW,CAACx6C,IAAZ,kBA1LsGzH,+DA0LtG;AAAA,QAA4FiiD,WAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AA1LsGjiD,MAAAA,wDA0LtG;AAAA,eAA4F,0BAA5F;AAAA;AAAA,eAA4F,uBAA5F;AAAA;AAAA;;AAAA;AA1LsGA,MAAAA,yDA0LtG;AA1LsGA,MAAAA,yDA0LtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA1LsGA,wEA0LtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1LsGA,MAAAA,6DA0LtG;AA1LsGA,MAAAA,0DA0L0mB,GAAhtB;AA1LsGA,MAAAA,uDA0LqoB,aAA3uB;AA1LsGA,MAAAA,wDA0LiyB,oDAAv4B;AAAA;;AAAA;AA1LsGA,MAAAA,uDA0LorB,GAA1xB;AA1LsGA,MAAAA,wDA0LorB,mGAA1xB;AA1LsGA,MAAAA,uDA0L0yB,GAAh5B;AA1LsGA,MAAAA,wDA0L0yB,8BAAh5B;AAAA;AAAA;AAAA,iBAA8jCkB,6DAA9jC,EAA+yCP,iDAA/yC;AAAA;AAAA;AAAA;;AACA;AAAA,qDA3LsGX,+DA2LtG,CAA2FiiD,WAA3F,EAAoH,CAAC;AACzG7/C,IAAAA,IAAI,EAAEjC,oDADmG;AAEzGvC,IAAAA,IAAI,EAAE,CAAC;AAAEyE,MAAAA,QAAQ,EAAE,iBAAZ;AAA+B+F,MAAAA,QAAQ,EAAE,aAAzC;AAAwDgF,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,eAAb,CAAhE;AAA+FlF,MAAAA,IAAI,EAAE;AAChG,uBAAe,MADiF;AAEhG,iCAAyB,MAFuE;AAGhG,6CAAqC,cAH2D;AAIhG,iDAAyC,kBAJuD;AAKhG,2BAAmB,gBAL6E;AAMhG,gCAAwB,qBANwE;AAOhG,2BAAmB,kBAP6E;AAQhG,iBAAS,qBARuF;AAShG,mBAAW,wBATqF;AAUhG,wBAAgB;AAVgF,OAArG;AAWI8I,MAAAA,eAAe,EAAEpG,yEAXrB;AAWqD5C,MAAAA,aAAa,EAAE5H,iEAXpE;AAW4FiI,MAAAA,QAAQ,EAAE;AAXtG,KAAD;AAFmG,GAAD,CAApH,EAc4B,YAAY;AAAE,WAAO,CAAC;AAAEjG,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AACvFnG,QAAAA,IAAI,EAAEsI,iDADiF;AAEvF9M,QAAAA,IAAI,EAAE,CAAC4M,qDAAD;AAFiF,OAAD;AAA/B,KAA1B,EAG3B;AAAEpI,MAAAA,IAAI,EAAEnB,2DAAeqiD;AAAvB,KAH2B,EAGA;AAAElhD,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC7DnG,QAAAA,IAAI,EAAEsI,iDADuD;AAE7D9M,QAAAA,IAAI,EAAE,CAACmkD,cAAD;AAFuD,OAAD,EAG7D;AACC3/C,QAAAA,IAAI,EAAE/B,mDAAQA;AADf,OAH6D;AAA/B,KAHA,EAQ3B;AAAE+B,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAR2B,CAAP;AAQc,GAtBxD,EAsB0E;AAAE6G,IAAAA,IAAI,EAAE,CAAC;AACnE7L,MAAAA,IAAI,EAAE3B,gDAAKA;AADwD,KAAD;AAAR,GAtB1E;AAAA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,MAAM+iD,wBAAwB,GAAG,IAAI/4C,yDAAJ,CAAmB,0BAAnB,EAA+C;AAC5Egc,EAAAA,UAAU,EAAE,MADgE;AAE5EmzB,EAAAA,OAAO,EAAE6J;AAFmE,CAA/C,CAAjC;AAIA;;AACA,SAASA,gCAAT,GAA4C;AACxC,SAAO;AACHC,IAAAA,cAAc,EAAE,KADb;AAEHC,IAAAA,SAAS,EAAE,OAFR;AAGHC,IAAAA,SAAS,EAAE,OAHR;AAIHC,IAAAA,aAAa,EAAE;AAJZ,GAAP;AAMH;;AACD,IAAIC,YAAY,GAAG,CAAnB;AACA;;AACA,MAAMC,YAAN,CAAmB;AACfniD,EAAAA,WAAW,CAACW,WAAD,EAAckM,OAAd,EAAuBu1C,eAAvB,EACX;AACAzrC,EAAAA,kBAFW,EAES;AAChB,SAAKhW,WAAL,GAAmBA,WAAnB;AACA,SAAKkM,OAAL,GAAeA,OAAf;AACA,SAAKu1C,eAAL,GAAuBA,eAAvB;AACA,SAAKzrC,kBAAL,GAA0BA,kBAA1B;AACA,SAAK0rC,UAAL,GAAkB,KAAKD,eAAL,CAAqBL,SAAvC;AACA,SAAKO,UAAL,GAAkB,KAAKF,eAAL,CAAqBJ,SAAvC;AACA;;AACA,SAAKO,sBAAL,GAA8B,IAAI3E,oDAAJ,EAA9B;AACA;;AACA,SAAK4E,gBAAL,GAAwBzR,oDAAxB;AACA;;AACA,SAAK0R,UAAL,GAAkB,EAAlB;AACA;;AACA,SAAKC,oBAAL,GAA4B,MAA5B;AACA;;AACA,SAAKC,cAAL,GAAsB,IAAIvjD,yCAAJ,EAAtB;AACA;;AACA,SAAKwjD,iBAAL,GAAyB,KAAKR,eAAL,CAAqBQ,iBAArB,IAA0C,EAAnE;AACA;;AACA,SAAKX,aAAL,GAAqB,KAAKG,eAAL,CAAqBH,aAA1C;AACA,SAAKY,eAAL,GAAuB,KAAKT,eAAL,CAAqBN,cAA5C;AACA,SAAKgB,YAAL,GAAoB,KAAKV,eAAL,CAAqBW,WAAzC;AACA;;AACA,SAAKC,MAAL,GAAc,IAAI95C,uDAAJ,EAAd;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAK+5C,KAAL,GAAa,KAAKD,MAAlB;AACA,SAAKE,OAAL,GAAgB,kBAAiBhB,YAAY,EAAG,EAAhD;AACH;AACD;;;AACa,MAATH,SAAS,GAAG;AACZ,WAAO,KAAKM,UAAZ;AACH;;AACY,MAATN,SAAS,CAAChlD,KAAD,EAAQ;AACjB,QAAIA,KAAK,KAAK,QAAV,IACAA,KAAK,KAAK,OADV,KAEC,OAAO0b,SAAP,KAAqB,WAArB,IAAoCA,SAFrC,CAAJ,EAEqD;AACjDunC,MAAAA,4BAA4B;AAC/B;;AACD,SAAKqC,UAAL,GAAkBtlD,KAAlB;AACA,SAAKomD,kBAAL;AACH;AACD;;;AACa,MAATnB,SAAS,GAAG;AACZ,WAAO,KAAKM,UAAZ;AACH;;AACY,MAATN,SAAS,CAACjlD,KAAD,EAAQ;AACjB,QAAIA,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,OAA/B,KAA2C,OAAO0b,SAAP,KAAqB,WAArB,IAAoCA,SAA/E,CAAJ,EAA+F;AAC3FwnC,MAAAA,4BAA4B;AAC/B;;AACD,SAAKqC,UAAL,GAAkBvlD,KAAlB;AACA,SAAKomD,kBAAL;AACH;AACD;;;AACkB,MAAdrB,cAAc,GAAG;AACjB,WAAO,KAAKe,eAAZ;AACH;;AACiB,MAAdf,cAAc,CAAC/kD,KAAD,EAAQ;AACtB,SAAK8lD,eAAL,GAAuB1kD,4EAAqB,CAACpB,KAAD,CAA5C;AACH;AACD;;;AACe,MAAXgmD,WAAW,GAAG;AACd,WAAO,KAAKD,YAAZ;AACH;;AACc,MAAXC,WAAW,CAAChmD,KAAD,EAAQ;AACnB,SAAK+lD,YAAL,GAAoB3kD,4EAAqB,CAACpB,KAAD,CAAzC;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACkB,MAAVqmD,UAAU,CAACC,OAAD,EAAU;AACpB,UAAMC,kBAAkB,GAAG,KAAKC,mBAAhC;;AACA,QAAID,kBAAkB,IAAIA,kBAAkB,CAAChnD,MAA7C,EAAqD;AACjDgnD,MAAAA,kBAAkB,CAACjsB,KAAnB,CAAyB,GAAzB,EAA8Bzc,OAA9B,CAAuC05B,SAAD,IAAe;AACjD,aAAKmO,UAAL,CAAgBnO,SAAhB,IAA6B,KAA7B;AACH,OAFD;AAGH;;AACD,SAAKiP,mBAAL,GAA2BF,OAA3B;;AACA,QAAIA,OAAO,IAAIA,OAAO,CAAC/mD,MAAvB,EAA+B;AAC3B+mD,MAAAA,OAAO,CAAChsB,KAAR,CAAc,GAAd,EAAmBzc,OAAnB,CAA4B05B,SAAD,IAAe;AACtC,aAAKmO,UAAL,CAAgBnO,SAAhB,IAA6B,IAA7B;AACH,OAFD;AAGA,WAAK3zC,WAAL,CAAiB0C,aAAjB,CAA+BixC,SAA/B,GAA2C,EAA3C;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACiB,MAATvoC,SAAS,GAAG;AACZ,WAAO,KAAKq3C,UAAZ;AACH;;AACY,MAATr3C,SAAS,CAACs3C,OAAD,EAAU;AACnB,SAAKD,UAAL,GAAkBC,OAAlB;AACH;;AACDjqC,EAAAA,QAAQ,GAAG;AACP,SAAK+pC,kBAAL;AACH;;AACDjW,EAAAA,kBAAkB,GAAG;AACjB,SAAKsW,wBAAL;;AACA,SAAKC,WAAL,GAAmB,IAAIxG,8DAAJ,CAAoB,KAAKsF,sBAAzB,EACdmB,QADc,GAEdC,aAFc,GAGdC,cAHc,EAAnB;AAIA,SAAKpB,gBAAL,GAAwB,KAAKiB,WAAL,CAAiBI,MAAjB,CAAwB/mD,SAAxB,CAAkC,MAAM,KAAKkmD,MAAL,CAAY/9B,IAAZ,CAAiB,KAAjB,CAAxC,CAAxB,CANiB,CAOjB;AACA;AACA;;AACA,SAAKs9B,sBAAL,CAA4B10C,OAA5B,CACK3Q,IADL,CACUosC,yDAAS,CAAC,KAAKiZ,sBAAN,CADnB,EACkDzE,0DAAS,CAACl8B,KAAK,IAAIynB,4CAAK,CAAC,GAAGznB,KAAK,CAACzc,GAAN,CAAWL,IAAD,IAAUA,IAAI,CAAC27C,QAAzB,CAAJ,CAAf,CAD3D,EAEK3jD,SAFL,CAEegnD,WAAW,IAAI,KAAKL,WAAL,CAAiBM,gBAAjB,CAAkCD,WAAlC,CAF9B;;AAGA,SAAKvB,sBAAL,CAA4B10C,OAA5B,CAAoC/Q,SAApC,CAA+CknD,SAAD,IAAe;AACzD;AACA;AACA;AACA,YAAMC,OAAO,GAAG,KAAKR,WAArB;;AACA,UAAI,KAAKf,oBAAL,KAA8B,OAA9B,IAAyCuB,OAAO,CAACC,UAAR,EAAoB1+B,SAApB,EAA7C,EAA8E;AAC1E,cAAM5D,KAAK,GAAGoiC,SAAS,CAACG,OAAV,EAAd;AACA,cAAMjmD,KAAK,GAAG+pB,IAAI,CAACxgB,GAAL,CAAS,CAAT,EAAYwgB,IAAI,CAACwD,GAAL,CAAS7J,KAAK,CAACtlB,MAAN,GAAe,CAAxB,EAA2B2nD,OAAO,CAACG,eAAR,IAA2B,CAAtD,CAAZ,CAAd;;AACA,YAAIxiC,KAAK,CAAC1jB,KAAD,CAAL,IAAgB,CAAC0jB,KAAK,CAAC1jB,KAAD,CAAL,CAAa6D,QAAlC,EAA4C;AACxCkiD,UAAAA,OAAO,CAACI,aAAR,CAAsBnmD,KAAtB;AACH,SAFD,MAGK;AACD+lD,UAAAA,OAAO,CAACK,iBAAR;AACH;AACJ;AACJ,KAfD;AAgBH;;AACD9hD,EAAAA,WAAW,GAAG;AACV,SAAK+/C,sBAAL,CAA4BgC,OAA5B;;AACA,SAAK/B,gBAAL,CAAsB7iC,WAAtB;;AACA,SAAKqjC,MAAL,CAAYzmD,QAAZ;AACH;AACD;;;AACAikD,EAAAA,QAAQ,GAAG;AACP;AACA,UAAMgE,WAAW,GAAG,KAAKjC,sBAAL,CAA4B10C,OAAhD;AACA,WAAO22C,WAAW,CAACtnD,IAAZ,CAAiBosC,yDAAS,CAAC,KAAKiZ,sBAAN,CAA1B,EAAyDzE,0DAAS,CAACl8B,KAAK,IAAIynB,4CAAK,CAAC,GAAGznB,KAAK,CAACzc,GAAN,CAAWL,IAAD,IAAUA,IAAI,CAAC07C,QAAzB,CAAJ,CAAf,CAAlE,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACII,EAAAA,OAAO,CAAC6D,KAAD,EAAQ,CAAG;AAClB;AACJ;AACA;AACA;AACA;AACA;;;AACIzD,EAAAA,UAAU,CAACyD,KAAD,EAAQ,CAAG;AACrB;;;AACAC,EAAAA,cAAc,CAACtgD,KAAD,EAAQ;AAClB,UAAMugD,OAAO,GAAGvgD,KAAK,CAACugD,OAAtB;AACA,UAAMV,OAAO,GAAG,KAAKR,WAArB;;AACA,YAAQkB,OAAR;AACI,WAAKnH,0DAAL;AACI,YAAI,CAACC,sEAAc,CAACr5C,KAAD,CAAnB,EAA4B;AACxBA,UAAAA,KAAK,CAACG,cAAN;AACA,eAAKy+C,MAAL,CAAY/9B,IAAZ,CAAiB,SAAjB;AACH;;AACD;;AACJ,WAAKs4B,8DAAL;AACI,YAAI,KAAKqH,UAAL,IAAmB,KAAK70C,SAAL,KAAmB,KAA1C,EAAiD;AAC7C,eAAKizC,MAAL,CAAY/9B,IAAZ,CAAiB,SAAjB;AACH;;AACD;;AACJ,WAAKq4B,+DAAL;AACI,YAAI,KAAKsH,UAAL,IAAmB,KAAK70C,SAAL,KAAmB,KAA1C,EAAiD;AAC7C,eAAKizC,MAAL,CAAY/9B,IAAZ,CAAiB,SAAjB;AACH;;AACD;;AACJ;AACI,YAAI0/B,OAAO,KAAKvH,4DAAZ,IAAwBuH,OAAO,KAAKtH,8DAAxC,EAAoD;AAChD4G,UAAAA,OAAO,CAACY,cAAR,CAAuB,UAAvB;AACH;;AACDZ,QAAAA,OAAO,CAACa,SAAR,CAAkB1gD,KAAlB;AACA;AAtBR,KAHkB,CA2BlB;AACA;;;AACAA,IAAAA,KAAK,CAACI,eAAN;AACH;AACD;AACJ;AACA;AACA;;;AACIugD,EAAAA,cAAc,CAAClE,MAAM,GAAG,SAAV,EAAqB;AAC/B;AACA,QAAI,KAAKmE,WAAT,EAAsB;AAClB,WAAKn4C,OAAL,CAAaW,QAAb,CAAsBtQ,IAAtB,CAA2BS,qDAAI,CAAC,CAAD,CAA/B,EAAoCb,SAApC,CAA8C,MAAM,KAAKmoD,eAAL,CAAqBpE,MAArB,CAApD;AACH,KAFD,MAGK;AACD,WAAKoE,eAAL,CAAqBpE,MAArB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACIoE,EAAAA,eAAe,CAACpE,MAAD,EAAS;AACpB,UAAMoD,OAAO,GAAG,KAAKR,WAArB;AACAQ,IAAAA,OAAO,CAACY,cAAR,CAAuBhE,MAAvB,EAA+BqE,kBAA/B,GAFoB,CAGpB;AACA;AACA;;AACA,QAAI,CAACjB,OAAO,CAACC,UAAT,IAAuB,KAAK3B,sBAAL,CAA4BjmD,MAAvD,EAA+D;AAC3D,UAAIuU,OAAO,GAAG,KAAK0xC,sBAAL,CAA4B5hC,KAA5B,CAAkCogC,eAAlC,GAAoDoE,aAAlE,CAD2D,CAE3D;AACA;AACA;AACA;;;AACA,aAAOt0C,OAAP,EAAgB;AACZ,YAAIA,OAAO,CAACzE,YAAR,CAAqB,MAArB,MAAiC,MAArC,EAA6C;AACzCyE,UAAAA,OAAO,CAAC3N,KAAR;AACA;AACH,SAHD,MAIK;AACD2N,UAAAA,OAAO,GAAGA,OAAO,CAACs0C,aAAlB;AACH;AACJ;AACJ;AACJ;AACD;AACJ;AACA;AACA;;;AACIC,EAAAA,eAAe,GAAG;AACd,SAAK3B,WAAL,CAAiBY,aAAjB,CAA+B,CAAC,CAAhC;AACH;AACD;AACJ;AACA;AACA;;;AACIgB,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB;AACA;AACA,UAAMC,SAAS,GAAGt9B,IAAI,CAACwD,GAAL,CAAS,KAAK+5B,cAAL,GAAsBF,KAA/B,EAAsC,EAAtC,CAAlB;AACA,UAAMG,YAAY,GAAI,GAAE,KAAKC,gBAAiB,GAAEH,SAAU,EAA1D;AACA,UAAMI,eAAe,GAAGh4B,MAAM,CAACxxB,IAAP,CAAY,KAAKsmD,UAAjB,EAA6Bx0C,IAA7B,CAAkCqmC,SAAS,IAAI;AACnE,aAAOA,SAAS,CAACsR,UAAV,CAAqB,KAAKF,gBAA1B,CAAP;AACH,KAFuB,CAAxB;;AAGA,QAAI,CAACC,eAAD,IAAoBA,eAAe,KAAK,KAAKE,kBAAjD,EAAqE;AACjE,UAAI,KAAKA,kBAAT,EAA6B;AACzB,aAAKpD,UAAL,CAAgB,KAAKoD,kBAArB,IAA2C,KAA3C;AACH;;AACD,WAAKpD,UAAL,CAAgBgD,YAAhB,IAAgC,IAAhC;AACA,WAAKI,kBAAL,GAA0BJ,YAA1B;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACItC,EAAAA,kBAAkB,CAAC2C,IAAI,GAAG,KAAK/D,SAAb,EAAwBgE,IAAI,GAAG,KAAK/D,SAApC,EAA+C;AAC7D,UAAMqB,OAAO,GAAG,KAAKZ,UAArB;AACAY,IAAAA,OAAO,CAAC,iBAAD,CAAP,GAA6ByC,IAAI,KAAK,QAAtC;AACAzC,IAAAA,OAAO,CAAC,gBAAD,CAAP,GAA4ByC,IAAI,KAAK,OAArC;AACAzC,IAAAA,OAAO,CAAC,gBAAD,CAAP,GAA4B0C,IAAI,KAAK,OAArC;AACA1C,IAAAA,OAAO,CAAC,gBAAD,CAAP,GAA4B0C,IAAI,KAAK,OAArC,CAL6D,CAM7D;;AACA,SAAKpvC,kBAAL,EAAyBlT,YAAzB;AACH;AACD;;;AACAuiD,EAAAA,eAAe,GAAG;AACd;AACA,SAAKtD,oBAAL,GAA4B,OAA5B;AACH;AACD;;;AACAuD,EAAAA,eAAe,GAAG;AACd;AACA,SAAKvD,oBAAL,GAA4B,MAA5B;AACH;AACD;;;AACAwD,EAAAA,gBAAgB,CAAC9hD,KAAD,EAAQ;AACpB,SAAKu+C,cAAL,CAAoB1lD,IAApB,CAAyBmH,KAAzB;;AACA,SAAK+hD,YAAL,GAAoB,KAApB;AACH;;AACDC,EAAAA,iBAAiB,CAAChiD,KAAD,EAAQ;AACrB,SAAK+hD,YAAL,GAAoB,IAApB,CADqB,CAErB;AACA;AACA;AACA;AACA;AACA;;AACA,QAAI/hD,KAAK,CAACiiD,OAAN,KAAkB,OAAlB,IAA6B,KAAK5C,WAAL,CAAiBW,eAAjB,KAAqC,CAAtE,EAAyE;AACrEhgD,MAAAA,KAAK,CAACyM,OAAN,CAAcy1C,SAAd,GAA0B,CAA1B;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACI9C,EAAAA,wBAAwB,GAAG;AACvB,SAAK+C,SAAL,CAAe14C,OAAf,CACK3Q,IADL,CACUosC,yDAAS,CAAC,KAAKid,SAAN,CADnB,EAEKzpD,SAFL,CAEgB8kB,KAAD,IAAW;AACtB,WAAK2gC,sBAAL,CAA4Br8B,KAA5B,CAAkCtE,KAAK,CAACxC,MAAN,CAAata,IAAI,IAAIA,IAAI,CAACy7C,WAAL,KAAqB,IAA1C,CAAlC;;AACA,WAAKgC,sBAAL,CAA4BiE,eAA5B;AACH,KALD;AAMH;;AAjUc;;AAmUnBrE,YAAY,CAAC7hD,IAAb;AAAA,mBAAyG6hD,YAAzG,EA/iBsG/jD,+DA+iBtG,CAAuIA,qDAAvI,GA/iBsGA,+DA+iBtG,CAAiKA,iDAAjK,GA/iBsGA,+DA+iBtG,CAAuLwjD,wBAAvL,GA/iBsGxjD,+DA+iBtG,CAA4NA,4DAA5N;AAAA;;AACA+jD,YAAY,CAAC5hD,IAAb,kBAhjBsGnC,+DAgjBtG;AAAA,QAA6F+jD,YAA7F;AAAA;AAAA;AAhjBsG/jD,MAAAA,4DAgjBtG,WAA2kBygD,gBAA3kB;AAhjBsGzgD,MAAAA,4DAgjBtG,WAA0pBiiD,WAA1pB;AAhjBsGjiD,MAAAA,4DAgjBtG,WAAguBiiD,WAAhuB;AAAA;;AAAA;AAAA;;AAhjBsGjiD,MAAAA,4DAgjBtG,MAhjBsGA,yDAgjBtG;AAhjBsGA,MAAAA,4DAgjBtG,MAhjBsGA,yDAgjBtG;AAhjBsGA,MAAAA,4DAgjBtG,MAhjBsGA,yDAgjBtG;AAAA;AAAA;AAAA;AAAA;AAhjBsGA,MAAAA,yDAgjBtG,CAAqzBqM,sDAArzB;AAAA;;AAAA;AAAA;;AAhjBsGrM,MAAAA,4DAgjBtG,MAhjBsGA,yDAgjBtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA,qDAjjBsGA,+DAijBtG,CAA2F+jD,YAA3F,EAAqH,CAAC;AAC1G3hD,IAAAA,IAAI,EAAEnC,oDAASA;AAD2F,GAAD,CAArH,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEmC,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAA1B,EAA+C;AAAE3I,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC5GnG,QAAAA,IAAI,EAAEsI,iDADsG;AAE5G9M,QAAAA,IAAI,EAAE,CAAC4lD,wBAAD;AAFsG,OAAD;AAA/B,KAA/C,EAG3B;AAAEphD,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAH2B,CAAP;AAGc,GALxD,EAK0E;AAAE+gD,IAAAA,SAAS,EAAE,CAAC;AACxE/lD,MAAAA,IAAI,EAAE+I,0DADkE;AAExEvN,MAAAA,IAAI,EAAE,CAACqkD,WAAD,EAAc;AAAEj+B,QAAAA,WAAW,EAAE;AAAf,OAAd;AAFkE,KAAD,CAAb;AAG1D6/B,IAAAA,aAAa,EAAE,CAAC;AAChBzhD,MAAAA,IAAI,EAAE3B,gDAAKA;AADK,KAAD,CAH2C;AAK1D4nD,IAAAA,SAAS,EAAE,CAAC;AACZjmD,MAAAA,IAAI,EAAE3B,gDADM;AAEZ7C,MAAAA,IAAI,EAAE,CAAC,YAAD;AAFM,KAAD,CAL+C;AAQ1D0qD,IAAAA,cAAc,EAAE,CAAC;AACjBlmD,MAAAA,IAAI,EAAE3B,gDADW;AAEjB7C,MAAAA,IAAI,EAAE,CAAC,iBAAD;AAFW,KAAD,CAR0C;AAW1D2qD,IAAAA,eAAe,EAAE,CAAC;AAClBnmD,MAAAA,IAAI,EAAE3B,gDADY;AAElB7C,MAAAA,IAAI,EAAE,CAAC,kBAAD;AAFY,KAAD,CAXyC;AAc1D+lD,IAAAA,SAAS,EAAE,CAAC;AACZvhD,MAAAA,IAAI,EAAE3B,gDAAKA;AADC,KAAD,CAd+C;AAgB1DmjD,IAAAA,SAAS,EAAE,CAAC;AACZxhD,MAAAA,IAAI,EAAE3B,gDAAKA;AADC,KAAD,CAhB+C;AAkB1D4Q,IAAAA,WAAW,EAAE,CAAC;AACdjP,MAAAA,IAAI,EAAE7B,oDADQ;AAEd3C,MAAAA,IAAI,EAAE,CAACyO,sDAAD;AAFQ,KAAD,CAlB6C;AAqB1DmX,IAAAA,KAAK,EAAE,CAAC;AACRphB,MAAAA,IAAI,EAAE+I,0DADE;AAERvN,MAAAA,IAAI,EAAE,CAACqkD,WAAD,EAAc;AAAEj+B,QAAAA,WAAW,EAAE;AAAf,OAAd;AAFE,KAAD,CArBmD;AAwB1D4iC,IAAAA,WAAW,EAAE,CAAC;AACdxkD,MAAAA,IAAI,EAAE5B,uDADQ;AAEd5C,MAAAA,IAAI,EAAE,CAAC6iD,gBAAD;AAFQ,KAAD,CAxB6C;AA2B1DiD,IAAAA,cAAc,EAAE,CAAC;AACjBthD,MAAAA,IAAI,EAAE3B,gDAAKA;AADM,KAAD,CA3B0C;AA6B1DkkD,IAAAA,WAAW,EAAE,CAAC;AACdviD,MAAAA,IAAI,EAAE3B,gDAAKA;AADG,KAAD,CA7B6C;AA+B1DukD,IAAAA,UAAU,EAAE,CAAC;AACb5iD,MAAAA,IAAI,EAAE3B,gDADO;AAEb7C,MAAAA,IAAI,EAAE,CAAC,OAAD;AAFO,KAAD,CA/B8C;AAkC1D+P,IAAAA,SAAS,EAAE,CAAC;AACZvL,MAAAA,IAAI,EAAE3B,gDAAKA;AADC,KAAD,CAlC+C;AAoC1DmkD,IAAAA,MAAM,EAAE,CAAC;AACTxiD,MAAAA,IAAI,EAAE8I,iDAAMA;AADH,KAAD,CApCkD;AAsC1D25C,IAAAA,KAAK,EAAE,CAAC;AACRziD,MAAAA,IAAI,EAAE8I,iDAAMA;AADJ,KAAD;AAtCmD,GAL1E;AAAA;AA8CA;;;AACA,MAAMs9C,OAAN,SAAsBzE,YAAtB,CAAmC;AAC/BniD,EAAAA,WAAW,CAAC8L,UAAD,EAAa2vC,MAAb,EAAqBoL,cAArB,EAAqCC,iBAArC,EAAwD;AAC/D,UAAMh7C,UAAN,EAAkB2vC,MAAlB,EAA0BoL,cAA1B,EAA0CC,iBAA1C;AACA,SAAKpB,gBAAL,GAAwB,iBAAxB;AACA,SAAKF,cAAL,GAAsB,CAAtB;AACH;;AAL8B;;AAOnCoB,OAAO,CAACtmD,IAAR;AAAA,mBAAoGsmD,OAApG,EAvmBsGxoD,+DAumBtG,CAA6HA,qDAA7H,GAvmBsGA,+DAumBtG,CAAuJA,iDAAvJ,GAvmBsGA,+DAumBtG,CAA6KwjD,wBAA7K,GAvmBsGxjD,+DAumBtG,CAAkNA,4DAAlN;AAAA;;AACAwoD,OAAO,CAAC/gD,IAAR,kBAxmBsGzH,+DAwmBtG;AAAA,QAAwFwoD,OAAxF;AAAA;AAAA;AAAA;AAAA;AAxmBsGxoD,MAAAA,yDAwmBtG;AAAA;AAAA;AAAA;AAAA,aAxmBsGA,gEAwmBtG,CAAwP,CAAC;AAAE0H,IAAAA,OAAO,EAAEq6C,cAAX;AAA2Bp6C,IAAAA,WAAW,EAAE6gD;AAAxC,GAAD,CAAxP,GAxmBsGxoD,wEAwmBtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxmBsGA,MAAAA,6DAwmBtG;AAxmBsGA,MAAAA,wDAwmB8Q,wDAApX;AAAA;AAAA;AAAA,iBAAg5FW,oDAAh5F;AAAA;AAAA;AAAA;AAAA,eAAg+F,CAAC2/C,iBAAiB,CAACC,aAAnB,EAAkCD,iBAAiB,CAACE,WAApD;AAAh+F;AAAA;AAAA;;AACA;AAAA,qDAzmBsGxgD,+DAymBtG,CAA2FwoD,OAA3F,EAAgH,CAAC;AACrGpmD,IAAAA,IAAI,EAAEjC,oDAD+F;AAErGvC,IAAAA,IAAI,EAAE,CAAC;AAAEyE,MAAAA,QAAQ,EAAE,UAAZ;AAAwB2O,MAAAA,eAAe,EAAEpG,yEAAzC;AAAyE5C,MAAAA,aAAa,EAAE5H,iEAAxF;AAAgHgI,MAAAA,QAAQ,EAAE,SAA1H;AAAqIF,MAAAA,IAAI,EAAE;AACtI,6BAAqB,MADiH;AAEtI,kCAA0B,MAF4G;AAGtI,mCAA2B;AAH2G,OAA3I;AAIImqC,MAAAA,UAAU,EAAE,CAACiO,iBAAiB,CAACC,aAAnB,EAAkCD,iBAAiB,CAACE,WAApD,CAJhB;AAIkFr4C,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAEq6C,cAAX;AAA2Bp6C,QAAAA,WAAW,EAAE6gD;AAAxC,OAAD,CAJ7F;AAIkJngD,MAAAA,QAAQ,EAAE,+oBAJ5J;AAI6yBC,MAAAA,MAAM,EAAE,CAAC,22DAAD;AAJrzB,KAAD;AAF+F,GAAD,CAAhH,EAO4B,YAAY;AAAE,WAAO,CAAC;AAAElG,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAA1B,EAA+C;AAAE3I,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC5GnG,QAAAA,IAAI,EAAEsI,iDADsG;AAE5G9M,QAAAA,IAAI,EAAE,CAAC4lD,wBAAD;AAFsG,OAAD;AAA/B,KAA/C,EAG3B;AAAEphD,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAH2B,CAAP;AAGc,GAVxD;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,MAAMwhD,wBAAwB,GAAG,IAAIn+C,yDAAJ,CAAmB,0BAAnB,CAAjC;AACA;;AACA,SAASo+C,gCAAT,CAA0CC,OAA1C,EAAmD;AAC/C,SAAO,MAAMA,OAAO,CAACC,gBAAR,CAAyBC,UAAzB,EAAb;AACH;AACD;;;AACA,MAAMC,yCAAyC,GAAG;AAC9CvhD,EAAAA,OAAO,EAAEkhD,wBADqC;AAE9CnP,EAAAA,IAAI,EAAE,CAACyG,0DAAD,CAFwC;AAG9CxV,EAAAA,UAAU,EAAEme;AAHkC,CAAlD;AAKA;;AACA,MAAMK,sBAAsB,GAAG,CAA/B;AACA;;AACA,MAAMC,2BAA2B,GAAGrkC,uFAA+B,CAAC;AAAEO,EAAAA,OAAO,EAAE;AAAX,CAAD,CAAnE,EACA;;AACA,MAAM+jC,mBAAN,CAA0B;AACtBxnD,EAAAA,WAAW,CAACynD,QAAD,EAAWljB,QAAX,EAAqB2a,iBAArB,EAAwCwI,cAAxC,EAAwD9C,UAAxD,EACX;AACA;AACA+C,EAAAA,iBAHW,EAGQ/wC,IAHR,EAGc0pC,aAHd,EAG6BzzC,OAH7B,EAGsC;AAC7C,SAAK46C,QAAL,GAAgBA,QAAhB;AACA,SAAKljB,QAAL,GAAgBA,QAAhB;AACA,SAAK2a,iBAAL,GAAyBA,iBAAzB;AACA,SAAKyI,iBAAL,GAAyBA,iBAAzB;AACA,SAAK/wC,IAAL,GAAYA,IAAZ;AACA,SAAK0pC,aAAL,GAAqBA,aAArB;AACA,SAAKzzC,OAAL,GAAeA,OAAf;AACA,SAAK+6C,WAAL,GAAmB,IAAnB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,2BAAL,GAAmC/W,oDAAnC;AACA,SAAKgX,kBAAL,GAA0BhX,oDAA1B;AACA,SAAKiX,sBAAL,GAA8BjX,oDAA9B;AACA;AACR;AACA;AACA;;AACQ,SAAKkX,iBAAL,GAA0B7jD,KAAD,IAAW;AAChC,UAAI,CAAC84C,mFAAgC,CAAC94C,KAAD,CAArC,EAA8C;AAC1C,aAAK8jD,SAAL,GAAiB,OAAjB;AACH;AACJ,KAJD,CAjB6C,CAsB7C;AACA;;;AACA,SAAKA,SAAL,GAAiBlrD,SAAjB;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKmrD,YAAL,GAAoB,IAApB;AACA;;AACA,SAAKC,UAAL,GAAkB,IAAIl/C,uDAAJ,EAAlB;AACA;AACR;AACA;AACA;AACA;AACQ;;AACA,SAAKm/C,UAAL,GAAkB,KAAKD,UAAvB;AACA;;AACA,SAAKE,UAAL,GAAkB,IAAIp/C,uDAAJ,EAAlB;AACA;AACR;AACA;AACA;AACA;AACQ;;AACA,SAAKq/C,WAAL,GAAmB,KAAKD,UAAxB;AACA,SAAKE,eAAL,GAAuBd,cAAvB;AACA,SAAKe,mBAAL,GAA2B7D,UAAU,YAAYzC,YAAtB,GAAqCyC,UAArC,GAAkD5nD,SAA7E;;AACAunC,IAAAA,QAAQ,CAAClhC,aAAT,CAAuBmhB,gBAAvB,CAAwC,YAAxC,EAAsD,KAAKyjC,iBAA3D,EAA8EV,2BAA9E;;AACA,QAAII,iBAAJ,EAAuB;AACnBA,MAAAA,iBAAiB,CAAChH,gBAAlB,GAAqC,KAAK+H,eAAL,EAArC;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACoC,MAA5BC,4BAA4B,GAAG;AAC/B,WAAO,KAAKC,IAAZ;AACH;;AAC+B,MAA5BD,4BAA4B,CAACz+C,CAAD,EAAI;AAChC,SAAK0+C,IAAL,GAAY1+C,CAAZ;AACH;AACD;;;AACQ,MAAJ0+C,IAAI,GAAG;AACP,WAAO,KAAKC,KAAZ;AACH;;AACO,MAAJD,IAAI,CAACA,IAAD,EAAO;AACX,QAAIA,IAAI,KAAK,KAAKC,KAAlB,EAAyB;AACrB;AACH;;AACD,SAAKA,KAAL,GAAaD,IAAb;;AACA,SAAKZ,sBAAL,CAA4BroC,WAA5B;;AACA,QAAIipC,IAAJ,EAAU;AACN,UAAIA,IAAI,KAAK,KAAKH,mBAAd,KAAsC,OAAOhwC,SAAP,KAAqB,WAArB,IAAoCA,SAA1E,CAAJ,EAA0F;AACtFynC,QAAAA,0BAA0B;AAC7B;;AACD,WAAK8H,sBAAL,GAA8BY,IAAI,CAAC3F,KAAL,CAAWnmD,SAAX,CAAsBgsD,MAAD,IAAY;AAC3D,aAAKC,YAAL,CAAkBD,MAAlB,EAD2D,CAE3D;;;AACA,YAAI,CAACA,MAAM,KAAK,OAAX,IAAsBA,MAAM,KAAK,KAAlC,KAA4C,KAAKL,mBAArD,EAA0E;AACtE,eAAKA,mBAAL,CAAyBzF,MAAzB,CAAgC/9B,IAAhC,CAAqC6jC,MAArC;AACH;AACJ,OAN6B,CAA9B;AAOH;AACJ;;AACD5b,EAAAA,kBAAkB,GAAG;AACjB,SAAK8b,UAAL;;AACA,SAAKC,YAAL;AACH;;AACDzmD,EAAAA,WAAW,GAAG;AACV,QAAI,KAAKolD,WAAT,EAAsB;AAClB,WAAKA,WAAL,CAAiBjI,OAAjB;;AACA,WAAKiI,WAAL,GAAmB,IAAnB;AACH;;AACD,SAAKrjB,QAAL,CAAclhC,aAAd,CAA4BqhB,mBAA5B,CAAgD,YAAhD,EAA8D,KAAKujC,iBAAnE,EAAsFV,2BAAtF;;AACA,SAAKS,sBAAL,CAA4BroC,WAA5B;;AACA,SAAKmoC,2BAAL,CAAiCnoC,WAAjC;;AACA,SAAKooC,kBAAL,CAAwBpoC,WAAxB;AACH;AACD;;;AACY,MAARupC,QAAQ,GAAG;AACX,WAAO,KAAKrB,SAAZ;AACH;AACD;;;AACO,MAAH3zC,GAAG,GAAG;AACN,WAAO,KAAK0C,IAAL,IAAa,KAAKA,IAAL,CAAU7Z,KAAV,KAAoB,KAAjC,GAAyC,KAAzC,GAAiD,KAAxD;AACH;AACD;;;AACA2rD,EAAAA,eAAe,GAAG;AACd,WAAO,CAAC,EAAE,KAAKf,iBAAL,IAA0B,KAAKc,mBAAjC,CAAR;AACH;AACD;;;AACAU,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKtB,SAAL,GAAiB,KAAKuB,SAAL,EAAjB,GAAoC,KAAKC,QAAL,EAA3C;AACH;AACD;;;AACAA,EAAAA,QAAQ,GAAG;AACP,QAAI,KAAKxB,SAAT,EAAoB;AAChB;AACH;;AACD,SAAKmB,UAAL;;AACA,UAAMM,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,UAAMC,aAAa,GAAGF,UAAU,CAACG,SAAX,EAAtB;AACA,UAAMC,gBAAgB,GAAGF,aAAa,CAACE,gBAAvC;;AACA,SAAKC,YAAL,CAAkBD,gBAAlB;;AACAF,IAAAA,aAAa,CAACzG,WAAd,GACI,KAAK6F,IAAL,CAAU7F,WAAV,IAAyB,IAAzB,GAAgC,CAAC,KAAK2F,eAAL,EAAjC,GAA0D,KAAKE,IAAL,CAAU7F,WADxE;AAEAuG,IAAAA,UAAU,CAAClK,MAAX,CAAkB,KAAKwK,UAAL,EAAlB;;AACA,QAAI,KAAKhB,IAAL,CAAU5D,WAAd,EAA2B;AACvB,WAAK4D,IAAL,CAAU5D,WAAV,CAAsB5F,MAAtB,CAA6B,KAAKyK,QAAlC;AACH;;AACD,SAAK/B,2BAAL,GAAmC,KAAKgC,mBAAL,GAA2BhtD,SAA3B,CAAqC,MAAM,KAAKssD,SAAL,EAA3C,CAAnC;;AACA,SAAKW,SAAL;;AACA,QAAI,KAAKnB,IAAL,YAAqBzG,YAAzB,EAAuC;AACnC,WAAKyG,IAAL,CAAU5C,eAAV;;AACA,WAAK4C,IAAL,CAAUrG,sBAAV,CAAiC10C,OAAjC,CAAyC3Q,IAAzC,CAA8C0M,0DAAS,CAAC,KAAKg/C,IAAL,CAAU3F,KAAX,CAAvD,EAA0EnmD,SAA1E,CAAoF,MAAM;AACtF;AACA;AACA4sD,QAAAA,gBAAgB,CAACM,kBAAjB,CAAoC,KAApC,EAA2CC,mBAA3C;AACAP,QAAAA,gBAAgB,CAACM,kBAAjB,CAAoC,IAApC;AACH,OALD;AAMH;AACJ;AACD;;;AACAZ,EAAAA,SAAS,GAAG;AACR,SAAKR,IAAL,CAAU3F,KAAV,CAAgBh+B,IAAhB;AACH;AACD;AACJ;AACA;AACA;;;AACI/hB,EAAAA,KAAK,CAAC29C,MAAD,EAAS19C,OAAT,EAAkB;AACnB,QAAI,KAAKm9C,aAAL,IAAsBO,MAA1B,EAAkC;AAC9B,WAAKP,aAAL,CAAmBQ,QAAnB,CAA4B,KAAKvc,QAAjC,EAA2Csc,MAA3C,EAAmD19C,OAAnD;AACH,KAFD,MAGK;AACD,WAAKohC,QAAL,CAAclhC,aAAd,CAA4BH,KAA5B,CAAkCC,OAAlC;AACH;AACJ;AACD;AACJ;AACA;;;AACI+mD,EAAAA,cAAc,GAAG;AACb,SAAKtC,WAAL,EAAkBsC,cAAlB;AACH;AACD;;;AACAnB,EAAAA,YAAY,CAACD,MAAD,EAAS;AACjB,QAAI,CAAC,KAAKlB,WAAN,IAAqB,CAAC,KAAKsB,QAA/B,EAAyC;AACrC;AACH;;AACD,UAAMN,IAAI,GAAG,KAAKA,IAAlB;;AACA,SAAKd,2BAAL,CAAiCnoC,WAAjC;;AACA,SAAKioC,WAAL,CAAiBtI,MAAjB,GANiB,CAOjB;AACA;AACA;AACA;;;AACA,QAAI,KAAK6I,YAAL,KAAsBW,MAAM,KAAK,SAAX,IAAwB,CAAC,KAAKZ,SAA9B,IAA2C,CAAC,KAAKQ,eAAL,EAAlE,CAAJ,EAA+F;AAC3F,WAAKxlD,KAAL,CAAW,KAAKglD,SAAhB;AACH;;AACD,SAAKA,SAAL,GAAiBlrD,SAAjB;;AACA,QAAI4rD,IAAI,YAAYzG,YAApB,EAAkC;AAC9ByG,MAAAA,IAAI,CAAC3C,eAAL;;AACA,UAAI2C,IAAI,CAAC5D,WAAT,EAAsB;AAClB;AACA4D,QAAAA,IAAI,CAACjG,cAAL,CACKzlD,IADL,CACUkiB,uDAAM,CAAChb,KAAK,IAAIA,KAAK,CAACiiD,OAAN,KAAkB,MAA5B,CADhB,EACqD1oD,qDAAI,CAAC,CAAD,CADzD,EAEA;AACAiM,QAAAA,0DAAS,CAACg/C,IAAI,CAAC5D,WAAL,CAAiB7F,SAAlB,CAHT,EAIKriD,SAJL,CAIe;AACXG,UAAAA,IAAI,EAAE,MAAM2rD,IAAI,CAAC5D,WAAL,CAAiB1F,MAAjB,EADD;AAEX;AACA/iD,UAAAA,QAAQ,EAAE,MAAM,KAAK4tD,cAAL,CAAoB,KAApB;AAHL,SAJf;AASH,OAXD,MAYK;AACD,aAAKA,cAAL,CAAoB,KAApB;AACH;AACJ,KAjBD,MAkBK;AACD,WAAKA,cAAL,CAAoB,KAApB;;AACA,UAAIvB,IAAI,CAAC5D,WAAT,EAAsB;AAClB4D,QAAAA,IAAI,CAAC5D,WAAL,CAAiB1F,MAAjB;AACH;AACJ;AACJ;AACD;AACJ;AACA;AACA;;;AACIyK,EAAAA,SAAS,GAAG;AACR,SAAKnB,IAAL,CAAUhE,UAAV,GAAuB,KAAK8D,eAAL,KAAyB,KAAKD,mBAA9B,GAAoDzrD,SAA3E;AACA,SAAK4rD,IAAL,CAAU74C,SAAV,GAAsB,KAAKmE,GAA3B;;AACA,SAAKk2C,iBAAL;;AACA,SAAKxB,IAAL,CAAU7D,cAAV,CAAyB,KAAKmD,SAAL,IAAkB,SAA3C;;AACA,SAAKiC,cAAL,CAAoB,IAApB;AACH;AACD;;;AACAC,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKxB,IAAL,CAAUvD,YAAd,EAA4B;AACxB,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIV,UAAU,GAAG,KAAKgE,IAAL,CAAUhE,UAA3B;;AACA,aAAOA,UAAP,EAAmB;AACfU,QAAAA,KAAK;AACLV,QAAAA,UAAU,GAAGA,UAAU,CAACA,UAAxB;AACH;;AACD,WAAKgE,IAAL,CAAUvD,YAAV,CAAuBC,KAAvB;AACH;AACJ,GA5OqB,CA6OtB;;;AACA6E,EAAAA,cAAc,CAACE,MAAD,EAAS;AACnB,SAAKxC,SAAL,GAAiBwC,MAAjB;AACA,SAAKxC,SAAL,GAAiB,KAAKO,UAAL,CAAgBnjC,IAAhB,EAAjB,GAA0C,KAAKqjC,UAAL,CAAgBrjC,IAAhB,EAA1C;;AACA,QAAI,KAAKyjC,eAAL,EAAJ,EAA4B;AACxB,WAAKf,iBAAL,CAAuBpG,eAAvB,CAAuC8I,MAAvC;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACIrB,EAAAA,UAAU,GAAG;AACT,QAAI,CAAC,KAAKJ,IAAN,KAAe,OAAOnwC,SAAP,KAAqB,WAArB,IAAoCA,SAAnD,CAAJ,EAAmE;AAC/DsnC,MAAAA,wBAAwB;AAC3B;AACJ;AACD;AACJ;AACA;AACA;;;AACIwJ,EAAAA,cAAc,GAAG;AACb,QAAI,CAAC,KAAK3B,WAAV,EAAuB;AACnB,YAAMzS,MAAM,GAAG,KAAKmV,iBAAL,EAAf;;AACA,WAAKC,qBAAL,CAA2BpV,MAAM,CAACuU,gBAAlC;;AACA,WAAK9B,WAAL,GAAmB,KAAKH,QAAL,CAAcv5C,MAAd,CAAqBinC,MAArB,CAAnB,CAHmB,CAInB;AACA;AACA;;AACA,WAAKyS,WAAL,CAAiB4C,aAAjB,GAAiC1tD,SAAjC;AACH;;AACD,WAAO,KAAK8qD,WAAZ;AACH;AACD;AACJ;AACA;AACA;;;AACI0C,EAAAA,iBAAiB,GAAG;AAChB,WAAO,IAAI/L,gEAAJ,CAAkB;AACrBmL,MAAAA,gBAAgB,EAAE,KAAKjC,QAAL,CACb30C,QADa,GAEb23C,mBAFa,CAEO,KAAKlmB,QAFZ,EAGbylB,kBAHa,GAIbU,iBAJa,GAKbC,qBALa,CAKS,sCALT,CADG;AAOrB1I,MAAAA,aAAa,EAAE,KAAK2G,IAAL,CAAU3G,aAAV,IAA2B,kCAPrB;AAQrBmB,MAAAA,UAAU,EAAE,KAAKwF,IAAL,CAAUhG,iBARD;AASrB8E,MAAAA,cAAc,EAAE,KAAKc,eAAL,EATK;AAUrBz4C,MAAAA,SAAS,EAAE,KAAK6G;AAVK,KAAlB,CAAP;AAYH;AACD;AACJ;AACA;AACA;AACA;;;AACI2zC,EAAAA,qBAAqB,CAACz3C,QAAD,EAAW;AAC5B,QAAI,KAAK81C,IAAL,CAAUzF,kBAAd,EAAkC;AAC9BrwC,MAAAA,QAAQ,CAAC83C,eAAT,CAAyB9tD,SAAzB,CAAmC6c,MAAM,IAAI;AACzC,cAAMmsC,IAAI,GAAGnsC,MAAM,CAACkxC,cAAP,CAAsBC,QAAtB,KAAmC,OAAnC,GAA6C,OAA7C,GAAuD,QAApE;AACA,cAAM/E,IAAI,GAAGpsC,MAAM,CAACkxC,cAAP,CAAsBE,QAAtB,KAAmC,KAAnC,GAA2C,OAA3C,GAAqD,OAAlE,CAFyC,CAGzC;AACA;AACA;;AACA,YAAI,KAAKl+C,OAAT,EAAkB;AACd,eAAKA,OAAL,CAAauX,GAAb,CAAiB,MAAM,KAAKwkC,IAAL,CAAUzF,kBAAV,CAA6B2C,IAA7B,EAAmCC,IAAnC,CAAvB;AACH,SAFD,MAGK;AACD,eAAK6C,IAAL,CAAUzF,kBAAV,CAA6B2C,IAA7B,EAAmCC,IAAnC;AACH;AACJ,OAZD;AAaH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;AACI4D,EAAAA,YAAY,CAACD,gBAAD,EAAmB;AAC3B,QAAI,CAACsB,OAAD,EAAUC,eAAV,IAA6B,KAAKrC,IAAL,CAAU7G,SAAV,KAAwB,QAAxB,GAAmC,CAAC,KAAD,EAAQ,OAAR,CAAnC,GAAsD,CAAC,OAAD,EAAU,KAAV,CAAvF;AACA,QAAI,CAACgJ,QAAD,EAAWG,gBAAX,IAA+B,KAAKtC,IAAL,CAAU5G,SAAV,KAAwB,OAAxB,GAAkC,CAAC,QAAD,EAAW,KAAX,CAAlC,GAAsD,CAAC,KAAD,EAAQ,QAAR,CAAzF;AACA,QAAI,CAACmJ,OAAD,EAAUC,eAAV,IAA6B,CAACL,QAAD,EAAWG,gBAAX,CAAjC;AACA,QAAI,CAACJ,QAAD,EAAWO,gBAAX,IAA+B,CAACL,OAAD,EAAUC,eAAV,CAAnC;AACA,QAAIK,OAAO,GAAG,CAAd;;AACA,QAAI,KAAK5C,eAAL,EAAJ,EAA4B;AACxB;AACA;AACA2C,MAAAA,gBAAgB,GAAGL,OAAO,GAAG,KAAKpC,IAAL,CAAU7G,SAAV,KAAwB,QAAxB,GAAmC,OAAnC,GAA6C,KAA1E;AACAkJ,MAAAA,eAAe,GAAGH,QAAQ,GAAGE,OAAO,KAAK,KAAZ,GAAoB,OAApB,GAA8B,KAA3D;AACAM,MAAAA,OAAO,GAAGP,QAAQ,KAAK,QAAb,GAAwBzD,sBAAxB,GAAiD,CAACA,sBAA5D;AACH,KAND,MAOK,IAAI,CAAC,KAAKsB,IAAL,CAAU9G,cAAf,EAA+B;AAChCqJ,MAAAA,OAAO,GAAGJ,QAAQ,KAAK,KAAb,GAAqB,QAArB,GAAgC,KAA1C;AACAK,MAAAA,eAAe,GAAGF,gBAAgB,KAAK,KAArB,GAA6B,QAA7B,GAAwC,KAA1D;AACH;;AACDxB,IAAAA,gBAAgB,CAAC6B,aAAjB,CAA+B,CAC3B;AAAEP,MAAAA,OAAF;AAAWG,MAAAA,OAAX;AAAoBL,MAAAA,QAApB;AAA8BC,MAAAA,QAA9B;AAAwCO,MAAAA;AAAxC,KAD2B,EAE3B;AAAEN,MAAAA,OAAO,EAAEC,eAAX;AAA4BE,MAAAA,OAA5B;AAAqCL,MAAAA,QAAQ,EAAEO,gBAA/C;AAAiEN,MAAAA,QAAjE;AAA2EO,MAAAA;AAA3E,KAF2B,EAG3B;AACIN,MAAAA,OADJ;AAEIG,MAAAA,OAAO,EAAEC,eAFb;AAGIN,MAAAA,QAHJ;AAIIC,MAAAA,QAAQ,EAAEG,gBAJd;AAKII,MAAAA,OAAO,EAAE,CAACA;AALd,KAH2B,EAU3B;AACIN,MAAAA,OAAO,EAAEC,eADb;AAEIE,MAAAA,OAAO,EAAEC,eAFb;AAGIN,MAAAA,QAAQ,EAAEO,gBAHd;AAIIN,MAAAA,QAAQ,EAAEG,gBAJd;AAKII,MAAAA,OAAO,EAAE,CAACA;AALd,KAV2B,CAA/B;AAkBH;AACD;;;AACAxB,EAAAA,mBAAmB,GAAG;AAClB,UAAM0B,QAAQ,GAAG,KAAK5D,WAAL,CAAiB6D,aAAjB,EAAjB;;AACA,UAAMC,WAAW,GAAG,KAAK9D,WAAL,CAAiB8D,WAAjB,EAApB;;AACA,UAAMC,WAAW,GAAG,KAAKlD,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBzF,MAApD,GAA6Dr5C,yCAAE,EAAnF;AACA,UAAMiiD,KAAK,GAAG,KAAKnD,mBAAL,GACR,KAAKA,mBAAL,CAAyBjI,QAAzB,GAAoCtjD,IAApC,CAAyCkiB,uDAAM,CAACysC,MAAM,IAAIA,MAAM,KAAK,KAAKlE,iBAA3B,CAA/C,EAA8FvoC,uDAAM,CAAC,MAAM,KAAKyoC,SAAZ,CAApG,CADQ,GAERl+C,yCAAE,EAFR;AAGA,WAAO0/B,4CAAK,CAACmiB,QAAD,EAAWG,WAAX,EAAwBC,KAAxB,EAA+BF,WAA/B,CAAZ;AACH;AACD;;;AACAI,EAAAA,gBAAgB,CAAC1nD,KAAD,EAAQ;AACpB,QAAI,CAAC+4C,kFAA+B,CAAC/4C,KAAD,CAApC,EAA6C;AACzC;AACA;AACA,WAAK8jD,SAAL,GAAiB9jD,KAAK,CAAC2nD,MAAN,KAAiB,CAAjB,GAAqB,OAArB,GAA+B/uD,SAAhD,CAHyC,CAIzC;AACA;AACA;;AACA,UAAI,KAAK0rD,eAAL,EAAJ,EAA4B;AACxBtkD,QAAAA,KAAK,CAACG,cAAN;AACH;AACJ;AACJ;AACD;;;AACAmgD,EAAAA,cAAc,CAACtgD,KAAD,EAAQ;AAClB,UAAMugD,OAAO,GAAGvgD,KAAK,CAACugD,OAAtB,CADkB,CAElB;;AACA,QAAIA,OAAO,KAAKjH,yDAAZ,IAAqBiH,OAAO,KAAKhH,yDAArC,EAA4C;AACxC,WAAKuK,SAAL,GAAiB,UAAjB;AACH;;AACD,QAAI,KAAKQ,eAAL,OACE/D,OAAO,KAAKrH,+DAAZ,IAA2B,KAAKppC,GAAL,KAAa,KAAzC,IACIywC,OAAO,KAAKpH,8DAAZ,IAA0B,KAAKrpC,GAAL,KAAa,KAF5C,CAAJ,EAEyD;AACrD,WAAKg0C,SAAL,GAAiB,UAAjB;AACA,WAAKmB,QAAL;AACH;AACJ;AACD;;;AACA2C,EAAAA,YAAY,CAAC5nD,KAAD,EAAQ;AAChB,QAAI,KAAKskD,eAAL,EAAJ,EAA4B;AACxB;AACAtkD,MAAAA,KAAK,CAACI,eAAN;AACA,WAAK6kD,QAAL;AACH,KAJD,MAKK;AACD,WAAKF,UAAL;AACH;AACJ;AACD;;;AACAF,EAAAA,YAAY,GAAG;AACX;AACA,QAAI,CAAC,KAAKP,eAAL,EAAD,IAA2B,CAAC,KAAKD,mBAArC,EAA0D;AACtD;AACH;;AACD,SAAKV,kBAAL,GAA0B,KAAKU,mBAAL,CACrBjI,QADqB,GAEtB;AACA;AACA;AAJsB,KAKrBtjD,IALqB,CAKhBkiB,uDAAM,CAACysC,MAAM,IAAIA,MAAM,KAAK,KAAKlE,iBAAhB,IAAqC,CAACkE,MAAM,CAAC9pD,QAAxD,CALU,EAKyDzE,sDAAK,CAAC,CAAD,EAAIugD,gDAAJ,CAL9D,EAMrB/gD,SANqB,CAMX,MAAM;AACjB,WAAKorD,SAAL,GAAiB,OAAjB,CADiB,CAEjB;AACA;AACA;;AACA,UAAI,KAAKU,IAAL,YAAqBzG,YAArB,IAAqC,KAAKyG,IAAL,CAAUzC,YAAnD,EAAiE;AAC7D;AACA;AACA,aAAKyC,IAAL,CAAUjG,cAAV,CACKzlD,IADL,CACUS,qDAAI,CAAC,CAAD,CADd,EACmBL,sDAAK,CAAC,CAAD,EAAIugD,gDAAJ,CADxB,EAC4Cj0C,0DAAS,CAAC,KAAK6+C,mBAAL,CAAyBjI,QAAzB,EAAD,CADrD,EAEK1jD,SAFL,CAEe,MAAM,KAAKusD,QAAL,EAFrB;AAGH,OAND,MAOK;AACD,aAAKA,QAAL;AACH;AACJ,KArByB,CAA1B;AAsBH;AACD;;;AACAO,EAAAA,UAAU,GAAG;AACT;AACA;AACA;AACA,QAAI,CAAC,KAAKvK,OAAN,IAAiB,KAAKA,OAAL,CAAa5vC,WAAb,KAA6B,KAAKm5C,IAAL,CAAUn5C,WAA5D,EAAyE;AACrE,WAAK4vC,OAAL,GAAe,IAAItB,+DAAJ,CAAmB,KAAK6K,IAAL,CAAUn5C,WAA7B,EAA0C,KAAKyvC,iBAA/C,CAAf;AACH;;AACD,WAAO,KAAKG,OAAZ;AACH;;AAtbqB;;AAwb1BmI,mBAAmB,CAAClnD,IAApB;AAAA,mBAAgHknD,mBAAhH,EArkCsGppD,+DAqkCtG,CAAqJigD,0DAArJ,GArkCsGjgD,+DAqkCtG,CAA8KA,qDAA9K,GArkCsGA,+DAqkCtG,CAAwMA,2DAAxM,GArkCsGA,+DAqkCtG,CAAwO4oD,wBAAxO,GArkCsG5oD,+DAqkCtG,CAA6Q+hD,cAA7Q,MArkCsG/hD,+DAqkCtG,CAAwTiiD,WAAxT,OArkCsGjiD,+DAqkCtG,CAA4WggD,8DAA5W,MArkCsGhgD,+DAqkCtG,CAA4ZiB,2DAA5Z,GArkCsGjB,+DAqkCtG,CAAwbA,iDAAxb;AAAA;;AACAopD,mBAAmB,CAACjnD,IAApB,kBAtkCsGnC,+DAskCtG;AAAA,QAAoGopD,mBAApG;AAAA,+BAA4gB,MAA5gB;AAAA;AAAA;AAAA;AAtkCsGppD,MAAAA,wDAskCtG;AAAA,eAAoG,wBAApG;AAAA;AAAA,eAAoG,4BAApG;AAAA;AAAA,eAAoG,0BAApG;AAAA;AAAA;;AAAA;AAtkCsGA,MAAAA,yDAskCtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA,qDAvkCsGA,+DAukCtG,CAA2FopD,mBAA3F,EAA4H,CAAC;AACjHhnD,IAAAA,IAAI,EAAEnC,oDAD2G;AAEjHrC,IAAAA,IAAI,EAAE,CAAC;AACCsK,MAAAA,IAAI,EAAE;AACF,yBAAiB,MADf;AAEF,gCAAwB,kBAFtB;AAGF,gCAAwB,gCAHtB;AAIF,mBAAW,sBAJT;AAKF,uBAAe,0BALb;AAMF,qBAAa;AANX;AADP,KAAD;AAF2G,GAAD,CAA5H,EAY4B,YAAY;AAAE,WAAO,CAAC;AAAE9F,MAAAA,IAAI,EAAE69C,0DAAYC;AAApB,KAAD,EAAyB;AAAE99C,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAzB,EAAkD;AAAE9E,MAAAA,IAAI,EAAEpC,2DAAmB8Q;AAA3B,KAAlD,EAAiF;AAAE1O,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC9InG,QAAAA,IAAI,EAAEsI,iDADwI;AAE9I9M,QAAAA,IAAI,EAAE,CAACgrD,wBAAD;AAFwI,OAAD;AAA/B,KAAjF,EAG3B;AAAExmD,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAEsI,iDAD4B;AAElC9M,QAAAA,IAAI,EAAE,CAACmkD,cAAD;AAF4B,OAAD,EAGlC;AACC3/C,QAAAA,IAAI,EAAE/B,mDAAQA;AADf,OAHkC;AAA/B,KAH2B,EAQ3B;AAAE+B,MAAAA,IAAI,EAAE6/C,WAAR;AAAqB15C,MAAAA,UAAU,EAAE,CAAC;AACpCnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADsB,OAAD,EAEpC;AACC+B,QAAAA,IAAI,EAAE9B,+CAAIA;AADX,OAFoC;AAAjC,KAR2B,EAY3B;AAAE8B,MAAAA,IAAI,EAAE49C,8DAAR;AAA6Bz3C,MAAAA,UAAU,EAAE,CAAC;AAC5CnG,QAAAA,IAAI,EAAE/B,mDAAQA;AAD8B,OAAD;AAAzC,KAZ2B,EAc3B;AAAE+B,MAAAA,IAAI,EAAEnB,2DAAeqiD;AAAvB,KAd2B,EAcA;AAAElhD,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAdA,CAAP;AAc8B,GA1BxE,EA0B0F;AAAEw/C,IAAAA,4BAA4B,EAAE,CAAC;AAC3GnoD,MAAAA,IAAI,EAAE3B,gDADqG;AAE3G7C,MAAAA,IAAI,EAAE,CAAC,sBAAD;AAFqG,KAAD,CAAhC;AAG1E4sD,IAAAA,IAAI,EAAE,CAAC;AACPpoD,MAAAA,IAAI,EAAE3B,gDADC;AAEP7C,MAAAA,IAAI,EAAE,CAAC,mBAAD;AAFC,KAAD,CAHoE;AAM1E6tD,IAAAA,QAAQ,EAAE,CAAC;AACXrpD,MAAAA,IAAI,EAAE3B,gDADK;AAEX7C,MAAAA,IAAI,EAAE,CAAC,oBAAD;AAFK,KAAD,CANgE;AAS1EmsD,IAAAA,YAAY,EAAE,CAAC;AACf3nD,MAAAA,IAAI,EAAE3B,gDADS;AAEf7C,MAAAA,IAAI,EAAE,CAAC,4BAAD;AAFS,KAAD,CAT4D;AAY1EosD,IAAAA,UAAU,EAAE,CAAC;AACb5nD,MAAAA,IAAI,EAAE8I,iDAAMA;AADC,KAAD,CAZ8D;AAc1E++C,IAAAA,UAAU,EAAE,CAAC;AACb7nD,MAAAA,IAAI,EAAE8I,iDAAMA;AADC,KAAD,CAd8D;AAgB1Eg/C,IAAAA,UAAU,EAAE,CAAC;AACb9nD,MAAAA,IAAI,EAAE8I,iDAAMA;AADC,KAAD,CAhB8D;AAkB1Ei/C,IAAAA,WAAW,EAAE,CAAC;AACd/nD,MAAAA,IAAI,EAAE8I,iDAAMA;AADE,KAAD;AAlB6D,GA1B1F;AAAA;AA+CA;;;AACA,MAAM2iD,cAAN,SAA6BzE,mBAA7B,CAAiD;;AAEjDyE,cAAc,CAAC3rD,IAAf;AAAA;AAAA;AAAA,0EAznCsGlC,mEAynCtG,CAA2G6tD,cAA3G,SAA2GA,cAA3G;AAAA;AAAA;;AACAA,cAAc,CAAC1rD,IAAf,kBA1nCsGnC,+DA0nCtG;AAAA,QAA+F6tD,cAA/F;AAAA;AAAA;AAAA;AAAA,aA1nCsG7tD,wEA0nCtG;AAAA;;AACA;AAAA,qDA3nCsGA,+DA2nCtG,CAA2F6tD,cAA3F,EAAuH,CAAC;AAC5GzrD,IAAAA,IAAI,EAAEnC,oDADsG;AAE5GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAG,6CADZ;AAEC6F,MAAAA,IAAI,EAAE;AACF,iBAAS;AADP,OAFP;AAKCE,MAAAA,QAAQ,EAAE;AALX,KAAD;AAFsG,GAAD,CAAvH;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM0lD,aAAN,CAAoB;;AAEpBA,aAAa,CAAC5rD,IAAd;AAAA,mBAA0G4rD,aAA1G;AAAA;;AACAA,aAAa,CAACllD,IAAd,kBAhpCsG5I,8DAgpCtG;AAAA,QAA2G8tD;AAA3G;AAMAA,aAAa,CAACjlD,IAAd,kBAtpCsG7I,8DAspCtG;AAAA,aAAqI,CAACipD,yCAAD,CAArI;AAAA,YAA4L,CAACznD,yDAAD,EAAewpC,mEAAf,EAAgC+U,mEAAhC,EAAiDK,gEAAjD,CAA5L,EAA6PC,wEAA7P,EACQrV,mEADR;AAAA;;AAEA;AAAA,qDAxpCsGhrC,+DAwpCtG,CAA2F8tD,aAA3F,EAAsH,CAAC;AAC3G1rD,IAAAA,IAAI,EAAE1B,mDADqG;AAE3G9C,IAAAA,IAAI,EAAE,CAAC;AACCmL,MAAAA,OAAO,EAAE,CAACvH,yDAAD,EAAewpC,mEAAf,EAAgC+U,mEAAhC,EAAiDK,gEAAjD,CADV;AAECp3C,MAAAA,OAAO,EAAE,CACLq3C,wEADK,EAELrV,mEAFK,EAGLwd,OAHK,EAILvG,WAJK,EAKL4L,cALK,EAMLnM,cANK,CAFV;AAUC54C,MAAAA,YAAY,EAAE,CAAC0/C,OAAD,EAAUvG,WAAV,EAAuB4L,cAAvB,EAAuCnM,cAAvC,CAVf;AAWCv5C,MAAAA,SAAS,EAAE,CAAC8gD,yCAAD;AAXZ,KAAD;AAFqG,GAAD,CAAtH;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACt1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;;AAwNqGjpD,IAAAA;AAAAA,IAAAA,uDAC+yD;;;;mBAD/yDA;;gBAAAA;;AAAAA,IAAAA,yDAC65D;AAD75DA,IAAAA,yDACw3D;;;;;;AADx3DA,IAAAA;AAAAA,IAAAA,uDAC2vE;;;;mBAD3vEA;;gBAAAA;;AAAAA,IAAAA,yDAC02E;AAD12EA,IAAAA,yDACq0E;;;;AAxN16E,MAAMguD,SAAS,GAAG,GAAlB;AACA;AACA;AACA;AACA;;AACA,MAAMC,iBAAiB,GAAG,EAA1B,EACA;;AACA;;AACA,MAAMC,uBAAuB,GAAGnjB,kEAAU,CAAC,MAAM;AAC7CnpC,EAAAA,WAAW,CAACW,WAAD,EAAc;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AAH4C,CAAP,EAIvC,SAJuC,CAA1C;AAKA;;;AACA,MAAM4rD,oCAAoC,GAAG,IAAI1jD,yDAAJ,CAAmB,sCAAnB,EAA2D;AACpGgc,EAAAA,UAAU,EAAE,MADwF;AAEpGmzB,EAAAA,OAAO,EAAEwU;AAF2F,CAA3D,CAA7C;AAIA;;AACA,SAASA,4CAAT,GAAwD;AACpD,SAAO;AAAEC,IAAAA,QAAQ,EAAEL;AAAZ,GAAP;AACH,EACD;AACA;AACA;AACA;;;AACA,MAAMM,gCAAgC,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;AAuBA;AACA;AACA;;AACA,MAAMC,kBAAN,SAAiCL,uBAAjC,CAAyD;AACrDtsD,EAAAA,WAAW,CAAC8L,UAAD,EAAalL,SAAb,EAAwBiW,SAAxB,EAAmC+1C,aAAnC,EAAkDC,QAAlD;AACX;AACJ;AACA;AACA;AACA;AACI/F,EAAAA,iBANW,EAMQgG,aANR,EAMuBrR,MANvB,EAM+B;AACtC,UAAM3vC,UAAN;AACA,SAAK+K,SAAL,GAAiBA,SAAjB;AACA,SAAKk2C,SAAL,GAAiBX,SAAjB;AACA,SAAKjqD,MAAL,GAAc,CAAd;AACA,SAAK6qD,mBAAL,GAA2Bjc,oDAA3B;AACA;;AACA,SAAKkc,IAAL,GAAY,aAAZ;AACA,UAAMC,gBAAgB,GAAGP,kBAAkB,CAACQ,UAA5C;AACA,SAAKC,sBAAL,GAA8B,KAAKC,yBAAL,EAA9B,CATsC,CAUtC;AACA;;AACA,QAAI,CAACH,gBAAgB,CAAChvC,GAAjB,CAAqBrH,SAAS,CAACy2C,IAA/B,CAAL,EAA2C;AACvCJ,MAAAA,gBAAgB,CAAC/uC,GAAjB,CAAqBtH,SAAS,CAACy2C,IAA/B,EAAqC,IAAIj2C,GAAJ,CAAQ,CAAC+0C,SAAD,CAAR,CAArC;AACH;;AACD,SAAKmB,eAAL,GACIX,aAAa,KAAK,gBAAlB,IAAsC,CAAC,CAACC,QAAxC,IAAoD,CAACA,QAAQ,CAACW,gBADlE;;AAEA,QAAI1hD,UAAU,CAACzI,aAAX,CAAyBiV,QAAzB,CAAkCmS,WAAlC,OAAoD,aAAxD,EAAuE;AACnE,WAAKwiC,IAAL,GAAY,eAAZ;AACH;;AACD,QAAIJ,QAAJ,EAAc;AACV,UAAIA,QAAQ,CAACJ,QAAb,EAAuB;AACnB,aAAKA,QAAL,GAAgBI,QAAQ,CAACJ,QAAzB;AACH;;AACD,UAAII,QAAQ,CAACY,WAAb,EAA0B;AACtB,aAAKA,WAAL,GAAmBZ,QAAQ,CAACY,WAA5B;AACH;AACJ,KA3BqC,CA4BtC;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAI7sD,SAAS,CAAC+gB,SAAV,IAAuB/gB,SAAS,CAAC8sD,MAAjC,IAA2CZ,aAA3C,IAA4DhG,iBAA5D,IAAiFrL,MAArF,EAA6F;AACzF,WAAKuR,mBAAL,GAA2BF,aAAa,CAACnzC,MAAd,CAAqB,GAArB,EAA0B7c,SAA1B,CAAoC,MAAM;AACjE;AACA;AACA,YAAI,KAAKmwD,IAAL,KAAc,eAAlB,EAAmC;AAC/BxR,UAAAA,MAAM,CAACr3B,GAAP,CAAW,MAAM0iC,iBAAiB,CAACrjD,YAAlB,EAAjB;AACH;AACJ,OAN0B,CAA3B;AAOH;AACJ;AACD;;;AACY,MAARgpD,QAAQ,GAAG;AACX,WAAO,KAAKM,SAAZ;AACH;;AACW,MAARN,QAAQ,CAACxkD,IAAD,EAAO;AACf,SAAK8kD,SAAL,GAAiB3pC,2EAAoB,CAACnb,IAAD,CAArC;AACA,SAAKmlD,sBAAL,GAA8B,KAAKC,yBAAL,EAA9B,CAFe,CAGf;;AACA,QAAI,KAAKM,UAAT,EAAqB;AACjB,WAAKC,gBAAL;AACH;AACJ;AACD;;;AACe,MAAXH,WAAW,GAAG;AACd,WAAO,KAAKI,YAAL,IAAqB,KAAKpB,QAAL,GAAgB,EAA5C;AACH;;AACc,MAAXgB,WAAW,CAAC1wD,KAAD,EAAQ;AACnB,SAAK8wD,YAAL,GAAoBzqC,2EAAoB,CAACrmB,KAAD,CAAxC;AACH;AACD;;;AACS,MAALA,KAAK,GAAG;AACR,WAAO,KAAKkwD,IAAL,KAAc,aAAd,GAA8B,KAAK9qD,MAAnC,GAA4C,CAAnD;AACH;;AACQ,MAALpF,KAAK,CAAC69B,QAAD,EAAW;AAChB,SAAKz4B,MAAL,GAAc8lB,IAAI,CAACxgB,GAAL,CAAS,CAAT,EAAYwgB,IAAI,CAACwD,GAAL,CAAS,GAAT,EAAcrI,2EAAoB,CAACwX,QAAD,CAAlC,CAAZ,CAAd;AACH;;AACDxhB,EAAAA,QAAQ,GAAG;AACP,UAAMvI,OAAO,GAAG,KAAKlQ,WAAL,CAAiB0C,aAAjC,CADO,CAEP;AACA;AACA;;AACA,SAAKsqD,UAAL,GAAkBxB,qEAAc,CAACt7C,OAAD,CAAd,IAA2B,KAAKgG,SAAL,CAAey2C,IAA5D;;AACA,SAAKM,gBAAL;;AACA/8C,IAAAA,OAAO,CAAC9E,SAAR,CAAkBlE,GAAlB,CAAsB,8CAAtB;AACH;;AACDrF,EAAAA,WAAW,GAAG;AACV,SAAKwqD,mBAAL,CAAyBrtC,WAAzB;AACH;AACD;;;AACAmuC,EAAAA,gBAAgB,GAAG;AACf,WAAO,CAAC,KAAKrB,QAAL,GAAgBJ,iBAAjB,IAAsC,CAA7C;AACH;AACD;;;AACA0B,EAAAA,WAAW,GAAG;AACV,UAAMjX,OAAO,GAAG,KAAKgX,gBAAL,KAA0B,CAA1B,GAA8B,KAAKL,WAAnD;AACA,WAAQ,OAAM3W,OAAQ,IAAGA,OAAQ,EAAjC;AACH;AACD;;;AACAkX,EAAAA,uBAAuB,GAAG;AACtB,WAAO,IAAI/lC,IAAI,CAACgmC,EAAT,GAAc,KAAKH,gBAAL,EAArB;AACH;AACD;;;AACAI,EAAAA,oBAAoB,GAAG;AACnB,QAAI,KAAKjB,IAAL,KAAc,aAAlB,EAAiC;AAC7B,aAAQ,KAAKe,uBAAL,MAAkC,MAAM,KAAK7rD,MAA7C,CAAD,GAAyD,GAAhE;AACH;;AACD,WAAO,IAAP;AACH;AACD;;;AACAgsD,EAAAA,qBAAqB,GAAG;AACpB,WAAQ,KAAKV,WAAL,GAAmB,KAAKhB,QAAzB,GAAqC,GAA5C;AACH;AACD;;;AACA2B,EAAAA,yBAAyB,CAACpZ,GAAD,EAAM;AAC3B;AACA;AACA;AACA;AACA,UAAMqZ,KAAK,GAAG,CAACrZ,GAAG,CAACsZ,YAAJ,IAAoB,CAArB,IAA0B,EAAxC;AACA,WAAQ,GAAED,KAAM,KAAIA,KAAM,GAA1B;AACH;AACD;;;AACAT,EAAAA,gBAAgB,GAAG;AACf,UAAMW,SAAS,GAAG,KAAKZ,UAAvB;AACA,UAAMa,eAAe,GAAG,KAAKzB,SAA7B;AACA,UAAM0B,SAAS,GAAG9B,kBAAkB,CAACQ,UAArC;AACA,QAAIuB,mBAAmB,GAAGD,SAAS,CAACxyC,GAAV,CAAcsyC,SAAd,CAA1B;;AACA,QAAI,CAACG,mBAAD,IAAwB,CAACA,mBAAmB,CAACxwC,GAApB,CAAwBswC,eAAxB,CAA7B,EAAuE;AACnE,YAAMG,QAAQ,GAAG,KAAK93C,SAAL,CAAe0K,aAAf,CAA6B,OAA7B,CAAjB;;AACAotC,MAAAA,QAAQ,CAACriD,YAAT,CAAsB,uBAAtB,EAA+C,KAAK8gD,sBAApD;AACAuB,MAAAA,QAAQ,CAACzf,WAAT,GAAuB,KAAK0f,iBAAL,EAAvB;AACAL,MAAAA,SAAS,CAAC/sC,WAAV,CAAsBmtC,QAAtB;;AACA,UAAI,CAACD,mBAAL,EAA0B;AACtBA,QAAAA,mBAAmB,GAAG,IAAIr3C,GAAJ,EAAtB;AACAo3C,QAAAA,SAAS,CAACtwC,GAAV,CAAcowC,SAAd,EAAyBG,mBAAzB;AACH;;AACDA,MAAAA,mBAAmB,CAAC7mD,GAApB,CAAwB2mD,eAAxB;AACH;AACJ;AACD;;;AACAI,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,mBAAmB,GAAG,KAAKb,uBAAL,EAA5B;;AACA,WAAQtB,gCAAgC,CACpC;AADoC,KAEnCnhD,OAFG,CAEK,cAFL,EAEsB,GAAE,OAAOsjD,mBAAoB,EAFnD,EAGHtjD,OAHG,CAGK,YAHL,EAGoB,GAAE,MAAMsjD,mBAAoB,EAHhD,EAIHtjD,OAJG,CAIK,WAJL,EAImB,GAAE,KAAK6hD,sBAAuB,EAJjD,CAAR;AAKH;AACD;;;AACAC,EAAAA,yBAAyB,GAAG;AACxB;AACA;AACA,WAAO,KAAKZ,QAAL,CAAcx/B,QAAd,GAAyB1hB,OAAzB,CAAiC,GAAjC,EAAsC,GAAtC,CAAP;AACH;;AA1JoD;AA4JzD;AACA;AACA;AACA;AACA;AACA;;;AACAohD,kBAAkB,CAACQ,UAAnB,GAAgC,IAAI/uC,OAAJ,EAAhC;;AACAuuC,kBAAkB,CAACrsD,IAAnB;AAAA,mBAA+GqsD,kBAA/G,EAAqGvuD,+DAArG,CAAmJA,qDAAnJ,GAAqGA,+DAArG,CAA6KiB,2DAA7K,GAAqGjB,+DAArG,CAAqMwK,qDAArM,MAAqGxK,+DAArG,CAA0OsrC,gEAA1O,MAAqGtrC,+DAArG,CAA4RmuD,oCAA5R,GAAqGnuD,+DAArG,CAA6UA,4DAA7U,GAAqGA,+DAArG,CAA8WkB,iEAA9W,GAAqGlB,+DAArG,CAA2YA,iDAA3Y;AAAA;;AACAuuD,kBAAkB,CAAC9mD,IAAnB,kBADqGzH,+DACrG;AAAA,QAAmGuuD,kBAAnG;AAAA;AAAA,sBAAgT,aAAhT,cAA2U,IAA3U;AAAA;AAAA;AAAA;AADqGvuD,MAAAA,yDACrG;AADqGA,MAAAA,yDACrG;AADqGA,MAAAA,yDACrG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADqGA,wEACrG;AAAA;AAAA;AAAA;AAAA;AAAA;AADqGA,MAAAA,4DAColC,EAAzrC;AADqGA,MAAAA,4DAColC,gBAAzrC;AADqGA,MAAAA,wDAC+yD,kEAAp5D;AADqGA,MAAAA,wDAC2vE,iEAAh2E;AADqGA,MAAAA,0DACqmF,EAA1sF;AAAA;;AAAA;AADqGA,MAAAA,yDAC4lC,2DAAjsC;AADqGA,MAAAA,wDACmwC,0CAAx2C;AADqGA,MAAAA,yDAC+pC,8BAApwC;AADqGA,MAAAA,uDAC6zD,GAAl6D;AADqGA,MAAAA,wDAC6zD,sBAAl6D;AADqGA,MAAAA,uDACywE,GAA92E;AADqGA,MAAAA,wDACywE,uBAA92E;AAAA;AAAA;AAAA,iBAAooKW,qDAApoK,EAAysKA,yDAAzsK;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA,qDAFqGX,+DAErG,CAA2FuuD,kBAA3F,EAA2H,CAAC;AAChHnsD,IAAAA,IAAI,EAAEjC,oDAD0G;AAEhHvC,IAAAA,IAAI,EAAE,CAAC;AAAEyE,MAAAA,QAAQ,EAAE,mCAAZ;AAAiD+F,MAAAA,QAAQ,EAAE,oBAA3D;AAAiFF,MAAAA,IAAI,EAAE;AAClF,gBAAQ,aAD0E;AAElF;AACA,iBAAS,kCAHyE;AAIlF;AACA;AACA,oBAAY,IANsE;AAOlF,2CAAoC,iBAP8C;AAQlF,4BAAoB,UAR8D;AASlF,6BAAqB,UAT6D;AAUlF,gCAAwB,mCAV0D;AAWlF,gCAAwB,qCAX0D;AAYlF,gCAAwB,uCAZ0D;AAalF,uBAAe;AAbmE,OAAvF;AAcIkF,MAAAA,MAAM,EAAE,CAAC,OAAD,CAdZ;AAcuB4D,MAAAA,eAAe,EAAEpG,yEAdxC;AAcwE5C,MAAAA,aAAa,EAAE5H,iEAdvF;AAc+GiI,MAAAA,QAAQ,EAAE,s6DAdzH;AAciiEC,MAAAA,MAAM,EAAE,CAAC,84EAAD;AAdziE,KAAD;AAF0G,GAAD,CAA3H,EAiB4B,YAAY;AAAE,WAAO,CAAC;AAAElG,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEnB,2DAAWkG;AAAnB,KAA1B,EAAiD;AAAE/E,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC9GnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADgG,OAAD,EAE9G;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC4M,qDAAD;AAFP,OAF8G;AAA/B,KAAjD,EAK3B;AAAEpI,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADoB,OAAD,EAElC;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC0tC,gEAAD;AAFP,OAFkC;AAA/B,KAL2B,EAU3B;AAAElpC,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAEsI,iDAD4B;AAElC9M,QAAAA,IAAI,EAAE,CAACuwD,oCAAD;AAF4B,OAAD;AAA/B,KAV2B,EAa3B;AAAE/rD,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAb2B,EAaK;AAAEhF,MAAAA,IAAI,EAAElB,iEAAgB4iB;AAAxB,KAbL,EAaiC;AAAE1hB,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAbjC,CAAP;AAa+D,GA9BzG,EA8B2H;AAAEsjD,IAAAA,QAAQ,EAAE,CAAC;AACxHjsD,MAAAA,IAAI,EAAE3B,gDAAKA;AAD6G,KAAD,CAAZ;AAE3G4uD,IAAAA,WAAW,EAAE,CAAC;AACdjtD,MAAAA,IAAI,EAAE3B,gDAAKA;AADG,KAAD,CAF8F;AAI3GouD,IAAAA,IAAI,EAAE,CAAC;AACPzsD,MAAAA,IAAI,EAAE3B,gDAAKA;AADJ,KAAD,CAJqG;AAM3G9B,IAAAA,KAAK,EAAE,CAAC;AACRyD,MAAAA,IAAI,EAAE3B,gDAAKA;AADH,KAAD;AANoG,GA9B3H;AAAA;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMiwD,wBAAN,CAA+B;;AAE/BA,wBAAwB,CAACxuD,IAAzB;AAAA,mBAAqHwuD,wBAArH;AAAA;;AACAA,wBAAwB,CAAC9nD,IAAzB,kBApDqG5I,8DAoDrG;AAAA,QAAsH0wD;AAAtH;AACAA,wBAAwB,CAAC7nD,IAAzB,kBArDqG7I,8DAqDrG;AAAA,YAA0J,CAACgrC,mEAAD,EAAkBxpC,yDAAlB,CAA1J,EAA2LwpC,mEAA3L;AAAA;;AACA;AAAA,qDAtDqGhrC,+DAsDrG,CAA2F0wD,wBAA3F,EAAiI,CAAC;AACtHtuD,IAAAA,IAAI,EAAE1B,mDADgH;AAEtH9C,IAAAA,IAAI,EAAE,CAAC;AACCmL,MAAAA,OAAO,EAAE,CAACiiC,mEAAD,EAAkBxpC,yDAAlB,CADV;AAECwH,MAAAA,OAAO,EAAE,CAACulD,kBAAD,EAAqBvjB,mEAArB,CAFV;AAGCliC,MAAAA,YAAY,EAAE,CAACylD,kBAAD;AAHf,KAAD;AAFgH,GAAD,CAAjI;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMoC,UAAU,GAAGpC,kBAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AA6JmGvuD,IAAAA,4DAmjC6lC;AAnjC7lCA,IAAAA,oDAmjC+qC;AAnjC/qCA,IAAAA,0DAmjC8rC;;;;mBAnjC9rCA;AAAAA,IAAAA,uDAmjC+qC;AAnjC/qCA,IAAAA,+DAmjC+qC;;;;;;AAnjC/qCA,IAAAA,4DAmjCgzC;AAnjChzCA,IAAAA,oDAmjCq2C;AAnjCr2CA,IAAAA,0DAmjCq3C;;;;mBAnjCr3CA;AAAAA,IAAAA,uDAmjCq2C;AAnjCr2CA,IAAAA,+DAmjCq2C;;;;;;AAnjCr2CA,IAAAA,0DAmjCo4C;;;;;;AAnjCp4CA,IAAAA,4DAmjC2sC;AAnjC3sCA,IAAAA,wDAmjCgzC;AAnjChzCA,IAAAA,wDAmjCo4C;AAnjCp4CA,IAAAA,0DAmjCw9C;;;;mBAnjCx9CA;AAAAA,IAAAA,wDAmjCywC;AAnjCzwCA,IAAAA,uDAmjC+6C;AAnjC/6CA,IAAAA,wDAmjC+6C;;;;;;gBAnjC/6CA;;AAAAA,IAAAA,4DAmjC8rE;AAnjC9rEA,IAAAA,wDAmjCsqF;AAnjCtqFA,MAAAA,2DAmjCsqF;AAAA,qBAnjCtqFA,2DAmjCsqF;AAAA,aAnjCtqFA,yDAmjC+rF,uDAAzB;AAAA;AAnjCtqFA,MAAAA,2DAmjCsqF;AAAA,sBAnjCtqFA,2DAmjCsqF;AAAA,aAnjCtqFA,yDAmjCw2F,gCAAlM;AAAA;AAnjCtqFA,IAAAA,0DAmjCy4F;AAnjCz4FA,IAAAA,0DAmjCw6F;;;;mBAnjCx6FA;AAAAA,IAAAA,wDAmjCmuE;AAnjCnuEA,IAAAA,uDAmjCw0E;AAnjCx0EA,IAAAA,oEAmjCw0E;AAnjCx0EA,IAAAA,yDAmjCuvF;AAnjCvvFA,IAAAA,wDAmjC+jF;AAnjC/jFA,IAAAA,yDAmjCi4E;;;;;;AA/sCp+E,MAAM4xD,mBAAmB,GAAG;AACxB;AACJ;AACA;AACA;AACA;AACIC,EAAAA,kBAAkB,EAAE1mB,4DAAO,CAAC,oBAAD,EAAuB,CAC9CC,+DAAU,CAAC,WAAD,EAAcsmB,0DAAK,CAAC,iBAAD,EAAoB,CAACC,iEAAY,EAAb,CAApB,EAAsC;AAAEG,IAAAA,QAAQ,EAAE;AAAZ,GAAtC,CAAnB,CADoC,CAAvB,CANH;;AASxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,cAAc,EAAE5mB,4DAAO,CAAC,gBAAD,EAAmB,CACtCn4B,0DAAK,CAAC,MAAD,EAAS+C,0DAAK,CAAC;AAChB+1B,IAAAA,SAAS,EAAE,aADK;AAEhBkmB,IAAAA,QAAQ,EAAE,MAFM;AAGhBnmB,IAAAA,OAAO,EAAE;AAHO,GAAD,CAAd,CADiC,EAMtC74B,0DAAK,CAAC,SAAD,EAAY+C,0DAAK,CAAC;AACnB81B,IAAAA,OAAO,EAAE,CADU;AAEnBmmB,IAAAA,QAAQ,EAAE,mBAFS;AAGnBlmB,IAAAA,SAAS,EAAE;AAHQ,GAAD,CAAjB,CANiC,EAWtC94B,0DAAK,CAAC,kBAAD,EAAqB+C,0DAAK,CAAC;AAC5B81B,IAAAA,OAAO,EAAE,CADmB;AAE5BmmB,IAAAA,QAAQ,EAAE,mBAFkB;AAG5BlmB,IAAAA,SAAS,EAAE;AAHiB,GAAD,CAA1B,CAXiC,EAgBtCV,+DAAU,CAAC,WAAD,EAAcC,4DAAO,CAAC,kCAAD,CAArB,CAhB4B,EAiBtCD,+DAAU,CAAC,WAAD,EAAcC,4DAAO,CAAC,mBAAD,EAAsBt1B,0DAAK,CAAC;AAAE81B,IAAAA,OAAO,EAAE;AAAX,GAAD,CAA3B,CAArB,CAjB4B,CAAnB;AAlBC,CAA5B;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,SAASomB,gCAAT,GAA4C;AACxC,SAAOh7C,KAAK,CAAC,+DAAD,CAAZ;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASi7C,8BAAT,GAA0C;AACtC,SAAOj7C,KAAK,CAAC,oDAAD,CAAZ;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASk7C,iCAAT,GAA6C;AACzC,SAAOl7C,KAAK,CAAC,mCAAD,CAAZ;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIvV,YAAY,GAAG,CAAnB;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA,MAAM0wD,uBAAuB,GAAG,GAAhC;AACA;;AACA,MAAMC,sBAAsB,GAAG,EAA/B;AACA;;AACA,MAAMC,6BAA6B,GAAGD,sBAAsB,GAAG,CAA/D;AACA;;AACA,MAAME,qBAAqB,GAAG,CAA9B,EACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,+BAA+B,GAAGH,sBAAsB,GAAG,GAAzB,GAA+B,EAAvE;AACA;AACA;AACA;AACA;;AACA,MAAMI,6BAA6B,GAAG,CAAtC;AACA;;AACA,MAAMC,0BAA0B,GAAG,IAAIjoD,yDAAJ,CAAmB,4BAAnB,CAAnC;AACA;;AACA,SAASkoD,2CAAT,CAAqD7J,OAArD,EAA8D;AAC1D,SAAO,MAAMA,OAAO,CAACC,gBAAR,CAAyBC,UAAzB,EAAb;AACH;AACD;;;AACA,MAAM4J,iBAAiB,GAAG,IAAInoD,yDAAJ,CAAmB,mBAAnB,CAA1B;AACA;;AACA,MAAMooD,mCAAmC,GAAG;AACxCnrD,EAAAA,OAAO,EAAEgrD,0BAD+B;AAExCjZ,EAAAA,IAAI,EAAE,CAACyG,yDAAD,CAFkC;AAGxCxV,EAAAA,UAAU,EAAEioB;AAH4B,CAA5C;AAKA;;AACA,MAAMG,eAAN,CAAsB;AAClBlxD,EAAAA,WAAW;AACX;AACA/B,EAAAA,MAFW;AAGX;AACAlB,EAAAA,KAJW,EAIJ;AACH,SAAKkB,MAAL,GAAcA,MAAd;AACA,SAAKlB,KAAL,GAAaA,KAAb;AACH;;AARiB,EAUtB;;AACA;;;AACA,MAAMo0D,mBAAmB,GAAGlT,0EAAkB,CAACiR,qEAAa,CAAChR,qEAAa,CAACl/C,uEAAe,CAAC,MAAM;AAC7FgB,EAAAA,WAAW,CAACW,WAAD,EAAcV,yBAAd,EAAyCC,WAAzC,EAAsDC,gBAAtD,EAAwEC,SAAxE,EAAmF;AAC1F,SAAKO,WAAL,GAAmBA,WAAnB;AACA,SAAKV,yBAAL,GAAiCA,yBAAjC;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,gBAAL,GAAwBA,gBAAxB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AAP4F,CAAP,CAAhB,CAAd,CAAd,CAA9C;AASA;AACA;AACA;AACA;AACA;;;AACA,MAAMgxD,kBAAkB,GAAG,IAAIvoD,yDAAJ,CAAmB,kBAAnB,CAA3B;AACA;AACA;AACA;;AACA,MAAMwoD,gBAAN,CAAuB;;AAEvBA,gBAAgB,CAAC/wD,IAAjB;AAAA,mBAA6G+wD,gBAA7G;AAAA;;AACAA,gBAAgB,CAAC9wD,IAAjB,kBADmGnC,+DACnG;AAAA,QAAiGizD,gBAAjG;AAAA;AAAA,aADmGjzD,gEACnG,CAA8J,CAAC;AAAE0H,IAAAA,OAAO,EAAEsrD,kBAAX;AAA+BrrD,IAAAA,WAAW,EAAEsrD;AAA5C,GAAD,CAA9J;AAAA;;AACA;AAAA,qDAFmGjzD,+DAEnG,CAA2FizD,gBAA3F,EAAyH,CAAC;AAC9G7wD,IAAAA,IAAI,EAAEnC,oDADwG;AAE9GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,oBADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAEsrD,kBAAX;AAA+BrrD,QAAAA,WAAW,EAAEsrD;AAA5C,OAAD;AAFZ,KAAD;AAFwG,GAAD,CAAzH;AAAA;AAOA;;;AACA,MAAMC,cAAN,SAA6BH,mBAA7B,CAAiD;AAC7CnxD,EAAAA,WAAW,CAAC+W,cAAD,EAAiBJ,kBAAjB,EAAqC9J,OAArC,EAA8C5M,yBAA9C,EAAyE6L,UAAzE,EAAqF8K,IAArF,EAA2F1W,WAA3F,EAAwGC,gBAAxG,EAA0HoxD,gBAA1H,EAA4InxD,SAA5I,EAAuJoxD,QAAvJ,EAAiKC,qBAAjK,EAAwLC,cAAxL,EAAwMtP,eAAxM,EAAyN;AAChO,UAAMt2C,UAAN,EAAkB7L,yBAAlB,EAA6CC,WAA7C,EAA0DC,gBAA1D,EAA4EC,SAA5E;AACA,SAAK2W,cAAL,GAAsBA,cAAtB;AACA,SAAKJ,kBAAL,GAA0BA,kBAA1B;AACA,SAAK9J,OAAL,GAAeA,OAAf;AACA,SAAK+J,IAAL,GAAYA,IAAZ;AACA,SAAK26C,gBAAL,GAAwBA,gBAAxB;AACA,SAAKG,cAAL,GAAsBA,cAAtB;AACA,SAAKtP,eAAL,GAAuBA,eAAvB;AACA;;AACA,SAAKuP,UAAL,GAAkB,KAAlB;AACA;;AACA,SAAK1tB,YAAL,GAAoB,CAAC2tB,EAAD,EAAKC,EAAL,KAAYD,EAAE,KAAKC,EAAvC;AACA;;;AACA,SAAK7wD,IAAL,GAAa,cAAalB,YAAY,EAAG,EAAzC;AACA;;AACA,SAAKgyD,sBAAL,GAA8B,IAA9B;AACA;;AACA,SAAKC,QAAL,GAAgB,IAAI3yD,yCAAJ,EAAhB;AACA;;AACA,SAAKkC,SAAL,GAAiB,MAAM,CAAG,CAA1B;AACA;;;AACA,SAAKD,UAAL,GAAkB,MAAM,CAAG,CAA3B;AACA;;;AACA,SAAK2wD,QAAL,GAAiB,oBAAmBlyD,YAAY,EAAG,EAAnD;AACA;;AACA,SAAKmyD,yBAAL,GAAiC,IAAI7yD,yCAAJ,EAAjC;AACA,SAAK8yD,kBAAL,GAA0B,KAAK9P,eAAL,EAAsBQ,iBAAtB,IAA2C,EAArE;AACA,SAAKnC,QAAL,GAAgB,KAAhB;AACA;;AACA,SAAKt/C,WAAL,GAAmB,YAAnB;AACA,SAAKK,SAAL,GAAiB,KAAjB;AACA,SAAK2wD,uBAAL,GAA+B,KAAK/P,eAAL,EAAsBgQ,sBAAtB,IAAgD,KAA/E;AACA;;AACA,SAAK3L,SAAL,GAAiB,EAAjB;AACA;;AACA,SAAK4L,sBAAL,GAA8BzC,2CAAK,CAAC,MAAM;AACtC,YAAMzsD,OAAO,GAAG,KAAKA,OAArB;;AACA,UAAIA,OAAJ,EAAa;AACT,eAAOA,OAAO,CAAC0K,OAAR,CAAgB3Q,IAAhB,CAAqBosC,yDAAS,CAACnmC,OAAD,CAA9B,EAAyC26C,yDAAS,CAAC,MAAMzU,2CAAK,CAAC,GAAGlmC,OAAO,CAACgC,GAAR,CAAYmtD,MAAM,IAAIA,MAAM,CAACC,iBAA7B,CAAJ,CAAZ,CAAlD,CAAP;AACH;;AACD,aAAO,KAAK1lD,OAAL,CAAaW,QAAb,CAAsBtQ,IAAtB,CAA2BS,oDAAI,CAAC,CAAD,CAA/B,EAAoCmgD,yDAAS,CAAC,MAAM,KAAKuU,sBAAZ,CAA7C,CAAP;AACH,KANkC,CAAnC;AAOA;;AACA,SAAKG,YAAL,GAAoB,IAAItpD,uDAAJ,EAApB;AACA;;AACA,SAAKupD,aAAL,GAAqB,KAAKD,YAAL,CAAkBt1D,IAAlB,CAAuBkiB,uDAAM,CAAC+N,CAAC,IAAIA,CAAN,CAA7B,EAAuChoB,oDAAG,CAAC,MAAM,CAAG,CAAV,CAA1C,CAArB;AACA;;AACA,SAAKutD,aAAL,GAAqB,KAAKF,YAAL,CAAkBt1D,IAAlB,CAAuBkiB,uDAAM,CAAC+N,CAAC,IAAI,CAACA,CAAP,CAA7B,EAAwChoB,oDAAG,CAAC,MAAM,CAAG,CAAV,CAA3C,CAArB;AACA;;AACA,SAAKwtD,eAAL,GAAuB,IAAIzpD,uDAAJ,EAAvB;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAK0pD,WAAL,GAAmB,IAAI1pD,uDAAJ,EAAnB;;AACA,QAAI,KAAK9I,SAAT,EAAoB;AAChB;AACA;AACA,WAAKA,SAAL,CAAe0B,aAAf,GAA+B,IAA/B;AACH,KA7D+N,CA8DhO;AACA;;;AACA,QAAIsgD,eAAe,EAAEyQ,yBAAjB,IAA8C,IAAlD,EAAwD;AACpD,WAAKC,0BAAL,GAAkC1Q,eAAe,CAACyQ,yBAAlD;AACH;;AACD,SAAKE,sBAAL,GAA8BtB,qBAA9B;AACA,SAAKjJ,eAAL,GAAuB,KAAKuK,sBAAL,EAAvB;AACA,SAAKvB,QAAL,GAAgBhsB,QAAQ,CAACgsB,QAAD,CAAR,IAAsB,CAAtC,CArEgO,CAsEhO;;AACA,SAAK3vD,EAAL,GAAU,KAAKA,EAAf;AACH;AACD;;;AACW,MAAPX,OAAO,GAAG;AACV,WAAO,KAAKu/C,QAAL,IAAiB,KAAKkR,UAA7B;AACH;AACD;;;AACe,MAAXlwD,WAAW,GAAG;AACd,WAAO,KAAKuxD,YAAZ;AACH;;AACc,MAAXvxD,WAAW,CAAC1E,KAAD,EAAQ;AACnB,SAAKi2D,YAAL,GAAoBj2D,KAApB;AACA,SAAKkE,YAAL,CAAkBhE,IAAlB;AACH;AACD;;;AACY,MAARiF,QAAQ,GAAG;AACX,WAAO,KAAKP,SAAL,IAAkB,KAAKvB,SAAL,EAAgBwrB,OAAhB,EAAyBkD,YAAzB,CAAsCtD,gEAAtC,CAAlB,IAAgF,KAAvF;AACH;;AACW,MAARtpB,QAAQ,CAACnF,KAAD,EAAQ;AAChB,SAAK4E,SAAL,GAAiBxD,6EAAqB,CAACpB,KAAD,CAAtC;AACA,SAAKkE,YAAL,CAAkBhE,IAAlB;AACH;AACD;;;AACY,MAARgF,QAAQ,GAAG;AACX,WAAO,KAAKT,SAAZ;AACH;;AACW,MAARS,QAAQ,CAAClF,KAAD,EAAQ;AAChB,QAAI,KAAKk2D,eAAL,KAAyB,OAAOx6C,SAAP,KAAqB,WAArB,IAAoCA,SAA7D,CAAJ,EAA6E;AACzE,YAAM43C,gCAAgC,EAAtC;AACH;;AACD,SAAK7uD,SAAL,GAAiBrD,6EAAqB,CAACpB,KAAD,CAAtC;AACH;AACD;;;AAC0B,MAAtBq1D,sBAAsB,GAAG;AACzB,WAAO,KAAKD,uBAAZ;AACH;;AACyB,MAAtBC,sBAAsB,CAACr1D,KAAD,EAAQ;AAC9B,SAAKo1D,uBAAL,GAA+Bh0D,6EAAqB,CAACpB,KAAD,CAApD;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACmB,MAAXmnC,WAAW,GAAG;AACd,WAAO,KAAKD,YAAZ;AACH;;AACc,MAAXC,WAAW,CAACphC,EAAD,EAAK;AAChB,QAAI,OAAOA,EAAP,KAAc,UAAd,KAA6B,OAAO2V,SAAP,KAAqB,WAArB,IAAoCA,SAAjE,CAAJ,EAAiF;AAC7E,YAAM83C,iCAAiC,EAAvC;AACH;;AACD,SAAKtsB,YAAL,GAAoBnhC,EAApB;;AACA,QAAI,KAAKmwD,eAAT,EAA0B;AACtB;AACA,WAAKC,oBAAL;AACH;AACJ;AACD;;;AACS,MAALn2D,KAAK,GAAG;AACR,WAAO,KAAKoF,MAAZ;AACH;;AACQ,MAALpF,KAAK,CAAC69B,QAAD,EAAW;AAChB,UAAMu4B,WAAW,GAAG,KAAKC,YAAL,CAAkBx4B,QAAlB,CAApB;;AACA,QAAIu4B,WAAJ,EAAiB;AACb,WAAK7xD,SAAL,CAAes5B,QAAf;AACH;AACJ;AACD;;;AAC6B,MAAzBi4B,yBAAyB,GAAG;AAC5B,WAAO,KAAKC,0BAAZ;AACH;;AAC4B,MAAzBD,yBAAyB,CAAC91D,KAAD,EAAQ;AACjC,SAAK+1D,0BAAL,GAAkC1vC,4EAAoB,CAACrmB,KAAD,CAAtD;AACH;AACD;;;AACM,MAAF8E,EAAE,GAAG;AACL,WAAO,KAAKG,GAAZ;AACH;;AACK,MAAFH,EAAE,CAAC9E,KAAD,EAAQ;AACV,SAAKiF,GAAL,GAAWjF,KAAK,IAAI,KAAKiE,IAAzB;AACA,SAAKC,YAAL,CAAkBhE,IAAlB;AACH;;AACDmc,EAAAA,QAAQ,GAAG;AACP,SAAK65C,eAAL,GAAuB,IAAIvD,qEAAJ,CAAmB,KAAKztD,QAAxB,CAAvB;AACA,SAAKhB,YAAL,CAAkBhE,IAAlB,GAFO,CAGP;AACA;AACA;;AACA,SAAKg1D,yBAAL,CACK/0D,IADL,CACU2yD,qEAAoB,EAD9B,EACkCjmD,0DAAS,CAAC,KAAKmoD,QAAN,CAD3C,EAEKj1D,SAFL,CAEe,MAAM,KAAKu2D,mBAAL,CAAyB,KAAKC,SAA9B,CAFrB;AAGH;;AACDpmB,EAAAA,kBAAkB,GAAG;AACjB,SAAKqmB,eAAL;;AACA,SAAKN,eAAL,CAAqBO,OAArB,CAA6Bt2D,IAA7B,CAAkC0M,0DAAS,CAAC,KAAKmoD,QAAN,CAA3C,EAA4Dj1D,SAA5D,CAAsEsH,KAAK,IAAI;AAC3EA,MAAAA,KAAK,CAACqvD,KAAN,CAAY74C,OAAZ,CAAoB03C,MAAM,IAAIA,MAAM,CAACpxB,MAAP,EAA9B;AACA98B,MAAAA,KAAK,CAACsvD,OAAN,CAAc94C,OAAd,CAAsB03C,MAAM,IAAIA,MAAM,CAACqB,QAAP,EAAhC;AACH,KAHD;;AAIA,SAAKxwD,OAAL,CAAa0K,OAAb,CAAqB3Q,IAArB,CAA0BosC,yDAAS,CAAC,IAAD,CAAnC,EAA2C1/B,0DAAS,CAAC,KAAKmoD,QAAN,CAApD,EAAqEj1D,SAArE,CAA+E,MAAM;AACjF,WAAK82D,aAAL;;AACA,WAAKV,oBAAL;AACH,KAHD;AAIH;;AACDzwD,EAAAA,SAAS,GAAG;AACR,UAAMoxD,iBAAiB,GAAG,KAAKC,yBAAL,EAA1B;;AACA,UAAM1zD,SAAS,GAAG,KAAKA,SAAvB,CAFQ,CAGR;AACA;AACA;;AACA,QAAIyzD,iBAAiB,KAAK,KAAK/B,sBAA/B,EAAuD;AACnD,YAAMjhD,OAAO,GAAG,KAAKlQ,WAAL,CAAiB0C,aAAjC;AACA,WAAKyuD,sBAAL,GAA8B+B,iBAA9B;;AACA,UAAIA,iBAAJ,EAAuB;AACnBhjD,QAAAA,OAAO,CAACvE,YAAR,CAAqB,iBAArB,EAAwCunD,iBAAxC;AACH,OAFD,MAGK;AACDhjD,QAAAA,OAAO,CAACuV,eAAR,CAAwB,iBAAxB;AACH;AACJ;;AACD,QAAIhmB,SAAJ,EAAe;AACX;AACA,UAAI,KAAK2zD,gBAAL,KAA0B3zD,SAAS,CAACwrB,OAAxC,EAAiD;AAC7C,YAAI,KAAKmoC,gBAAL,KAA0B/2D,SAA1B,IACAoD,SAAS,CAAC2B,QAAV,KAAuB,IADvB,IAEA3B,SAAS,CAAC2B,QAAV,KAAuB,KAAKA,QAFhC,EAE0C;AACtC,eAAKA,QAAL,GAAgB3B,SAAS,CAAC2B,QAA1B;AACH;;AACD,aAAKgyD,gBAAL,GAAwB3zD,SAAS,CAACwrB,OAAlC;AACH;;AACD,WAAKlpB,gBAAL;AACH;AACJ;;AACDH,EAAAA,WAAW,CAACsL,OAAD,EAAU;AACjB;AACA;AACA,QAAIA,OAAO,CAAC,UAAD,CAAX,EAAyB;AACrB,WAAK5M,YAAL,CAAkBhE,IAAlB;AACH;;AACD,QAAI4Q,OAAO,CAAC,2BAAD,CAAP,IAAwC,KAAK41C,WAAjD,EAA8D;AAC1D,WAAKA,WAAL,CAAiBE,aAAjB,CAA+B,KAAKmP,0BAApC;AACH;AACJ;;AACDtwD,EAAAA,WAAW,GAAG;AACV,SAAKuvD,QAAL,CAAc90D,IAAd;;AACA,SAAK80D,QAAL,CAAcx1D,QAAd;;AACA,SAAK0E,YAAL,CAAkB1E,QAAlB;AACH;AACD;;;AACAy3D,EAAAA,MAAM,GAAG;AACL,SAAKV,SAAL,GAAiB,KAAKrQ,KAAL,EAAjB,GAAgC,KAAKgR,IAAL,EAAhC;AACH;AACD;;;AACAA,EAAAA,IAAI,GAAG;AACH,QAAI,KAAKC,QAAL,EAAJ,EAAqB;AACjB,WAAKvC,UAAL,GAAkB,IAAlB;;AACA,WAAKlO,WAAL,CAAiB0Q,yBAAjB,CAA2C,IAA3C;;AACA,WAAKC,uBAAL;;AACA,WAAKz9C,kBAAL,CAAwBlT,YAAxB;AACH;AACJ;AACD;;;AACAw/C,EAAAA,KAAK,GAAG;AACJ,QAAI,KAAK0O,UAAT,EAAqB;AACjB,WAAKA,UAAL,GAAkB,KAAlB;;AACA,WAAKlO,WAAL,CAAiB0Q,yBAAjB,CAA2C,KAAKE,MAAL,KAAgB,KAAhB,GAAwB,KAAnE;;AACA,WAAK19C,kBAAL,CAAwBlT,YAAxB;;AACA,WAAKpC,UAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIsB,EAAAA,UAAU,CAAC5F,KAAD,EAAQ;AACd,SAAKq2D,YAAL,CAAkBr2D,KAAlB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACI8F,EAAAA,gBAAgB,CAACC,EAAD,EAAK;AACjB,SAAKxB,SAAL,GAAiBwB,EAAjB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,iBAAiB,CAACD,EAAD,EAAK;AAClB,SAAKzB,UAAL,GAAkByB,EAAlB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,gBAAgB,CAACC,UAAD,EAAa;AACzB,SAAKlB,QAAL,GAAgBkB,UAAhB;;AACA,SAAK0T,kBAAL,CAAwBlT,YAAxB;;AACA,SAAKxC,YAAL,CAAkBhE,IAAlB;AACH;AACD;;;AACa,MAATq2D,SAAS,GAAG;AACZ,WAAO,KAAK3B,UAAZ;AACH;AACD;;;AACY,MAARxsB,QAAQ,GAAG;AACX,WAAO,KAAKljC,QAAL,GAAgB,KAAKgxD,eAAL,EAAsB9tB,QAAtB,IAAkC,EAAlD,GAAuD,KAAK8tB,eAAL,EAAsB9tB,QAAtB,CAA+B,CAA/B,CAA9D;AACH;AACD;;;AACgB,MAAZmvB,YAAY,GAAG;AACf,QAAI,KAAKzwD,KAAT,EAAgB;AACZ,aAAO,EAAP;AACH;;AACD,QAAI,KAAKrC,SAAT,EAAoB;AAChB,YAAM4jC,eAAe,GAAG,KAAK6tB,eAAL,CAAqB9tB,QAArB,CAA8BhgC,GAA9B,CAAkCmtD,MAAM,IAAIA,MAAM,CAACiC,SAAnD,CAAxB;;AACA,UAAI,KAAKF,MAAL,EAAJ,EAAmB;AACfjvB,QAAAA,eAAe,CAAC1yB,OAAhB;AACH,OAJe,CAKhB;;;AACA,aAAO0yB,eAAe,CAAClhC,IAAhB,CAAqB,IAArB,CAAP;AACH;;AACD,WAAO,KAAK+uD,eAAL,CAAqB9tB,QAArB,CAA8B,CAA9B,EAAiCovB,SAAxC;AACH;AACD;;;AACAF,EAAAA,MAAM,GAAG;AACL,WAAO,KAAKz9C,IAAL,GAAY,KAAKA,IAAL,CAAU7Z,KAAV,KAAoB,KAAhC,GAAwC,KAA/C;AACH;AACD;;;AACA2nD,EAAAA,cAAc,CAACtgD,KAAD,EAAQ;AAClB,QAAI,CAAC,KAAKrC,QAAV,EAAoB;AAChB,WAAKuxD,SAAL,GAAiB,KAAKkB,kBAAL,CAAwBpwD,KAAxB,CAAjB,GAAkD,KAAKqwD,oBAAL,CAA0BrwD,KAA1B,CAAlD;AACH;AACJ;AACD;;;AACAqwD,EAAAA,oBAAoB,CAACrwD,KAAD,EAAQ;AACxB,UAAMugD,OAAO,GAAGvgD,KAAK,CAACugD,OAAtB;AACA,UAAM+P,UAAU,GAAG/P,OAAO,KAAKtH,8DAAZ,IACfsH,OAAO,KAAKvH,4DADG,IAEfuH,OAAO,KAAKpH,8DAFG,IAGfoH,OAAO,KAAKrH,+DAHhB;AAIA,UAAMqX,SAAS,GAAGhQ,OAAO,KAAKjH,yDAAZ,IAAqBiH,OAAO,KAAKhH,yDAAnD;AACA,UAAMsG,OAAO,GAAG,KAAKR,WAArB,CAPwB,CAQxB;;AACA,QAAK,CAACQ,OAAO,CAAC2Q,QAAR,EAAD,IAAuBD,SAAvB,IAAoC,CAAClX,sEAAc,CAACr5C,KAAD,CAApD,IACC,CAAC,KAAKnC,QAAL,IAAiBmC,KAAK,CAACywD,MAAxB,KAAmCH,UADxC,EACqD;AACjDtwD,MAAAA,KAAK,CAACG,cAAN,GADiD,CACzB;;AACxB,WAAK0vD,IAAL;AACH,KAJD,MAKK,IAAI,CAAC,KAAKhyD,QAAV,EAAoB;AACrB,YAAM6yD,wBAAwB,GAAG,KAAK3vB,QAAtC;AACA8e,MAAAA,OAAO,CAACa,SAAR,CAAkB1gD,KAAlB;AACA,YAAM2wD,cAAc,GAAG,KAAK5vB,QAA5B,CAHqB,CAIrB;;AACA,UAAI4vB,cAAc,IAAID,wBAAwB,KAAKC,cAAnD,EAAmE;AAC/D;AACA;AACA,aAAKrD,cAAL,CAAoBsD,QAApB,CAA6BD,cAAc,CAACR,SAA5C,EAAuD,KAAvD;AACH;AACJ;AACJ;AACD;;;AACAC,EAAAA,kBAAkB,CAACpwD,KAAD,EAAQ;AACtB,UAAM6/C,OAAO,GAAG,KAAKR,WAArB;AACA,UAAMkB,OAAO,GAAGvgD,KAAK,CAACugD,OAAtB;AACA,UAAM+P,UAAU,GAAG/P,OAAO,KAAKtH,8DAAZ,IAA0BsH,OAAO,KAAKvH,4DAAzD;AACA,UAAMwX,QAAQ,GAAG3Q,OAAO,CAAC2Q,QAAR,EAAjB;;AACA,QAAIF,UAAU,IAAItwD,KAAK,CAACywD,MAAxB,EAAgC;AAC5B;AACAzwD,MAAAA,KAAK,CAACG,cAAN;AACA,WAAK0+C,KAAL,GAH4B,CAI5B;AACA;AACH,KAND,MAOK,IAAI,CAAC2R,QAAD,KACJjQ,OAAO,KAAKjH,yDAAZ,IAAqBiH,OAAO,KAAKhH,yDAD7B,KAELsG,OAAO,CAACC,UAFH,IAGL,CAACzG,sEAAc,CAACr5C,KAAD,CAHd,EAGuB;AACxBA,MAAAA,KAAK,CAACG,cAAN;;AACA0/C,MAAAA,OAAO,CAACC,UAAR,CAAmB+Q,qBAAnB;AACH,KANI,MAOA,IAAI,CAACL,QAAD,IAAa,KAAKpzD,SAAlB,IAA+BmjD,OAAO,KAAKgL,qDAA3C,IAAgDvrD,KAAK,CAAC8wD,OAA1D,EAAmE;AACpE9wD,MAAAA,KAAK,CAACG,cAAN;AACA,YAAM4wD,oBAAoB,GAAG,KAAKhyD,OAAL,CAAagO,IAAb,CAAkB8zB,GAAG,IAAI,CAACA,GAAG,CAACljC,QAAL,IAAiB,CAACkjC,GAAG,CAACE,QAA/C,CAA7B;AACA,WAAKhiC,OAAL,CAAayX,OAAb,CAAqB03C,MAAM,IAAI;AAC3B,YAAI,CAACA,MAAM,CAACvwD,QAAZ,EAAsB;AAClBozD,UAAAA,oBAAoB,GAAG7C,MAAM,CAACpxB,MAAP,EAAH,GAAqBoxB,MAAM,CAACqB,QAAP,EAAzC;AACH;AACJ,OAJD;AAKH,KARI,MASA;AACD,YAAMyB,sBAAsB,GAAGnR,OAAO,CAACG,eAAvC;AACAH,MAAAA,OAAO,CAACa,SAAR,CAAkB1gD,KAAlB;;AACA,UAAI,KAAK5C,SAAL,IACAkzD,UADA,IAEAtwD,KAAK,CAACixD,QAFN,IAGApR,OAAO,CAACC,UAHR,IAIAD,OAAO,CAACG,eAAR,KAA4BgR,sBAJhC,EAIwD;AACpDnR,QAAAA,OAAO,CAACC,UAAR,CAAmB+Q,qBAAnB;AACH;AACJ;AACJ;;AACDK,EAAAA,QAAQ,GAAG;AACP,QAAI,CAAC,KAAKvzD,QAAV,EAAoB;AAChB,WAAK0+C,QAAL,GAAgB,IAAhB;AACA,WAAKx/C,YAAL,CAAkBhE,IAAlB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACIs4D,EAAAA,OAAO,GAAG;AACN,SAAK9U,QAAL,GAAgB,KAAhB;;AACA,QAAI,CAAC,KAAK1+C,QAAN,IAAkB,CAAC,KAAKuxD,SAA5B,EAAuC;AACnC,WAAKjyD,UAAL;;AACA,WAAKsV,kBAAL,CAAwBlT,YAAxB;;AACA,WAAKxC,YAAL,CAAkBhE,IAAlB;AACH;AACJ;AACD;AACJ;AACA;;;AACIu4D,EAAAA,WAAW,GAAG;AACV,SAAKC,WAAL,CAAiBC,cAAjB,CAAgCx4D,IAAhC,CAAqCS,oDAAI,CAAC,CAAD,CAAzC,EAA8Cb,SAA9C,CAAwD,MAAM;AAC1D,WAAK6Z,kBAAL,CAAwBg3B,aAAxB;;AACA,WAAKgoB,mBAAL;AACH,KAHD;AAIH;AACD;;;AACAC,EAAAA,cAAc,GAAG;AACb,WAAO,KAAKrE,gBAAL,GAAyB,OAAM,KAAKA,gBAAL,CAAsBzwD,KAAM,EAA3D,GAA+D,EAAtE;AACH;AACD;;;AACS,MAAL+C,KAAK,GAAG;AACR,WAAO,CAAC,KAAKovD,eAAN,IAAyB,KAAKA,eAAL,CAAqB4C,OAArB,EAAhC;AACH;;AACD3C,EAAAA,oBAAoB,GAAG;AACnB;AACA;AACA5lD,IAAAA,OAAO,CAACC,OAAR,GAAkB+vB,IAAlB,CAAuB,MAAM;AACzB,UAAI,KAAKl9B,SAAT,EAAoB;AAChB,aAAK+B,MAAL,GAAc,KAAK/B,SAAL,CAAerD,KAA7B;AACH;;AACD,WAAK+4D,oBAAL,CAA0B,KAAK3zD,MAA/B;;AACA,WAAKlB,YAAL,CAAkBhE,IAAlB;AACH,KAND;AAOH;AACD;AACJ;AACA;AACA;;;AACI64D,EAAAA,oBAAoB,CAAC/4D,KAAD,EAAQ;AACxB,SAAKk2D,eAAL,CAAqB9tB,QAArB,CAA8BvqB,OAA9B,CAAsC03C,MAAM,IAAIA,MAAM,CAACyD,iBAAP,EAAhD;;AACA,SAAK9C,eAAL,CAAqBn4C,KAArB;;AACA,QAAI,KAAK7Y,QAAL,IAAiBlF,KAArB,EAA4B;AACxB,UAAI,CAACN,KAAK,CAACyI,OAAN,CAAcnI,KAAd,CAAD,KAA0B,OAAO0b,SAAP,KAAqB,WAArB,IAAoCA,SAA9D,CAAJ,EAA8E;AAC1E,cAAM63C,8BAA8B,EAApC;AACH;;AACDvzD,MAAAA,KAAK,CAAC6d,OAAN,CAAe5M,YAAD,IAAkB,KAAKgoD,oBAAL,CAA0BhoD,YAA1B,CAAhC;;AACA,WAAKioD,WAAL;AACH,KAND,MAOK;AACD,YAAMC,mBAAmB,GAAG,KAAKF,oBAAL,CAA0Bj5D,KAA1B,CAA5B,CADC,CAED;AACA;;;AACA,UAAIm5D,mBAAJ,EAAyB;AACrB,aAAKzS,WAAL,CAAiBM,gBAAjB,CAAkCmS,mBAAlC;AACH,OAFD,MAGK,IAAI,CAAC,KAAK5C,SAAV,EAAqB;AACtB;AACA;AACA,aAAK7P,WAAL,CAAiBM,gBAAjB,CAAkC,CAAC,CAAnC;AACH;AACJ;;AACD,SAAKptC,kBAAL,CAAwBlT,YAAxB;AACH;AACD;AACJ;AACA;AACA;;;AACIuyD,EAAAA,oBAAoB,CAACj5D,KAAD,EAAQ;AACxB,UAAMm5D,mBAAmB,GAAG,KAAK/yD,OAAL,CAAa8K,IAAb,CAAmBqkD,MAAD,IAAY;AACtD;AACA;AACA,UAAI,KAAKW,eAAL,CAAqBkD,UAArB,CAAgC7D,MAAhC,CAAJ,EAA6C;AACzC,eAAO,KAAP;AACH;;AACD,UAAI;AACA;AACA,eAAOA,MAAM,CAACv1D,KAAP,IAAgB,IAAhB,IAAwB,KAAKknC,YAAL,CAAkBquB,MAAM,CAACv1D,KAAzB,EAAgCA,KAAhC,CAA/B;AACH,OAHD,CAIA,OAAO+xC,KAAP,EAAc;AACV,YAAI,OAAOr2B,SAAP,KAAqB,WAArB,IAAoCA,SAAxC,EAAmD;AAC/C;AACAC,UAAAA,OAAO,CAACC,IAAR,CAAam2B,KAAb;AACH;;AACD,eAAO,KAAP;AACH;AACJ,KAjB2B,CAA5B;;AAkBA,QAAIonB,mBAAJ,EAAyB;AACrB,WAAKjD,eAAL,CAAqB/xB,MAArB,CAA4Bg1B,mBAA5B;AACH;;AACD,WAAOA,mBAAP;AACH;AACD;;;AACA9C,EAAAA,YAAY,CAACx4B,QAAD,EAAW;AACnB;AACA,QAAIA,QAAQ,KAAK,KAAKz4B,MAAlB,IAA6B,KAAKX,SAAL,IAAkB/E,KAAK,CAACyI,OAAN,CAAc01B,QAAd,CAAnD,EAA6E;AACzE,UAAI,KAAKz3B,OAAT,EAAkB;AACd,aAAK2yD,oBAAL,CAA0Bl7B,QAA1B;AACH;;AACD,WAAKz4B,MAAL,GAAcy4B,QAAd;AACA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;AACD;;;AACA24B,EAAAA,eAAe,GAAG;AACd,SAAK9P,WAAL,GAAmB,IAAIgM,0EAAJ,CAA+B,KAAKtsD,OAApC,EACdwgD,aADc,CACA,KAAKmP,0BADL,EAEdsD,uBAFc,GAGdjC,yBAHc,CAGY,KAAKE,MAAL,KAAgB,KAAhB,GAAwB,KAHpC,EAIdzQ,cAJc,GAKdyS,uBALc,CAKU,CAAC,UAAD,CALV,CAAnB;;AAMA,SAAK5S,WAAL,CAAiBI,MAAjB,CAAwB3mD,IAAxB,CAA6B0M,0DAAS,CAAC,KAAKmoD,QAAN,CAAtC,EAAuDj1D,SAAvD,CAAiE,MAAM;AACnE,UAAI,KAAKw2D,SAAT,EAAoB;AAChB;AACA;AACA,YAAI,CAAC,KAAKrxD,QAAN,IAAkB,KAAKwhD,WAAL,CAAiBS,UAAvC,EAAmD;AAC/C,eAAKT,WAAL,CAAiBS,UAAjB,CAA4B+Q,qBAA5B;AACH,SALe,CAMhB;AACA;;;AACA,aAAK/xD,KAAL;AACA,aAAK+/C,KAAL;AACH;AACJ,KAZD;;AAaA,SAAKQ,WAAL,CAAiB9pC,MAAjB,CAAwBzc,IAAxB,CAA6B0M,0DAAS,CAAC,KAAKmoD,QAAN,CAAtC,EAAuDj1D,SAAvD,CAAiE,MAAM;AACnE,UAAI,KAAK60D,UAAL,IAAmB,KAAK2E,KAA5B,EAAmC;AAC/B,aAAKC,qBAAL,CAA2B,KAAK9S,WAAL,CAAiBW,eAAjB,IAAoC,CAA/D;AACH,OAFD,MAGK,IAAI,CAAC,KAAKuN,UAAN,IAAoB,CAAC,KAAK1vD,QAA1B,IAAsC,KAAKwhD,WAAL,CAAiBS,UAA3D,EAAuE;AACxE,aAAKT,WAAL,CAAiBS,UAAjB,CAA4B+Q,qBAA5B;AACH;AACJ,KAPD;AAQH;AACD;;;AACArB,EAAAA,aAAa,GAAG;AACZ,UAAM4C,kBAAkB,GAAGntB,2CAAK,CAAC,KAAKlmC,OAAL,CAAa0K,OAAd,EAAuB,KAAKkkD,QAA5B,CAAhC;AACA,SAAKM,sBAAL,CAA4Bn1D,IAA5B,CAAiC0M,0DAAS,CAAC4sD,kBAAD,CAA1C,EAAgE15D,SAAhE,CAA0EsH,KAAK,IAAI;AAC/E,WAAKqyD,SAAL,CAAeryD,KAAK,CAACnG,MAArB,EAA6BmG,KAAK,CAACsyD,WAAnC;;AACA,UAAItyD,KAAK,CAACsyD,WAAN,IAAqB,CAAC,KAAKz0D,QAA3B,IAAuC,KAAK0vD,UAAhD,EAA4D;AACxD,aAAK1O,KAAL;AACA,aAAK//C,KAAL;AACH;AACJ,KAND,EAFY,CASZ;AACA;;AACAmmC,IAAAA,2CAAK,CAAC,GAAG,KAAKlmC,OAAL,CAAagC,GAAb,CAAiBmtD,MAAM,IAAIA,MAAM,CAACqE,aAAlC,CAAJ,CAAL,CACKz5D,IADL,CACU0M,0DAAS,CAAC4sD,kBAAD,CADnB,EAEK15D,SAFL,CAEe,MAAM;AACjB,WAAK6Z,kBAAL,CAAwBlT,YAAxB;;AACA,WAAKxC,YAAL,CAAkBhE,IAAlB;AACH,KALD;AAMH;AACD;;;AACAw5D,EAAAA,SAAS,CAACnE,MAAD,EAASoE,WAAT,EAAsB;AAC3B,UAAME,WAAW,GAAG,KAAK3D,eAAL,CAAqBkD,UAArB,CAAgC7D,MAAhC,CAApB;;AACA,QAAIA,MAAM,CAACv1D,KAAP,IAAgB,IAAhB,IAAwB,CAAC,KAAKyE,SAAlC,EAA6C;AACzC8wD,MAAAA,MAAM,CAACqB,QAAP;;AACA,WAAKV,eAAL,CAAqBn4C,KAArB;;AACA,UAAI,KAAK/d,KAAL,IAAc,IAAlB,EAAwB;AACpB,aAAK85D,iBAAL,CAAuBvE,MAAM,CAACv1D,KAA9B;AACH;AACJ,KAND,MAOK;AACD,UAAI65D,WAAW,KAAKtE,MAAM,CAACntB,QAA3B,EAAqC;AACjCmtB,QAAAA,MAAM,CAACntB,QAAP,GACM,KAAK8tB,eAAL,CAAqB/xB,MAArB,CAA4BoxB,MAA5B,CADN,GAEM,KAAKW,eAAL,CAAqBU,QAArB,CAA8BrB,MAA9B,CAFN;AAGH;;AACD,UAAIoE,WAAJ,EAAiB;AACb,aAAKjT,WAAL,CAAiBY,aAAjB,CAA+BiO,MAA/B;AACH;;AACD,UAAI,KAAKrwD,QAAT,EAAmB;AACf,aAAKg0D,WAAL;;AACA,YAAIS,WAAJ,EAAiB;AACb;AACA;AACA;AACA;AACA,eAAKxzD,KAAL;AACH;AACJ;AACJ;;AACD,QAAI0zD,WAAW,KAAK,KAAK3D,eAAL,CAAqBkD,UAArB,CAAgC7D,MAAhC,CAApB,EAA6D;AACzD,WAAKuE,iBAAL;AACH;;AACD,SAAK51D,YAAL,CAAkBhE,IAAlB;AACH;AACD;;;AACAg5D,EAAAA,WAAW,GAAG;AACV,QAAI,KAAKh0D,QAAT,EAAmB;AACf,YAAMkB,OAAO,GAAG,KAAKA,OAAL,CAAaghD,OAAb,EAAhB;;AACA,WAAK8O,eAAL,CAAqB6D,IAArB,CAA0B,CAAChvD,CAAD,EAAIC,CAAJ,KAAU;AAChC,eAAO,KAAKgvD,cAAL,GACD,KAAKA,cAAL,CAAoBjvD,CAApB,EAAuBC,CAAvB,EAA0B5E,OAA1B,CADC,GAEDA,OAAO,CAACgP,OAAR,CAAgBrK,CAAhB,IAAqB3E,OAAO,CAACgP,OAAR,CAAgBpK,CAAhB,CAF3B;AAGH,OAJD;;AAKA,WAAK9G,YAAL,CAAkBhE,IAAlB;AACH;AACJ;AACD;;;AACA45D,EAAAA,iBAAiB,CAACG,aAAD,EAAgB;AAC7B,QAAIC,WAAW,GAAG,IAAlB;;AACA,QAAI,KAAKh1D,QAAT,EAAmB;AACfg1D,MAAAA,WAAW,GAAG,KAAK9xB,QAAL,CAAchgC,GAAd,CAAkBmtD,MAAM,IAAIA,MAAM,CAACv1D,KAAnC,CAAd;AACH,KAFD,MAGK;AACDk6D,MAAAA,WAAW,GAAG,KAAK9xB,QAAL,GAAgB,KAAKA,QAAL,CAAcpoC,KAA9B,GAAsCi6D,aAApD;AACH;;AACD,SAAK70D,MAAL,GAAc80D,WAAd;AACA,SAAKrE,WAAL,CAAiB3tC,IAAjB,CAAsBgyC,WAAtB;;AACA,SAAK31D,SAAL,CAAe21D,WAAf;;AACA,SAAKtE,eAAL,CAAqB1tC,IAArB,CAA0B,KAAKiyC,eAAL,CAAqBD,WAArB,CAA1B;;AACA,SAAKtgD,kBAAL,CAAwBlT,YAAxB;AACH;AACD;AACJ;AACA;AACA;;;AACI2wD,EAAAA,uBAAuB,GAAG;AACtB,QAAI,KAAK3Q,WAAT,EAAsB;AAClB,UAAI,KAAK5/C,KAAT,EAAgB;AACZ,aAAK4/C,WAAL,CAAiByB,kBAAjB;AACH,OAFD,MAGK;AACD,aAAKzB,WAAL,CAAiBY,aAAjB,CAA+B,KAAK4O,eAAL,CAAqB9tB,QAArB,CAA8B,CAA9B,CAA/B;AACH;AACJ;AACJ;AACD;;;AACA+uB,EAAAA,QAAQ,GAAG;AACP,WAAO,CAAC,KAAKvC,UAAN,IAAoB,CAAC,KAAK5vD,QAA1B,IAAsC,KAAKoB,OAAL,EAAc7G,MAAd,GAAuB,CAApE;AACH;AACD;;;AACA4G,EAAAA,KAAK,CAACC,OAAD,EAAU;AACX,SAAKxC,WAAL,CAAiB0C,aAAjB,CAA+BH,KAA/B,CAAqCC,OAArC;AACH;AACD;;;AACAg0D,EAAAA,uBAAuB,GAAG;AACtB,QAAI,KAAK1Q,SAAT,EAAoB;AAChB,aAAO,IAAP;AACH;;AACD,UAAM2Q,OAAO,GAAG,KAAK7F,gBAAL,EAAuBzkB,UAAvB,EAAhB;AACA,UAAMuqB,eAAe,GAAGD,OAAO,GAAGA,OAAO,GAAG,GAAb,GAAmB,EAAlD;AACA,WAAO,KAAK1Q,cAAL,GAAsB2Q,eAAe,GAAG,KAAK3Q,cAA7C,GAA8D0Q,OAArE;AACH;AACD;;;AACAE,EAAAA,wBAAwB,GAAG;AACvB,QAAI,KAAKhE,SAAL,IAAkB,KAAK7P,WAAvB,IAAsC,KAAKA,WAAL,CAAiBS,UAA3D,EAAuE;AACnE,aAAO,KAAKT,WAAL,CAAiBS,UAAjB,CAA4BriD,EAAnC;AACH;;AACD,WAAO,IAAP;AACH;AACD;;;AACAiyD,EAAAA,yBAAyB,GAAG;AACxB,QAAI,KAAKrN,SAAT,EAAoB;AAChB,aAAO,IAAP;AACH;;AACD,UAAM2Q,OAAO,GAAG,KAAK7F,gBAAL,EAAuBzkB,UAAvB,EAAhB;AACA,QAAI/vC,KAAK,GAAG,CAACq6D,OAAO,GAAGA,OAAO,GAAG,GAAb,GAAmB,EAA3B,IAAiC,KAAKpF,QAAlD;;AACA,QAAI,KAAKtL,cAAT,EAAyB;AACrB3pD,MAAAA,KAAK,IAAI,MAAM,KAAK2pD,cAApB;AACH;;AACD,WAAO3pD,KAAP;AACH;AACD;;;AACAs2D,EAAAA,mBAAmB,CAAChJ,MAAD,EAAS;AACxB,SAAKmI,YAAL,CAAkBvtC,IAAlB,CAAuBolC,MAAvB;AACH;AACD;AACJ;AACA;AACA;;;AACItmD,EAAAA,iBAAiB,CAACC,GAAD,EAAM;AACnB,SAAKC,gBAAL,GAAwBD,GAAG,CAACE,IAAJ,CAAS,GAAT,CAAxB;AACH;AACD;AACJ;AACA;AACA;;;AACIc,EAAAA,gBAAgB,GAAG;AACf,SAAK9B,KAAL;AACA,SAAK+wD,IAAL;AACH;AACD;AACJ;AACA;AACA;;;AACwB,MAAhBnwD,gBAAgB,GAAG;AACnB,WAAO,KAAK6tD,UAAL,IAAmB,CAAC,KAAK9tD,KAAzB,IAAmC,KAAK48C,QAAL,IAAiB,CAAC,CAAC,KAAKuS,YAAlE;AACH;;AA3qB4C;;AA6qBjD1B,cAAc,CAAChxD,IAAf;AAAA,mBAA2GgxD,cAA3G,EAvrBmGlzD,+DAurBnG,CAA2IiB,kEAA3I,GAvrBmGjB,+DAurBnG,CAAwKA,4DAAxK,GAvrBmGA,+DAurBnG,CAAyMA,iDAAzM,GAvrBmGA,+DAurBnG,CAA+NkB,qEAA/N,GAvrBmGlB,+DAurBnG,CAAgQA,qDAAhQ,GAvrBmGA,+DAurBnG,CAA0RW,8DAA1R,MAvrBmGX,+DAurBnG,CAAwUmB,mDAAxU,MAvrBmGnB,+DAurBnG,CAA8WmB,+DAA9W,MAvrBmGnB,+DAurBnG,CAAga+sC,yEAAha,MAvrBmG/sC,+DAurBnG,CAA2cmB,sDAA3c,OAvrBmGnB,+DAurBnG,CAAggB,UAAhgB,GAvrBmGA,+DAurBnG,CAAwiB0yD,0BAAxiB,GAvrBmG1yD,+DAurBnG,CAA+kBqB,6DAA/kB,GAvrBmGrB,+DAurBnG,CAA4mB4yD,iBAA5mB;AAAA;;AACAM,cAAc,CAAC/wD,IAAf,kBAxrBmGnC,+DAwrBnG;AAAA,QAA+FkzD,cAA/F;AAAA;AAAA;AAxrBmGlzD,MAAAA,yDAwrBnG;AAxrBmGA,MAAAA,yDAwrBnG;AAxrBmGA,MAAAA,yDAwrBnG,CAA86B4wD,qEAA96B;AAAA;;AAAA;AAAA;;AAxrBmG5wD,MAAAA,4DAwrBnG,MAxrBmGA,yDAwrBnG;AAxrBmGA,MAAAA,4DAwrBnG,MAxrBmGA,yDAwrBnG;AAxrBmGA,MAAAA,4DAwrBnG,MAxrBmGA,yDAwrBnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAxrBmGA,wEAwrBnG,EAxrBmGA,kEAwrBnG;AAAA;;AACA;AAAA,qDAzrBmGA,+DAyrBnG,CAA2FkzD,cAA3F,EAAuH,CAAC;AAC5G9wD,IAAAA,IAAI,EAAEnC,oDAASA;AAD6F,GAAD,CAAvH,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEmC,MAAAA,IAAI,EAAEnB,kEAAgB6iB;AAAxB,KAAD,EAA6B;AAAE1hB,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAA7B,EAA6D;AAAEhF,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAA7D,EAAkF;AAAE3I,MAAAA,IAAI,EAAElB,qEAAoBsG;AAA5B,KAAlF,EAAkH;AAAEpF,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAlH,EAA2I;AAAE9E,MAAAA,IAAI,EAAEzB,8DAAR;AAA2B4H,MAAAA,UAAU,EAAE,CAAC;AAChNnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADkM,OAAD;AAAvC,KAA3I,EAE3B;AAAE+B,MAAAA,IAAI,EAAEjB,mDAAR;AAAmBoH,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADoB,OAAD;AAA/B,KAF2B,EAI3B;AAAE+B,MAAAA,IAAI,EAAEjB,+DAAR;AAA+BoH,MAAAA,UAAU,EAAE,CAAC;AAC9CnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADgC,OAAD;AAA3C,KAJ2B,EAM3B;AAAE+B,MAAAA,IAAI,EAAEvB,uEAAR;AAAyB0H,MAAAA,UAAU,EAAE,CAAC;AACxCnG,QAAAA,IAAI,EAAE/B,mDAAQA;AAD0B,OAAD,EAExC;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAACmvC,yEAAD;AAFP,OAFwC;AAArC,KAN2B,EAW3B;AAAE3qC,MAAAA,IAAI,EAAEjB,sDAAR;AAAsBoH,MAAAA,UAAU,EAAE,CAAC;AACrCnG,QAAAA,IAAI,EAAE9B,+CAAIA;AAD2B,OAAD,EAErC;AACC8B,QAAAA,IAAI,EAAE/B,mDAAQA;AADf,OAFqC;AAAlC,KAX2B,EAe3B;AAAE+B,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAE4I,oDAD4B;AAElCpN,QAAAA,IAAI,EAAE,CAAC,UAAD;AAF4B,OAAD;AAA/B,KAf2B,EAkB3B;AAAEwE,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAEsI,iDAD4B;AAElC9M,QAAAA,IAAI,EAAE,CAAC80D,0BAAD;AAF4B,OAAD;AAA/B,KAlB2B,EAqB3B;AAAEtwD,MAAAA,IAAI,EAAEf,6DAAgB83D;AAAxB,KArB2B,EAqBC;AAAE/2D,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC9DnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADgD,OAAD,EAE9D;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAACg1D,iBAAD;AAFP,OAF8D;AAA/B,KArBD,CAAP;AA0BlB,GA5BxB,EA4B0C;AAAEznB,IAAAA,OAAO,EAAE,CAAC;AACtC/oC,MAAAA,IAAI,EAAE7B,oDADgC;AAEtC3C,MAAAA,IAAI,EAAE,CAAC,SAAD;AAFgC,KAAD,CAAX;AAG1Bs6D,IAAAA,KAAK,EAAE,CAAC;AACR91D,MAAAA,IAAI,EAAE7B,oDADE;AAER3C,MAAAA,IAAI,EAAE,CAAC,OAAD;AAFE,KAAD,CAHmB;AAM1By5D,IAAAA,WAAW,EAAE,CAAC;AACdj1D,MAAAA,IAAI,EAAE7B,oDADQ;AAEd3C,MAAAA,IAAI,EAAE,CAACgzD,qEAAD;AAFQ,KAAD,CANa;AAS1B5L,IAAAA,UAAU,EAAE,CAAC;AACb5iD,MAAAA,IAAI,EAAE3B,gDAAKA;AADE,KAAD,CATc;AAW1B4C,IAAAA,WAAW,EAAE,CAAC;AACdjB,MAAAA,IAAI,EAAE3B,gDAAKA;AADG,KAAD,CAXa;AAa1BqD,IAAAA,QAAQ,EAAE,CAAC;AACX1B,MAAAA,IAAI,EAAE3B,gDAAKA;AADA,KAAD,CAbgB;AAe1BoD,IAAAA,QAAQ,EAAE,CAAC;AACXzB,MAAAA,IAAI,EAAE3B,gDAAKA;AADA,KAAD,CAfgB;AAiB1BuzD,IAAAA,sBAAsB,EAAE,CAAC;AACzB5xD,MAAAA,IAAI,EAAE3B,gDAAKA;AADc,KAAD,CAjBE;AAmB1BqlC,IAAAA,WAAW,EAAE,CAAC;AACd1jC,MAAAA,IAAI,EAAE3B,gDAAKA;AADG,KAAD,CAnBa;AAqB1B9B,IAAAA,KAAK,EAAE,CAAC;AACRyD,MAAAA,IAAI,EAAE3B,gDAAKA;AADH,KAAD,CArBmB;AAuB1B4nD,IAAAA,SAAS,EAAE,CAAC;AACZjmD,MAAAA,IAAI,EAAE3B,gDADM;AAEZ7C,MAAAA,IAAI,EAAE,CAAC,YAAD;AAFM,KAAD,CAvBe;AA0B1B0qD,IAAAA,cAAc,EAAE,CAAC;AACjBlmD,MAAAA,IAAI,EAAE3B,gDADW;AAEjB7C,MAAAA,IAAI,EAAE,CAAC,iBAAD;AAFW,KAAD,CA1BU;AA6B1B8K,IAAAA,iBAAiB,EAAE,CAAC;AACpBtG,MAAAA,IAAI,EAAE3B,gDAAKA;AADS,KAAD,CA7BO;AA+B1Bg0D,IAAAA,yBAAyB,EAAE,CAAC;AAC5BryD,MAAAA,IAAI,EAAE3B,gDAAKA;AADiB,KAAD,CA/BD;AAiC1Bk4D,IAAAA,cAAc,EAAE,CAAC;AACjBv2D,MAAAA,IAAI,EAAE3B,gDAAKA;AADM,KAAD,CAjCU;AAmC1BgD,IAAAA,EAAE,EAAE,CAAC;AACLrB,MAAAA,IAAI,EAAE3B,gDAAKA;AADN,KAAD,CAnCsB;AAqC1B2zD,IAAAA,YAAY,EAAE,CAAC;AACfhyD,MAAAA,IAAI,EAAE8I,iDAAMA;AADG,KAAD,CArCY;AAuC1BmpD,IAAAA,aAAa,EAAE,CAAC;AAChBjyD,MAAAA,IAAI,EAAE8I,iDADU;AAEhBtN,MAAAA,IAAI,EAAE,CAAC,QAAD;AAFU,KAAD,CAvCW;AA0C1B02D,IAAAA,aAAa,EAAE,CAAC;AAChBlyD,MAAAA,IAAI,EAAE8I,iDADU;AAEhBtN,MAAAA,IAAI,EAAE,CAAC,QAAD;AAFU,KAAD,CA1CW;AA6C1B22D,IAAAA,eAAe,EAAE,CAAC;AAClBnyD,MAAAA,IAAI,EAAE8I,iDAAMA;AADM,KAAD,CA7CS;AA+C1BspD,IAAAA,WAAW,EAAE,CAAC;AACdpyD,MAAAA,IAAI,EAAE8I,iDAAMA;AADE,KAAD;AA/Ca,GA5B1C;AAAA;;AA8EA,MAAMkuD,SAAN,SAAwBlG,cAAxB,CAAuC;AACnCtxD,EAAAA,WAAW,GAAG;AACV,UAAM,GAAG6wB,SAAT;AACA;;AACA,SAAK4mC,UAAL,GAAkB,CAAlB;AACA;;AACA,SAAKC,gBAAL,GAAwB,CAAxB;AACA;;AACA,SAAKC,gBAAL,GAAwB,KAAxB;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,UAAL,GAAkB,CACd;AACI7M,MAAAA,OAAO,EAAE,OADb;AAEIG,MAAAA,OAAO,EAAE,KAFb;AAGIL,MAAAA,QAAQ,EAAE,OAHd;AAIIC,MAAAA,QAAQ,EAAE;AAJd,KADc,EAOd;AACIC,MAAAA,OAAO,EAAE,OADb;AAEIG,MAAAA,OAAO,EAAE,QAFb;AAGIL,MAAAA,QAAQ,EAAE,OAHd;AAIIC,MAAAA,QAAQ,EAAE;AAJd,KAPc,CAAlB;AAcH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACI+M,EAAAA,uBAAuB,CAAChb,aAAD,EAAgBib,YAAhB,EAA8BC,SAA9B,EAAyC;AAC5D,UAAMC,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,UAAMC,yBAAyB,GAAGF,UAAU,GAAGnb,aAA/C;AACA,UAAMsb,gBAAgB,GAAGH,UAAU,GAAG,CAAtC,CAH4D,CAI5D;AACA;AACA;AACA;;AACA,UAAMI,qBAAqB,GAAGF,yBAAyB,GAAGJ,YAA5B,GAA2CK,gBAAzE;AACA,WAAOnwC,IAAI,CAACwD,GAAL,CAASxD,IAAI,CAACxgB,GAAL,CAAS,CAAT,EAAY4wD,qBAAZ,CAAT,EAA6CL,SAA7C,CAAP;AACH;;AACD5+C,EAAAA,QAAQ,GAAG;AACP,UAAMA,QAAN;;AACA,SAAKrC,cAAL,CACK4C,MADL,GAEKzc,IAFL,CAEU0M,0DAAS,CAAC,KAAKmoD,QAAN,CAFnB,EAGKj1D,SAHL,CAGe,MAAM;AACjB,UAAI,KAAKw2D,SAAT,EAAoB;AAChB,aAAKgF,YAAL,GAAoB,KAAK/uB,OAAL,CAAalmC,aAAb,CAA2BiQ,qBAA3B,EAApB;;AACA,aAAKqD,kBAAL,CAAwBlT,YAAxB;AACH;AACJ,KARD;AASH;;AACDwwD,EAAAA,IAAI,GAAG;AACH,QAAI,MAAMC,QAAN,EAAJ,EAAsB;AAClB,YAAMD,IAAN;AACA,WAAKqE,YAAL,GAAoB,KAAK/uB,OAAL,CAAalmC,aAAb,CAA2BiQ,qBAA3B,EAApB,CAFkB,CAGlB;AACA;;AACA,WAAKokD,gBAAL,GAAwBlyB,QAAQ,CAAC+yB,gBAAgB,CAAC,KAAKhvB,OAAL,CAAalmC,aAAd,CAAhB,CAA6Cm1D,QAA7C,IAAyD,GAA1D,CAAhC;;AACA,WAAKC,yBAAL,GANkB,CAOlB;;;AACA,WAAK5rD,OAAL,CAAaW,QAAb,CAAsBtQ,IAAtB,CAA2BS,oDAAI,CAAC,CAAD,CAA/B,EAAoCb,SAApC,CAA8C,MAAM;AAChD,YAAI,KAAK46D,gBAAL,IACA,KAAKjC,WAAL,CAAiBnM,UADjB,IAEA,KAAKmM,WAAL,CAAiBnM,UAAjB,CAA4BoP,cAFhC,EAEgD;AAC5C,eAAKjD,WAAL,CAAiBnM,UAAjB,CAA4BoP,cAA5B,CAA2CvkD,KAA3C,CAAiDqkD,QAAjD,GAA6D,GAAE,KAAKd,gBAAiB,IAArF;AACH;AACJ,OAND;AAOH;AACJ;AACD;;;AACAnB,EAAAA,qBAAqB,CAACr4D,KAAD,EAAQ;AACzB,UAAMy6D,UAAU,GAAGxJ,qFAA6B,CAACjxD,KAAD,EAAQ,KAAKiF,OAAb,EAAsB,KAAKy1D,YAA3B,CAAhD;;AACA,UAAMX,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,QAAIh6D,KAAK,KAAK,CAAV,IAAey6D,UAAU,KAAK,CAAlC,EAAqC;AACjC;AACA;AACA;AACA,WAAKrC,KAAL,CAAWjzD,aAAX,CAAyBijD,SAAzB,GAAqC,CAArC;AACH,KALD,MAMK;AACD,WAAKgQ,KAAL,CAAWjzD,aAAX,CAAyBijD,SAAzB,GAAqC8I,gFAAwB,CAAC,CAAClxD,KAAK,GAAGy6D,UAAT,IAAuBV,UAAxB,EAAoCA,UAApC,EAAgD,KAAK3B,KAAL,CAAWjzD,aAAX,CAAyBijD,SAAzE,EAAoFkK,uBAApF,CAA7D;AACH;AACJ;;AACDmF,EAAAA,mBAAmB,GAAG;AAClB,SAAKkD,wBAAL;;AACA,SAAKvC,KAAL,CAAWjzD,aAAX,CAAyBijD,SAAzB,GAAqC,KAAKmR,UAA1C;AACH;;AACDpE,EAAAA,mBAAmB,CAAChJ,MAAD,EAAS;AACxB,QAAI,KAAKiJ,SAAT,EAAoB;AAChB,WAAKmE,UAAL,GAAkB,CAAlB;AACH,KAFD,MAGK;AACD,WAAKhC,WAAL,CAAiBqD,OAAjB,GAA2B,CAA3B;;AACA,WAAKniD,kBAAL,CAAwBlT,YAAxB;AACH;;AACD,UAAM4vD,mBAAN,CAA0BhJ,MAA1B;AACH;;AACD6M,EAAAA,eAAe,CAACn6D,KAAD,EAAQ;AACnB,WAAO,IAAIm0D,eAAJ,CAAoB,IAApB,EAA0Bn0D,KAA1B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACI87D,EAAAA,wBAAwB,GAAG;AACvB,UAAME,WAAW,GAAG,KAAKtD,WAAL,CAAiBnM,UAAjB,CAA4BoP,cAA5B,CAA2CplD,qBAA3C,EAApB;;AACA,UAAM0lD,YAAY,GAAG,KAAKjiD,cAAL,CAAoBkiD,eAApB,EAArB;;AACA,UAAM7mD,KAAK,GAAG,KAAKiiD,MAAL,EAAd;;AACA,UAAM6E,YAAY,GAAG,KAAKj3D,QAAL,GACf2uD,+BAA+B,GAAGH,sBADnB,GAEfA,sBAAsB,GAAG,CAF/B;AAGA,QAAIqI,OAAJ,CAPuB,CAQvB;;AACA,QAAI,KAAK72D,QAAT,EAAmB;AACf62D,MAAAA,OAAO,GAAGlI,+BAAV;AACH,KAFD,MAGK,IAAI,KAAKwB,sBAAT,EAAiC;AAClC0G,MAAAA,OAAO,GAAGrI,sBAAV;AACH,KAFI,MAGA;AACD,UAAItrB,QAAQ,GAAG,KAAK8tB,eAAL,CAAqB9tB,QAArB,CAA8B,CAA9B,KAAoC,KAAKhiC,OAAL,CAAawd,KAAhE;AACAm4C,MAAAA,OAAO,GAAG3zB,QAAQ,IAAIA,QAAQ,CAACzH,KAArB,GAA6BgzB,6BAA7B,GAA6DD,sBAAvE;AACH,KAlBsB,CAmBvB;;;AACA,QAAI,CAACr+C,KAAL,EAAY;AACR0mD,MAAAA,OAAO,IAAI,CAAC,CAAZ;AACH,KAtBsB,CAuBvB;;;AACA,UAAMK,YAAY,GAAG,KAAKJ,WAAW,CAACjkD,IAAZ,GAAmBgkD,OAAnB,IAA8B1mD,KAAK,GAAG8mD,YAAH,GAAkB,CAArD,CAAL,CAArB;AACA,UAAME,aAAa,GAAGL,WAAW,CAAChkD,KAAZ,GAAoB+jD,OAApB,GAA8BE,YAAY,CAACvmD,KAA3C,IAAoDL,KAAK,GAAG,CAAH,GAAO8mD,YAAhE,CAAtB,CAzBuB,CA0BvB;;AACA,QAAIC,YAAY,GAAG,CAAnB,EAAsB;AAClBL,MAAAA,OAAO,IAAIK,YAAY,GAAGtI,6BAA1B;AACH,KAFD,MAGK,IAAIuI,aAAa,GAAG,CAApB,EAAuB;AACxBN,MAAAA,OAAO,IAAIM,aAAa,GAAGvI,6BAA3B;AACH,KAhCsB,CAiCvB;AACA;AACA;;;AACA,SAAK4E,WAAL,CAAiBqD,OAAjB,GAA2B7wC,IAAI,CAACoxC,KAAL,CAAWP,OAAX,CAA3B;;AACA,SAAKrD,WAAL,CAAiBnM,UAAjB,CAA4BY,cAA5B;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIoP,EAAAA,wBAAwB,CAACxc,aAAD,EAAgBib,YAAhB,EAA8BC,SAA9B,EAAyC;AAC7D,UAAMC,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,UAAMqB,sBAAsB,GAAG,CAACtB,UAAU,GAAG,KAAKK,YAAL,CAAkBjlD,MAAhC,IAA0C,CAAzE;AACA,UAAMmmD,mBAAmB,GAAGvxC,IAAI,CAACwxC,KAAL,CAAWjJ,uBAAuB,GAAGyH,UAArC,CAA5B;AACA,QAAIyB,wBAAJ,CAJ6D,CAK7D;;AACA,QAAI,KAAKtH,sBAAT,EAAiC;AAC7B,aAAO,CAAP;AACH;;AACD,QAAI,KAAKqF,UAAL,KAAoB,CAAxB,EAA2B;AACvBiC,MAAAA,wBAAwB,GAAG5c,aAAa,GAAGmb,UAA3C;AACH,KAFD,MAGK,IAAI,KAAKR,UAAL,KAAoBO,SAAxB,EAAmC;AACpC,YAAM2B,mBAAmB,GAAG,KAAKC,aAAL,KAAuBJ,mBAAnD;AACA,YAAMK,oBAAoB,GAAG/c,aAAa,GAAG6c,mBAA7C,CAFoC,CAGpC;AACA;;AACA,UAAIG,iBAAiB,GAAG7B,UAAU,GAAI,CAAC,KAAK2B,aAAL,KAAuB3B,UAAvB,GAAoCzH,uBAArC,IAAgEyH,UAAtG,CALoC,CAMpC;AACA;AACA;AACA;;AACAyB,MAAAA,wBAAwB,GAAGG,oBAAoB,GAAG5B,UAAvB,GAAoC6B,iBAA/D;AACH,KAXI,MAYA;AACD;AACA;AACA;AACAJ,MAAAA,wBAAwB,GAAG3B,YAAY,GAAGE,UAAU,GAAG,CAAvD;AACH,KA7B4D,CA8B7D;AACA;AACA;;;AACA,WAAOhwC,IAAI,CAACoxC,KAAL,CAAWK,wBAAwB,GAAG,CAAC,CAA5B,GAAgCH,sBAA3C,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIQ,EAAAA,2BAA2B,CAAC/B,SAAD,EAAY;AACnC,UAAMC,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,UAAMc,YAAY,GAAG,KAAKjiD,cAAL,CAAoBkiD,eAApB,EAArB;;AACA,UAAMe,iBAAiB,GAAG,KAAK1B,YAAL,CAAkB1jD,GAAlB,GAAwBi8C,6BAAlD;AACA,UAAMoJ,oBAAoB,GAAGjB,YAAY,CAAC3lD,MAAb,GAAsB,KAAKilD,YAAL,CAAkBzjD,MAAxC,GAAiDg8C,6BAA9E;AACA,UAAMqJ,cAAc,GAAGjyC,IAAI,CAACioB,GAAL,CAAS,KAAK0nB,QAAd,CAAvB;AACA,UAAMuC,gBAAgB,GAAGlyC,IAAI,CAACwD,GAAL,CAAS,KAAKmuC,aAAL,KAAuB3B,UAAhC,EAA4CzH,uBAA5C,CAAzB;AACA,UAAM4J,iBAAiB,GAAGD,gBAAgB,GAAGD,cAAnB,GAAoC,KAAK5B,YAAL,CAAkBjlD,MAAhF;;AACA,QAAI+mD,iBAAiB,GAAGH,oBAAxB,EAA8C;AAC1C,WAAKI,cAAL,CAAoBD,iBAApB,EAAuCH,oBAAvC;AACH,KAFD,MAGK,IAAIC,cAAc,GAAGF,iBAArB,EAAwC;AACzC,WAAKM,gBAAL,CAAsBJ,cAAtB,EAAsCF,iBAAtC,EAAyDhC,SAAzD;AACH,KAFI,MAGA;AACD,WAAKL,gBAAL,GAAwB,KAAK4C,uBAAL,EAAxB;AACH;AACJ;AACD;;;AACAF,EAAAA,cAAc,CAACD,iBAAD,EAAoBH,oBAApB,EAA0C;AACpD;AACA,UAAMO,qBAAqB,GAAGvyC,IAAI,CAACoxC,KAAL,CAAWe,iBAAiB,GAAGH,oBAA/B,CAA9B,CAFoD,CAGpD;AACA;;AACA,SAAKxC,UAAL,IAAmB+C,qBAAnB;AACA,SAAK5C,QAAL,IAAiB4C,qBAAjB;AACA,SAAK7C,gBAAL,GAAwB,KAAK4C,uBAAL,EAAxB,CAPoD,CAQpD;AACA;AACA;;AACA,QAAI,KAAK9C,UAAL,IAAmB,CAAvB,EAA0B;AACtB,WAAKA,UAAL,GAAkB,CAAlB;AACA,WAAKG,QAAL,GAAgB,CAAhB;AACA,WAAKD,gBAAL,GAAyB,gBAAzB;AACH;AACJ;AACD;;;AACA2C,EAAAA,gBAAgB,CAACJ,cAAD,EAAiBF,iBAAjB,EAAoChC,SAApC,EAA+C;AAC3D;AACA,UAAMyC,qBAAqB,GAAGxyC,IAAI,CAACoxC,KAAL,CAAWa,cAAc,GAAGF,iBAA5B,CAA9B,CAF2D,CAG3D;AACA;;AACA,SAAKvC,UAAL,IAAmBgD,qBAAnB;AACA,SAAK7C,QAAL,IAAiB6C,qBAAjB;AACA,SAAK9C,gBAAL,GAAwB,KAAK4C,uBAAL,EAAxB,CAP2D,CAQ3D;AACA;AACA;;AACA,QAAI,KAAK9C,UAAL,IAAmBO,SAAvB,EAAkC;AAC9B,WAAKP,UAAL,GAAkBO,SAAlB;AACA,WAAKJ,QAAL,GAAgB,CAAhB;AACA,WAAKD,gBAAL,GAAyB,aAAzB;AACA;AACH;AACJ;AACD;;;AACAc,EAAAA,yBAAyB,GAAG;AACxB,UAAMR,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,UAAMt2C,KAAK,GAAG,KAAKg4C,aAAL,EAAd;;AACA,UAAMc,WAAW,GAAGzyC,IAAI,CAACwD,GAAL,CAAS7J,KAAK,GAAGq2C,UAAjB,EAA6BzH,uBAA7B,CAApB;AACA,UAAMmK,qBAAqB,GAAG/4C,KAAK,GAAGq2C,UAAtC,CAJwB,CAKxB;;AACA,UAAMD,SAAS,GAAG2C,qBAAqB,GAAGD,WAA1C,CANwB,CAOxB;;AACA,QAAIE,oBAAJ;;AACA,QAAI,KAAK/2D,KAAT,EAAgB;AACZ+2D,MAAAA,oBAAoB,GAAG,CAAvB;AACH,KAFD,MAGK;AACDA,MAAAA,oBAAoB,GAAG3yC,IAAI,CAACxgB,GAAL,CAAS,KAAKtE,OAAL,CAAaghD,OAAb,GAAuBhyC,OAAvB,CAA+B,KAAK8gD,eAAL,CAAqB9tB,QAArB,CAA8B,CAA9B,CAA/B,CAAT,EAA2E,CAA3E,CAAvB;AACH;;AACDy1B,IAAAA,oBAAoB,IAAIzL,qFAA6B,CAACyL,oBAAD,EAAuB,KAAKz3D,OAA5B,EAAqC,KAAKy1D,YAA1C,CAArD,CAfwB,CAgBxB;AACA;;AACA,UAAMb,YAAY,GAAG2C,WAAW,GAAG,CAAnC;AACA,SAAKjD,UAAL,GAAkB,KAAKK,uBAAL,CAA6B8C,oBAA7B,EAAmD7C,YAAnD,EAAiEC,SAAjE,CAAlB;AACA,SAAKJ,QAAL,GAAgB,KAAK0B,wBAAL,CAA8BsB,oBAA9B,EAAoD7C,YAApD,EAAkEC,SAAlE,CAAhB;;AACA,SAAK+B,2BAAL,CAAiC/B,SAAjC;AACH;AACD;;;AACAuC,EAAAA,uBAAuB,GAAG;AACtB,UAAMtC,UAAU,GAAG,KAAKC,cAAL,EAAnB;;AACA,UAAMqB,sBAAsB,GAAG,CAACtB,UAAU,GAAG,KAAKK,YAAL,CAAkBjlD,MAAhC,IAA0C,CAAzE;AACA,UAAM83C,OAAO,GAAGljC,IAAI,CAACioB,GAAL,CAAS,KAAK0nB,QAAd,IAA0B2B,sBAA1B,GAAmDtB,UAAU,GAAG,CAAhF;AACA,WAAQ,OAAM9M,OAAQ,QAAtB;AACH;AACD;;;AACA+M,EAAAA,cAAc,GAAG;AACb,WAAO,KAAKR,gBAAL,GAAwB/G,qBAA/B;AACH;AACD;;;AACAiJ,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAKz2D,OAAL,CAAa7G,MAAb,GAAsB,KAAKs8D,YAAL,CAAkBt8D,MAA/C;AACH;;AAtSkC;;AAwSvCk7D,SAAS,CAACl3D,IAAV;AAAA;AAAA;AAAA,gEA/iCmGlC,mEA+iCnG,CAAsGo5D,SAAtG,SAAsGA,SAAtG;AAAA;AAAA;;AACAA,SAAS,CAAC3xD,IAAV,kBAhjCmGzH,+DAgjCnG;AAAA,QAA0Fo5D,SAA1F;AAAA;AAAA;AAAA;AAhjCmGp5D,MAAAA,4DAgjCnG,WAG0EgzD,kBAH1E;AAhjCmGhzD,MAAAA,4DAgjCnG,WAGyJkxD,6DAHzJ;AAhjCmGlxD,MAAAA,4DAgjCnG,WAGoOmxD,gEAHpO;AAAA;;AAAA;AAAA;;AAhjCmGnxD,MAAAA,4DAgjCnG,MAhjCmGA,yDAgjCnG;AAhjCmGA,MAAAA,4DAgjCnG,MAhjCmGA,yDAgjCnG;AAhjCmGA,MAAAA,4DAgjCnG,MAhjCmGA,yDAgjCnG;AAAA;AAAA;AAAA,sBAAmP,UAAnP,uBAAoR,MAApR,mBAA6S,MAA7S;AAAA;AAAA;AAAA;AAhjCmGA,MAAAA,wDAgjCnG;AAAA,eAA0F,0BAA1F;AAAA;AAAA,eAA0F,cAA1F;AAAA;AAAA,eAA0F,aAA1F;AAAA;AAAA;;AAAA;AAhjCmGA,MAAAA,yDAgjCnG;AAhjCmGA,MAAAA,yDAgjCnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhjCmGA,gEAgjCnG,CAA6jC,CACrjC;AAAE0H,IAAAA,OAAO,EAAE5G,8EAAX;AAAgC6G,IAAAA,WAAW,EAAEyxD;AAA7C,GADqjC,EAErjC;AAAE1xD,IAAAA,OAAO,EAAEupD,+EAAX;AAAwCtpD,IAAAA,WAAW,EAAEyxD;AAArD,GAFqjC,CAA7jC,GAhjCmGp5D,wEAgjCnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhjCmGA,MAAAA,6DAgjCnG;AAhjCmGA,MAAAA,4DAmjCm0B,gBAHt6B;AAhjCmGA,MAAAA,wDAmjCg8B;AAAA,eAAU,YAAV;AAAA,QAHniC;AAhjCmGA,MAAAA,4DAmjC2gC,aAH9mC;AAhjCmGA,MAAAA,wDAmjC6lC,+CAHhsC;AAhjCmGA,MAAAA,wDAmjC2sC,+CAH9yC;AAhjCmGA,MAAAA,0DAmjCm+C,EAHtkD;AAhjCmGA,MAAAA,4DAmjC++C,aAHllD;AAhjCmGA,MAAAA,uDAmjCuhD,aAH1nD;AAhjCmGA,MAAAA,0DAmjC6jD,IAHhqD;AAhjCmGA,MAAAA,wDAmjC+kD,8DAHlrD;AAhjCmGA,MAAAA,wDAmjCwmE;AAAA,eAAkB,WAAlB;AAAA;AAAA,eAA0C,iBAA1C;AAAA;AAAA,eAAwE,WAAxE;AAAA,QAH3sE;AAAA;;AAAA;AAAA,kBAhjCmGA,yDAgjCnG;;AAhjCmGA,MAAAA,yDAmjCi2B,uDAHp8B;AAhjCmGA,MAAAA,uDAmjC2iC,GAH9oC;AAhjCmGA,MAAAA,wDAmjC2iC,uBAH9oC;AAhjCmGA,MAAAA,yDAmjCgkC,oBAHnqC;AAhjCmGA,MAAAA,uDAmjCypC,GAH5vC;AAhjCmGA,MAAAA,wDAmjCypC,sBAH5vC;AAhjCmGA,MAAAA,uDAmjCkvC,GAHr1C;AAhjCmGA,MAAAA,wDAmjCkvC,uBAHr1C;AAhjCmGA,MAAAA,uDAmjCswD,GAHz2D;AAhjCmGA,MAAAA,wDAmjCswD,oXAHz2D;AAAA;AAAA;AAAA,iBAGu3KuB,kEAHv3K,EAG8/KsvD,sDAH9/K,EAGmkLA,0DAHnkL,EAGopLA,6DAHppL,EAGitLtvD,qEAHjtL,EAGspNsvD,qDAHtpN;AAAA;AAAA;AAAA;AAAA,eAGsuN,CAACe,mBAAmB,CAACC,kBAArB,EAAyCD,mBAAmB,CAACG,cAA7D;AAHtuN;AAAA;AAAA;;AAIA;AAAA,qDApjCmG/xD,+DAojCnG,CAA2Fo5D,SAA3F,EAAkH,CAAC;AACvGh3D,IAAAA,IAAI,EAAEjC,oDADiG;AAEvGvC,IAAAA,IAAI,EAAE,CAAC;AAAEyE,MAAAA,QAAQ,EAAE,YAAZ;AAA0B+F,MAAAA,QAAQ,EAAE,WAApC;AAAiDgF,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,eAAb,EAA8B,UAA9B,CAAzD;AAAoGpF,MAAAA,aAAa,EAAE5H,iEAAnH;AAA2I4Q,MAAAA,eAAe,EAAEpG,yEAA5J;AAA4L1C,MAAAA,IAAI,EAAE;AAC7L,gBAAQ,UADqL;AAE7L,6BAAqB,MAFwK;AAG7L;AACA;AACA;AACA,yBAAiB,MAN4K;AAO7L,iBAAS,YAPoL;AAQ7L,qBAAa,IARgL;AAS7L,2BAAmB,UAT0K;AAU7L,gCAAwB,kCAVqK;AAW7L,gCAAwB,WAXqK;AAY7L,6BAAqB,mBAZwK;AAa7L,gCAAwB,qBAbqK;AAc7L,gCAAwB,qBAdqK;AAe7L,+BAAuB,YAfsK;AAgB7L,mCAA2B,0BAhBkK;AAiB7L,wCAAgC,4BAjB6J;AAkB7L,uCAA+B,UAlB8J;AAmB7L,sCAA8B,YAnB+J;AAoB7L,uCAA+B,UApB8J;AAqB7L,oCAA4B,OArBiK;AAsB7L,uCAA+B,UAtB8J;AAuB7L,qBAAa,wBAvBgL;AAwB7L,mBAAW,YAxBkL;AAyB7L,kBAAU;AAzBmL,OAAlM;AA0BImqC,MAAAA,UAAU,EAAE,CAACuf,mBAAmB,CAACC,kBAArB,EAAyCD,mBAAmB,CAACG,cAA7D,CA1BhB;AA0B8F5pD,MAAAA,SAAS,EAAE,CACpG;AAAET,QAAAA,OAAO,EAAE5G,8EAAX;AAAgC6G,QAAAA,WAAW,EAAEyxD;AAA7C,OADoG,EAEpG;AAAE1xD,QAAAA,OAAO,EAAEupD,+EAAX;AAAwCtpD,QAAAA,WAAW,EAAEyxD;AAArD,OAFoG,CA1BzG;AA6BI/wD,MAAAA,QAAQ,EAAE,8tFA7Bd;AA6B8uFC,MAAAA,MAAM,EAAE,CAAC,syEAAD;AA7BtvF,KAAD;AAFiG,GAAD,CAAlH,QAgC4B;AAAEvD,IAAAA,OAAO,EAAE,CAAC;AACxB3C,MAAAA,IAAI,EAAE+I,0DADkB;AAExBvN,MAAAA,IAAI,EAAE,CAACszD,6DAAD,EAAY;AAAEltC,QAAAA,WAAW,EAAE;AAAf,OAAZ;AAFkB,KAAD,CAAX;AAGZw2C,IAAAA,YAAY,EAAE,CAAC;AACfp4D,MAAAA,IAAI,EAAE+I,0DADS;AAEfvN,MAAAA,IAAI,EAAE,CAACuzD,gEAAD,EAAe;AAAEntC,QAAAA,WAAW,EAAE;AAAf,OAAf;AAFS,KAAD,CAHF;AAMZ24C,IAAAA,aAAa,EAAE,CAAC;AAChBv6D,MAAAA,IAAI,EAAE5B,uDADU;AAEhB5C,MAAAA,IAAI,EAAE,CAACo1D,kBAAD;AAFU,KAAD;AANH,GAhC5B;AAAA;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM4J,eAAN,CAAsB;;AAEtBA,eAAe,CAAC16D,IAAhB;AAAA,mBAA4G06D,eAA5G;AAAA;;AACAA,eAAe,CAACh0D,IAAhB,kBAzmCmG5I,8DAymCnG;AAAA,QAA6G48D;AAA7G;AAMAA,eAAe,CAAC/zD,IAAhB,kBA/mCmG7I,8DA+mCnG;AAAA,aAAyI,CAAC6yD,mCAAD,CAAzI;AAAA,YAA0L,CAACrxD,0DAAD,EAAe4+C,+DAAf,EAA8BgR,mEAA9B,EAA+CpmB,mEAA/C,CAA1L,EAA2PqV,wEAA3P,EACQt/C,6EADR,EAEQqwD,mEAFR,EAGQpmB,mEAHR;AAAA;;AAIA;AAAA,qDAnnCmGhrC,+DAmnCnG,CAA2F48D,eAA3F,EAAwH,CAAC;AAC7Gx6D,IAAAA,IAAI,EAAE1B,mDADuG;AAE7G9C,IAAAA,IAAI,EAAE,CAAC;AACCmL,MAAAA,OAAO,EAAE,CAACvH,0DAAD,EAAe4+C,+DAAf,EAA8BgR,mEAA9B,EAA+CpmB,mEAA/C,CADV;AAEChiC,MAAAA,OAAO,EAAE,CACLq3C,wEADK,EAELt/C,6EAFK,EAGLq4D,SAHK,EAILnG,gBAJK,EAKL7B,mEALK,EAMLpmB,mEANK,CAFV;AAUCliC,MAAAA,YAAY,EAAE,CAACswD,SAAD,EAAYnG,gBAAZ,CAVf;AAWC9qD,MAAAA,SAAS,EAAE,CAAC0qD,mCAAD;AAXZ,KAAD;AAFuG,GAAD,CAAxH;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACx1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;;;;;AAGiG7yD,IAAAA,4DA6V3F;AA7V2FA,IAAAA,oDA8VzF;AA9VyFA,IAAAA,0DA+V3F;;;;mBA/V2FA;AAAAA,IAAAA,yDA6VrD;AA7VqDA,IAAAA,uDA8VzF;AA9VyFA,IAAAA,gEA8VzF;;;;;;AA9VyFA,IAAAA,4DAgW3F;AAhW2FA,IAAAA,oDAiWzF;AAjWyFA,IAAAA,0DAkW3F;;;;;mBAlW2FA;AAAAA,IAAAA,yDAgWvD;AAhWuDA,IAAAA,uDAiWzF;AAjWyFA,IAAAA,gEAiWzF;;;;AAnWR,MAAM+8D,cAAN,CAAqB;;AAErBA,cAAc,CAAC76D,IAAf;AAAA,mBAA2G66D,cAA3G;AAAA;;AACAA,cAAc,CAAC56D,IAAf,kBADiGnC,+DACjG;AAAA,QAA+F+8D,cAA/F;AAAA;AAAA,aADiG/8D,gEACjG,CAA6L,CAAC;AAAE0H,IAAAA,OAAO,EAAEwC,6EAAX;AAAoC4N,IAAAA,QAAQ,EAAE3N,kFAA4BA;AAA1E,GAAD,CAA7L;AAAA;;AACA;AAAA,qDAFiGnK,+DAEjG,CAA2F+8D,cAA3F,EAAuH,CAAC;AAC5G36D,IAAAA,IAAI,EAAEnC,oDADsG;AAE5GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,uDADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAEwC,6EAAX;AAAoC4N,QAAAA,QAAQ,EAAE3N,kFAA4BA;AAA1E,OAAD;AAFZ,KAAD;AAFsG,GAAD,CAAvH;AAAA;AAOA;AACA;AACA;;;AACA,MAAM6yD,QAAN,SAAuB1kD,wDAAvB,CAAgC;AAC5B1W,EAAAA,WAAW,GAAG;AACV,UAAM,GAAG6wB,SAAT;AACA;;AACA,SAAK/Y,cAAL,GAAsB,kBAAtB;AACA;;AACA,SAAKC,4BAAL,GAAoC,KAApC;AACH;;AAP2B;;AAShCqjD,QAAQ,CAAC96D,IAAT;AAAA;AAAA;AAAA,8DArBiGlC,mEAqBjG,CAAqGg9D,QAArG,SAAqGA,QAArG;AAAA;AAAA;;AACAA,QAAQ,CAACv1D,IAAT,kBAtBiGzH,+DAsBjG;AAAA,QAAyFg9D,QAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBiGh9D,MAAAA,yDAsBjG;AAAA;AAAA;AAAA;AAAA,aAtBiGA,gEAsBjG,CAA6P,CACrP;AACA;AACA;AAAE0H,IAAAA,OAAO,EAAEwC,6EAAX;AAAoC4N,IAAAA,QAAQ,EAAEzN,kFAA4BA;AAA1E,GAHqP,EAIrP;AAAE3C,IAAAA,OAAO,EAAE4Q,wDAAX;AAAqB3Q,IAAAA,WAAW,EAAEq1D;AAAlC,GAJqP,EAKrP;AAAEt1D,IAAAA,OAAO,EAAEwE,yDAAX;AAAsBvE,IAAAA,WAAW,EAAEq1D;AAAnC,GALqP,EAMrP;AAAEt1D,IAAAA,OAAO,EAAE6G,0EAAX;AAAuCuJ,IAAAA,QAAQ,EAAEtJ,wEAAwBA;AAAzE,GANqP,EAOrP;AACA;AAAE9G,IAAAA,OAAO,EAAEkQ,2EAAX;AAAwCmM,IAAAA,QAAQ,EAAE;AAAlD,GARqP,CAA7P,GAtBiG/jB,wEAsBjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBiGA,MAAAA,6DAsBjG;AAtBiGA,MAAAA,0DA+Bd,GATnF;AAtBiGA,MAAAA,0DA+BkC,MATnI;AAtBiGA,MAAAA,gEA+BwF,wBATzL;AAAA;AAAA;AAAA,iBASs4EiB,+DATt4E,EASm8EA,6DATn8E,EASw/EA,+DATx/E,EASqjFA,+DATrjF;AAAA;AAAA;AAAA;;AAUA;AAAA,qDAhCiGjB,+DAgCjG,CAA2Fg9D,QAA3F,EAAiH,CAAC;AACtG56D,IAAAA,IAAI,EAAEjC,oDADgG;AAEtGvC,IAAAA,IAAI,EAAE,CAAC;AAAEyE,MAAAA,QAAQ,EAAE,6BAAZ;AAA2C+F,MAAAA,QAAQ,EAAE,UAArD;AAAiEC,MAAAA,QAAQ,EAAE+P,kEAA3E;AAA+FlQ,MAAAA,IAAI,EAAE;AAChG,iBAAS,WADuF;AAEhG,0CAAkC;AAF8D,OAArG;AAGIC,MAAAA,SAAS,EAAE,CACV;AACA;AACA;AAAET,QAAAA,OAAO,EAAEwC,6EAAX;AAAoC4N,QAAAA,QAAQ,EAAEzN,kFAA4BA;AAA1E,OAHU,EAIV;AAAE3C,QAAAA,OAAO,EAAE4Q,wDAAX;AAAqB3Q,QAAAA,WAAW,EAAEq1D;AAAlC,OAJU,EAKV;AAAEt1D,QAAAA,OAAO,EAAEwE,yDAAX;AAAsBvE,QAAAA,WAAW,EAAEq1D;AAAnC,OALU,EAMV;AAAEt1D,QAAAA,OAAO,EAAE6G,0EAAX;AAAuCuJ,QAAAA,QAAQ,EAAEtJ,wEAAwBA;AAAzE,OANU,EAOV;AACA;AAAE9G,QAAAA,OAAO,EAAEkQ,2EAAX;AAAwCmM,QAAAA,QAAQ,EAAE;AAAlD,OARU,CAHf;AAYI/b,MAAAA,aAAa,EAAE5H,iEAZnB;AAY2C4Q,MAAAA,eAAe,EAAEpG,0EAZ5D;AAY6FtC,MAAAA,MAAM,EAAE,CAAC,69DAAD;AAZrG,KAAD;AAFgG,GAAD,CAAjH;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAM20D,UAAN,SAAyB7wD,0DAAzB,CAAoC;;AAEpC6wD,UAAU,CAAC/6D,IAAX;AAAA;AAAA;AAAA,kEA9DiGlC,mEA8DjG,CAAuGi9D,UAAvG,SAAuGA,UAAvG;AAAA;AAAA;;AACAA,UAAU,CAAC96D,IAAX,kBA/DiGnC,+DA+DjG;AAAA,QAA2Fi9D,UAA3F;AAAA;AAAA,aA/DiGj9D,gEA+DjG,CAA4I,CAAC;AAAE0H,IAAAA,OAAO,EAAE0E,0DAAX;AAAuBzE,IAAAA,WAAW,EAAEs1D;AAApC,GAAD,CAA5I,GA/DiGj9D,wEA+DjG;AAAA;;AACA;AAAA,qDAhEiGA,+DAgEjG,CAA2Fi9D,UAA3F,EAAmH,CAAC;AACxG76D,IAAAA,IAAI,EAAEnC,oDADkG;AAExGrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,cADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAE0E,0DAAX;AAAuBzE,QAAAA,WAAW,EAAEs1D;AAApC,OAAD;AAFZ,KAAD;AAFkG,GAAD,CAAnH;AAAA;AAOA;AACA;AACA;AACA;;;AACA,MAAMC,gBAAN,SAA+B5wD,gEAA/B,CAAgD;;AAEhD4wD,gBAAgB,CAACh7D,IAAjB;AAAA;AAAA;AAAA,8EA7EiGlC,mEA6EjG,CAA6Gk9D,gBAA7G,SAA6GA,gBAA7G;AAAA;AAAA;;AACAA,gBAAgB,CAAC/6D,IAAjB,kBA9EiGnC,+DA8EjG;AAAA,QAAiGk9D,gBAAjG;AAAA;AAAA,aA9EiGl9D,gEA8EjG,CAA8J,CAAC;AAAE0H,IAAAA,OAAO,EAAE4E,gEAAX;AAA6B3E,IAAAA,WAAW,EAAEu1D;AAA1C,GAAD,CAA9J,GA9EiGl9D,wEA8EjG;AAAA;;AACA;AAAA,qDA/EiGA,+DA+EjG,CAA2Fk9D,gBAA3F,EAAyH,CAAC;AAC9G96D,IAAAA,IAAI,EAAEnC,oDADwG;AAE9GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,oBADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAE4E,gEAAX;AAA6B3E,QAAAA,WAAW,EAAEu1D;AAA1C,OAAD;AAFZ,KAAD;AAFwG,GAAD,CAAzH;AAAA;AAOA;AACA;AACA;AACA;;;AACA,MAAMC,gBAAN,SAA+B5wD,gEAA/B,CAAgD;;AAEhD4wD,gBAAgB,CAACj7D,IAAjB;AAAA;AAAA;AAAA,8EA5FiGlC,mEA4FjG,CAA6Gm9D,gBAA7G,SAA6GA,gBAA7G;AAAA;AAAA;;AACAA,gBAAgB,CAACh7D,IAAjB,kBA7FiGnC,+DA6FjG;AAAA,QAAiGm9D,gBAAjG;AAAA;AAAA,aA7FiGn9D,gEA6FjG,CAA8J,CAAC;AAAE0H,IAAAA,OAAO,EAAE6E,gEAAX;AAA6B5E,IAAAA,WAAW,EAAEw1D;AAA1C,GAAD,CAA9J,GA7FiGn9D,wEA6FjG;AAAA;;AACA;AAAA,qDA9FiGA,+DA8FjG,CAA2Fm9D,gBAA3F,EAAyH,CAAC;AAC9G/6D,IAAAA,IAAI,EAAEnC,oDADwG;AAE9GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,oBADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAE6E,gEAAX;AAA6B5E,QAAAA,WAAW,EAAEw1D;AAA1C,OAAD;AAFZ,KAAD;AAFwG,GAAD,CAAzH;AAAA;AAOA;AACA;AACA;AACA;;;AACA,MAAMC,YAAN,SAA2B1wD,4DAA3B,CAAwC;AACpC;AACQ,MAAJzF,IAAI,GAAG;AACP,WAAO,KAAK4F,KAAZ;AACH;;AACO,MAAJ5F,IAAI,CAACA,IAAD,EAAO;AACX,SAAK6F,aAAL,CAAmB7F,IAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACI+F,EAAAA,yBAAyB,GAAG;AACxB,UAAMA,yBAAN;;AACA,SAAKC,mBAAL,CAAyBxG,IAAzB,CAA+B,cAAa,KAAKyG,oBAAqB,EAAtE;AACH;;AAjBmC;;AAmBxCkwD,YAAY,CAACl7D,IAAb;AAAA;AAAA;AAAA,sEA5HiGlC,mEA4HjG,CAAyGo9D,YAAzG,SAAyGA,YAAzG;AAAA;AAAA;;AACAA,YAAY,CAACj7D,IAAb,kBA7HiGnC,+DA6HjG;AAAA,QAA6Fo9D,YAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA7HiGp9D,gEA6HjG,CAAgN,CACxM;AAAE0H,IAAAA,OAAO,EAAEgF,4DAAX;AAAyB/E,IAAAA,WAAW,EAAEy1D;AAAtC,GADwM,EAExM;AAAE11D,IAAAA,OAAO,EAAE,4BAAX;AAAyCC,IAAAA,WAAW,EAAEy1D;AAAtD,GAFwM,CAAhN,GA7HiGp9D,wEA6HjG;AAAA;;AAIA;AAAA,qDAjIiGA,+DAiIjG,CAA2Fo9D,YAA3F,EAAqH,CAAC;AAC1Gh7D,IAAAA,IAAI,EAAEnC,oDADoG;AAE1GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,gBADX;AAEC+K,MAAAA,MAAM,EAAE,CAAC,QAAD,CAFT;AAGCjF,MAAAA,SAAS,EAAE,CACP;AAAET,QAAAA,OAAO,EAAEgF,4DAAX;AAAyB/E,QAAAA,WAAW,EAAEy1D;AAAtC,OADO,EAEP;AAAE11D,QAAAA,OAAO,EAAE,4BAAX;AAAyCC,QAAAA,WAAW,EAAEy1D;AAAtD,OAFO;AAHZ,KAAD;AAFoG,GAAD,CAArH,QAU4B;AAAEn2D,IAAAA,IAAI,EAAE,CAAC;AACrB7E,MAAAA,IAAI,EAAE3B,gDADe;AAErB7C,MAAAA,IAAI,EAAE,CAAC,cAAD;AAFe,KAAD;AAAR,GAV5B;AAAA;AAcA;;;AACA,MAAMy/D,aAAN,SAA4BzvD,6DAA5B,CAA0C;;AAE1CyvD,aAAa,CAACn7D,IAAd;AAAA;AAAA;AAAA,wEAlJiGlC,mEAkJjG,CAA0Gq9D,aAA1G,SAA0GA,aAA1G;AAAA;AAAA;;AACAA,aAAa,CAACl7D,IAAd,kBAnJiGnC,+DAmJjG;AAAA,QAA8Fq9D,aAA9F;AAAA;AAAA,sBAA6L,cAA7L;AAAA,aAnJiGr9D,wEAmJjG;AAAA;;AACA;AAAA,qDApJiGA,+DAoJjG,CAA2Fq9D,aAA3F,EAAsH,CAAC;AAC3Gj7D,IAAAA,IAAI,EAAEnC,oDADqG;AAE3GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,sCADX;AAEC6F,MAAAA,IAAI,EAAE;AACF,iBAAS,iBADP;AAEF,gBAAQ;AAFN;AAFP,KAAD;AAFqG,GAAD,CAAtH;AAAA;AAUA;;;AACA,MAAMo1D,aAAN,SAA4BzvD,6DAA5B,CAA0C;;AAE1CyvD,aAAa,CAACp7D,IAAd;AAAA;AAAA;AAAA,wEAjKiGlC,mEAiKjG,CAA0Gs9D,aAA1G,SAA0GA,aAA1G;AAAA;AAAA;;AACAA,aAAa,CAACn7D,IAAd,kBAlKiGnC,+DAkKjG;AAAA,QAA8Fs9D,aAA9F;AAAA;AAAA,sBAA6L,UAA7L;AAAA,aAlKiGt9D,wEAkKjG;AAAA;;AACA;AAAA,qDAnKiGA,+DAmKjG,CAA2Fs9D,aAA3F,EAAsH,CAAC;AAC3Gl7D,IAAAA,IAAI,EAAEnC,oDADqG;AAE3GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,sCADX;AAEC6F,MAAAA,IAAI,EAAE;AACF,iBAAS,iBADP;AAEF,gBAAQ;AAFN;AAFP,KAAD;AAFqG,GAAD,CAAtH;AAAA;AAUA;;;AACA,MAAMq1D,OAAN,SAAsBpvD,uDAAtB,CAA8B;;AAE9BovD,OAAO,CAACr7D,IAAR;AAAA;AAAA;AAAA,4DAhLiGlC,mEAgLjG,CAAoGu9D,OAApG,SAAoGA,OAApG;AAAA;AAAA;;AACAA,OAAO,CAACp7D,IAAR,kBAjLiGnC,+DAiLjG;AAAA,QAAwFu9D,OAAxF;AAAA;AAAA,sBAAmK,UAAnK;AAAA,aAjLiGv9D,wEAiLjG;AAAA;;AACA;AAAA,qDAlLiGA,+DAkLjG,CAA2Fu9D,OAA3F,EAAgH,CAAC;AACrGn7D,IAAAA,IAAI,EAAEnC,oDAD+F;AAErGrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,wBADX;AAEC6F,MAAAA,IAAI,EAAE;AACF,iBAAS,UADP;AAEF,gBAAQ;AAFN;AAFP,KAAD;AAF+F,GAAD,CAAhH;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMs1D,eAAN,SAA8BrtD,+DAA9B,CAA8C;;AAE9CqtD,eAAe,CAACt7D,IAAhB;AAAA;AAAA;AAAA,4EA1MiGlC,mEA0MjG,CAA4Gw9D,eAA5G,SAA4GA,eAA5G;AAAA;AAAA;;AACAA,eAAe,CAACr7D,IAAhB,kBA3MiGnC,+DA2MjG;AAAA,QAAgGw9D,eAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA3MiGx9D,gEA2MjG,CAA6P,CAAC;AAAE0H,IAAAA,OAAO,EAAEyI,+DAAX;AAA4BxI,IAAAA,WAAW,EAAE61D;AAAzC,GAAD,CAA7P,GA3MiGx9D,wEA2MjG;AAAA;;AACA;AAAA,qDA5MiGA,+DA4MjG,CAA2Fw9D,eAA3F,EAAwH,CAAC;AAC7Gp7D,IAAAA,IAAI,EAAEnC,oDADuG;AAE7GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,mBADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAEyI,+DAAX;AAA4BxI,QAAAA,WAAW,EAAE61D;AAAzC,OAAD,CAFZ;AAGCpwD,MAAAA,MAAM,EAAE,CAAC,0BAAD,EAA6B,+BAA7B;AAHT,KAAD;AAFuG,GAAD,CAAxH;AAAA;AAQA;AACA;AACA;AACA;;;AACA,MAAMqwD,eAAN,SAA8BrtD,+DAA9B,CAA8C;;AAE9CqtD,eAAe,CAACv7D,IAAhB;AAAA;AAAA;AAAA,4EA1NiGlC,mEA0NjG,CAA4Gy9D,eAA5G,SAA4GA,eAA5G;AAAA;AAAA;;AACAA,eAAe,CAACt7D,IAAhB,kBA3NiGnC,+DA2NjG;AAAA,QAAgGy9D,eAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA3NiGz9D,gEA2NjG,CAA6P,CAAC;AAAE0H,IAAAA,OAAO,EAAE0I,+DAAX;AAA4BzI,IAAAA,WAAW,EAAE81D;AAAzC,GAAD,CAA7P,GA3NiGz9D,wEA2NjG;AAAA;;AACA;AAAA,qDA5NiGA,+DA4NjG,CAA2Fy9D,eAA3F,EAAwH,CAAC;AAC7Gr7D,IAAAA,IAAI,EAAEnC,oDADuG;AAE7GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,mBADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAE0I,+DAAX;AAA4BzI,QAAAA,WAAW,EAAE81D;AAAzC,OAAD,CAFZ;AAGCrwD,MAAAA,MAAM,EAAE,CAAC,0BAAD,EAA6B,+BAA7B;AAHT,KAAD;AAFuG,GAAD,CAAxH;AAAA;AAQA;AACA;AACA;AACA;AACA;;;AACA,MAAMswD,SAAN,SAAwBhtD,yDAAxB,CAAkC;;AAElCgtD,SAAS,CAACx7D,IAAV;AAAA;AAAA;AAAA,gEA3OiGlC,mEA2OjG,CAAsG09D,SAAtG,SAAsGA,SAAtG;AAAA;AAAA;;AACAA,SAAS,CAACv7D,IAAV,kBA5OiGnC,+DA4OjG;AAAA,QAA0F09D,SAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA5OiG19D,gEA4OjG,CAAgO,CAAC;AAAE0H,IAAAA,OAAO,EAAEgJ,yDAAX;AAAsB/I,IAAAA,WAAW,EAAE+1D;AAAnC,GAAD,CAAhO,GA5OiG19D,wEA4OjG;AAAA;;AACA;AAAA,qDA7OiGA,+DA6OjG,CAA2F09D,SAA3F,EAAkH,CAAC;AACvGt7D,IAAAA,IAAI,EAAEnC,oDADiG;AAEvGrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,aADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAEgJ,yDAAX;AAAsB/I,QAAAA,WAAW,EAAE+1D;AAAnC,OAAD,CAFZ;AAGCtwD,MAAAA,MAAM,EAAE,CAAC,2BAAD,EAA8B,qBAA9B;AAHT,KAAD;AAFiG,GAAD,CAAlH;AAAA;AAQA;;;AACA,MAAMuwD,YAAN,SAA2B5sD,4DAA3B,CAAwC;;AAExC4sD,YAAY,CAACz7D,IAAb;AAAA;AAAA;AAAA,sEAxPiGlC,mEAwPjG,CAAyG29D,YAAzG,SAAyGA,YAAzG;AAAA;AAAA;;AACAA,YAAY,CAACl2D,IAAb,kBAzPiGzH,+DAyPjG;AAAA,QAA6F29D,YAA7F;AAAA;AAAA,sBAAyL,KAAzL;AAAA;AAAA,aAzPiG39D,gEAyPjG,CAAiP,CAAC;AAAE0H,IAAAA,OAAO,EAAEqJ,4DAAX;AAAyBpJ,IAAAA,WAAW,EAAEg2D;AAAtC,GAAD,CAAjP,GAzPiG39D,wEAyPjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAzPiGA,MAAAA,gEAyPoR,MAArX;AAAA;AAAA;AAAA,iBAAwciB,6DAAxc;AAAA;AAAA;;AACA;AAAA,qDA1PiGjB,+DA0PjG,CAA2F29D,YAA3F,EAAqH,CAAC;AAC1Gv7D,IAAAA,IAAI,EAAEjC,oDADoG;AAE1GvC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,oCADX;AAECgG,MAAAA,QAAQ,EAAEiH,gEAFX;AAGCpH,MAAAA,IAAI,EAAE;AACF,iBAAS,gBADP;AAEF,gBAAQ;AAFN,OAHP;AAOC;AACA;AACA8I,MAAAA,eAAe,EAAEpG,0EATlB;AAUC5C,MAAAA,aAAa,EAAE5H,iEAVhB;AAWCgI,MAAAA,QAAQ,EAAE,cAXX;AAYCD,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAEqJ,4DAAX;AAAyBpJ,QAAAA,WAAW,EAAEg2D;AAAtC,OAAD;AAZZ,KAAD;AAFoG,GAAD,CAArH;AAAA;AAiBA;;;AACA,MAAMC,YAAN,SAA2B1sD,4DAA3B,CAAwC;;AAExC0sD,YAAY,CAAC17D,IAAb;AAAA;AAAA;AAAA,sEA9QiGlC,mEA8QjG,CAAyG49D,YAAzG,SAAyGA,YAAzG;AAAA;AAAA;;AACAA,YAAY,CAACn2D,IAAb,kBA/QiGzH,+DA+QjG;AAAA,QAA6F49D,YAA7F;AAAA;AAAA,sBAAyL,KAAzL;AAAA;AAAA,aA/QiG59D,gEA+QjG,CAAiP,CAAC;AAAE0H,IAAAA,OAAO,EAAEwJ,4DAAX;AAAyBvJ,IAAAA,WAAW,EAAEi2D;AAAtC,GAAD,CAAjP,GA/QiG59D,wEA+QjG;AAAA;AAAA;AAAA;AAAA;AAAA;AA/QiGA,MAAAA,gEA+QoR,MAArX;AAAA;AAAA;AAAA,iBAAwciB,6DAAxc;AAAA;AAAA;;AACA;AAAA,qDAhRiGjB,+DAgRjG,CAA2F49D,YAA3F,EAAqH,CAAC;AAC1Gx7D,IAAAA,IAAI,EAAEjC,oDADoG;AAE1GvC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,oCADX;AAECgG,MAAAA,QAAQ,EAAEiH,gEAFX;AAGCpH,MAAAA,IAAI,EAAE;AACF,iBAAS,gBADP;AAEF,gBAAQ;AAFN,OAHP;AAOC;AACA;AACA8I,MAAAA,eAAe,EAAEpG,0EATlB;AAUC5C,MAAAA,aAAa,EAAE5H,iEAVhB;AAWCgI,MAAAA,QAAQ,EAAE,cAXX;AAYCD,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAEwJ,4DAAX;AAAyBvJ,QAAAA,WAAW,EAAEi2D;AAAtC,OAAD;AAZZ,KAAD;AAFoG,GAAD,CAArH;AAAA;AAiBA;;;AACA,MAAMC,MAAN,SAAqB1sD,sDAArB,CAA4B;;AAE5B0sD,MAAM,CAAC37D,IAAP;AAAA;AAAA;AAAA,0DApSiGlC,mEAoSjG,CAAmG69D,MAAnG,SAAmGA,MAAnG;AAAA;AAAA;;AACAA,MAAM,CAACp2D,IAAP,kBArSiGzH,+DAqSjG;AAAA,QAAuF69D,MAAvF;AAAA;AAAA,sBAA+J,KAA/J;AAAA;AAAA,aArSiG79D,gEAqSjG,CAAgN,CAAC;AAAE0H,IAAAA,OAAO,EAAEyJ,sDAAX;AAAmBxJ,IAAAA,WAAW,EAAEk2D;AAAhC,GAAD,CAAhN,GArSiG79D,wEAqSjG;AAAA;AAAA;AAAA;AAAA;AAAA;AArSiGA,MAAAA,gEAqSiO,MAAlU;AAAA;AAAA;AAAA,iBAAqZiB,6DAArZ;AAAA;AAAA;;AACA;AAAA,qDAtSiGjB,+DAsSjG,CAA2F69D,MAA3F,EAA+G,CAAC;AACpGz7D,IAAAA,IAAI,EAAEjC,oDAD8F;AAEpGvC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,sBADX;AAECgG,MAAAA,QAAQ,EAAEiH,gEAFX;AAGCpH,MAAAA,IAAI,EAAE;AACF,iBAAS,SADP;AAEF,gBAAQ;AAFN,OAHP;AAOC;AACA;AACA8I,MAAAA,eAAe,EAAEpG,0EATlB;AAUC5C,MAAAA,aAAa,EAAE5H,iEAVhB;AAWCgI,MAAAA,QAAQ,EAAE,QAXX;AAYCD,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAEyJ,sDAAX;AAAmBxJ,QAAAA,WAAW,EAAEk2D;AAAhC,OAAD;AAZZ,KAAD;AAF8F,GAAD,CAA/G;AAAA;AAiBA;;;AACA,MAAMC,YAAN,SAA2B1sD,4DAA3B,CAAwC;AACpCxP,EAAAA,WAAW,GAAG;AACV,UAAM,GAAG6wB,SAAT;AACA,SAAKnhB,iBAAL,GAAyB,iBAAzB;AACH;;AAJmC;;AAMxCwsD,YAAY,CAAC57D,IAAb;AAAA;AAAA;AAAA,sEA9TiGlC,mEA8TjG,CAAyG89D,YAAzG,SAAyGA,YAAzG;AAAA;AAAA;;AACAA,YAAY,CAAC37D,IAAb,kBA/TiGnC,+DA+TjG;AAAA,QAA6F89D,YAA7F;AAAA;AAAA,aA/TiG99D,gEA+TjG,CAA6J,CAAC;AAAE0H,IAAAA,OAAO,EAAE0J,4DAAX;AAAyBzJ,IAAAA,WAAW,EAAEm2D;AAAtC,GAAD,CAA7J,GA/TiG99D,wEA+TjG;AAAA;;AACA;AAAA,qDAhUiGA,+DAgUjG,CAA2F89D,YAA3F,EAAqH,CAAC;AAC1G17D,IAAAA,IAAI,EAAEnC,oDADoG;AAE1GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,2BADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAE0J,4DAAX;AAAyBzJ,QAAAA,WAAW,EAAEm2D;AAAtC,OAAD;AAFZ,KAAD;AAFoG,GAAD,CAArH;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,aAAN,SAA4B75C,6DAA5B,CAA0C;;AAE1C65C,aAAa,CAAC77D,IAAd;AAAA;AAAA;AAAA,wEA1ViGlC,mEA0VjG,CAA0G+9D,aAA1G,SAA0GA,aAA1G;AAAA;AAAA;;AACAA,aAAa,CAACt2D,IAAd,kBA3ViGzH,+DA2VjG;AAAA,QAA8F+9D,aAA9F;AAAA;AAAA,aA3ViG/9D,wEA2VjG;AAAA;AAAA;AAAA;AAAA;AAAA;AA3ViGA,MAAAA,qEA4V7F,MADJ;AA3ViGA,MAAAA,wDA6V3F,+CAFN;AA3ViGA,MAAAA,wDAgW3F,+CALN;AA3ViGA,MAAAA,mEAmW7F,EARJ;AAAA;AAAA;AAAA,iBAS0Co9D,YAT1C,EASkIF,gBATlI,EAS8LG,aAT9L,EASyQJ,UATzQ,EASyTM,OATzT;AAAA;AAAA;;AAUA;AAAA,qDArWiGv9D,+DAqWjG,CAA2F+9D,aAA3F,EAAsH,CAAC;AAC3G37D,IAAAA,IAAI,EAAEjC,oDADqG;AAE3GvC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,iBADX;AAECgG,MAAAA,QAAQ,EAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAXmB;AAYCL,MAAAA,aAAa,EAAE5H,iEAZhB;AAaC;AACA;AACA;AACA;AACA;AACA;AACA4Q,MAAAA,eAAe,EAAEpG,0EAA+BqG;AAnBjD,KAAD;AAFqG,GAAD,CAAtH;AAAA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM2T,qBAAqB,GAAG,CAC1B;AACAo4C,QAF0B,EAG1BD,cAH0B,EAI1B;AACAG,gBAL0B,EAM1BM,eAN0B,EAO1BJ,YAP0B,EAQ1BH,UAR0B,EAS1BS,SAT0B,EAU1BP,gBAV0B,EAW1BM,eAX0B,EAY1B;AACAJ,aAb0B,EAc1BE,OAd0B,EAe1BD,aAf0B,EAgB1B;AACAK,YAjB0B,EAkB1BE,MAlB0B,EAmB1BD,YAnB0B,EAoB1BE,YApB0B,EAqB1BC,aArB0B,CAA9B;;AAuBA,MAAMC,cAAN,CAAqB;;AAErBA,cAAc,CAAC97D,IAAf;AAAA,mBAA2G87D,cAA3G;AAAA;;AACAA,cAAc,CAACp1D,IAAf,kBA/ZiG5I,8DA+ZjG;AAAA,QAA4Gg+D;AAA5G;AA2CAA,cAAc,CAACn1D,IAAf,kBA1ciG7I,8DA0cjG;AAAA,YAAsI,CAAC6kB,8DAAD,EAAiBmmB,mEAAjB,CAAtI,EAAyKA,mEAAzK;AAAA;;AACA;AAAA,qDA3ciGhrC,+DA2cjG,CAA2Fg+D,cAA3F,EAAuH,CAAC;AAC5G57D,IAAAA,IAAI,EAAE1B,mDADsG;AAE5G9C,IAAAA,IAAI,EAAE,CAAC;AACCmL,MAAAA,OAAO,EAAE,CAAC8b,8DAAD,EAAiBmmB,mEAAjB,CADV;AAEChiC,MAAAA,OAAO,EAAE,CAACgiC,mEAAD,EAAkBpmB,qBAAlB,CAFV;AAGC9b,MAAAA,YAAY,EAAE8b;AAHf,KAAD;AAFsG,GAAD,CAAvH;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMq5C,gBAAgB,GAAG,gBAAzB;AACA;;AACA,MAAMC,mBAAN,SAAkC5zD,gEAAlC,CAA6C;AACzC1I,EAAAA,WAAW,CAACu8D,WAAW,GAAG,EAAf,EAAmB;AAC1B;AACA;;AACA,SAAKC,WAAL,GAAmB,IAAI/yD,iDAAJ,CAAoB,EAApB,CAAnB;AACA;;AACA,SAAKgzD,OAAL,GAAe,IAAIhzD,iDAAJ,CAAoB,EAApB,CAAf;AACA;;AACA,SAAKizD,oBAAL,GAA4B,IAAIt9D,yCAAJ,EAA5B;AACA;AACR;AACA;AACA;;AACQ,SAAKu9D,0BAAL,GAAkC,IAAlC;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,SAAKC,mBAAL,GAA2B,CAACnnD,IAAD,EAAOonD,YAAP,KAAwB;AAC/C,YAAM9/D,KAAK,GAAG0Y,IAAI,CAAConD,YAAD,CAAlB;;AACA,UAAI5B,qEAAc,CAACl+D,KAAD,CAAlB,EAA2B;AACvB,cAAM+/D,WAAW,GAAGn1D,MAAM,CAAC5K,KAAD,CAA1B,CADuB,CAEvB;AACA;;AACA,eAAO+/D,WAAW,GAAGT,gBAAd,GAAiCS,WAAjC,GAA+C//D,KAAtD;AACH;;AACD,aAAOA,KAAP;AACH,KATD;AAUA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ,SAAKggE,QAAL,GAAgB,CAACtnD,IAAD,EAAOqhD,IAAP,KAAgB;AAC5B,YAAMjL,MAAM,GAAGiL,IAAI,CAACjL,MAApB;AACA,YAAM97C,SAAS,GAAG+mD,IAAI,CAAC/mD,SAAvB;;AACA,UAAI,CAAC87C,MAAD,IAAW97C,SAAS,IAAI,EAA5B,EAAgC;AAC5B,eAAO0F,IAAP;AACH;;AACD,aAAOA,IAAI,CAACqhD,IAAL,CAAU,CAAChvD,CAAD,EAAIC,CAAJ,KAAU;AACvB,YAAIi1D,MAAM,GAAG,KAAKJ,mBAAL,CAAyB90D,CAAzB,EAA4B+jD,MAA5B,CAAb;AACA,YAAIoR,MAAM,GAAG,KAAKL,mBAAL,CAAyB70D,CAAzB,EAA4B8jD,MAA5B,CAAb,CAFuB,CAGvB;AACA;AACA;;AACA,cAAMqR,UAAU,GAAG,OAAOF,MAA1B;AACA,cAAMG,UAAU,GAAG,OAAOF,MAA1B;;AACA,YAAIC,UAAU,KAAKC,UAAnB,EAA+B;AAC3B,cAAID,UAAU,KAAK,QAAnB,EAA6B;AACzBF,YAAAA,MAAM,IAAI,EAAV;AACH;;AACD,cAAIG,UAAU,KAAK,QAAnB,EAA6B;AACzBF,YAAAA,MAAM,IAAI,EAAV;AACH;AACJ,SAfsB,CAgBvB;AACA;AACA;AACA;;;AACA,YAAIG,gBAAgB,GAAG,CAAvB;;AACA,YAAIJ,MAAM,IAAI,IAAV,IAAkBC,MAAM,IAAI,IAAhC,EAAsC;AAClC;AACA,cAAID,MAAM,GAAGC,MAAb,EAAqB;AACjBG,YAAAA,gBAAgB,GAAG,CAAnB;AACH,WAFD,MAGK,IAAIJ,MAAM,GAAGC,MAAb,EAAqB;AACtBG,YAAAA,gBAAgB,GAAG,CAAC,CAApB;AACH;AACJ,SARD,MASK,IAAIJ,MAAM,IAAI,IAAd,EAAoB;AACrBI,UAAAA,gBAAgB,GAAG,CAAnB;AACH,SAFI,MAGA,IAAIH,MAAM,IAAI,IAAd,EAAoB;AACrBG,UAAAA,gBAAgB,GAAG,CAAC,CAApB;AACH;;AACD,eAAOA,gBAAgB,IAAIrtD,SAAS,IAAI,KAAb,GAAqB,CAArB,GAAyB,CAAC,CAA9B,CAAvB;AACH,OArCM,CAAP;AAsCH,KA5CD;AA6CA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACQ,SAAKstD,eAAL,GAAuB,CAAC5nD,IAAD,EAAO2J,MAAP,KAAkB;AACrC;AACA,YAAMk+C,OAAO,GAAG3vC,MAAM,CAACxxB,IAAP,CAAYsZ,IAAZ,EACXvN,MADW,CACJ,CAACq1D,WAAD,EAAc3zC,GAAd,KAAsB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,eAAO2zC,WAAW,GAAG9nD,IAAI,CAACmU,GAAD,CAAlB,GAA0B,GAAjC;AACH,OATe,EASb,EATa,EAUXa,WAVW,EAAhB,CAFqC,CAarC;;AACA,YAAM+yC,iBAAiB,GAAGp+C,MAAM,CAAC+vB,IAAP,GAAc1kB,WAAd,EAA1B;AACA,aAAO6yC,OAAO,CAACnrD,OAAR,CAAgBqrD,iBAAhB,KAAsC,CAAC,CAA9C;AACH,KAhBD;;AAiBA,SAAKz/C,KAAL,GAAa,IAAItU,iDAAJ,CAAoB8yD,WAApB,CAAb;;AACA,SAAKkB,yBAAL;AACH;AACD;;;AACQ,MAAJhoD,IAAI,GAAG;AACP,WAAO,KAAKsI,KAAL,CAAWhhB,KAAlB;AACH;;AACO,MAAJ0Y,IAAI,CAACA,IAAD,EAAO;AACXA,IAAAA,IAAI,GAAGhZ,KAAK,CAACyI,OAAN,CAAcuQ,IAAd,IAAsBA,IAAtB,GAA6B,EAApC;;AACA,SAAKsI,KAAL,CAAW9gB,IAAX,CAAgBwY,IAAhB,EAFW,CAGX;AACA;;;AACA,QAAI,CAAC,KAAKknD,0BAAV,EAAsC;AAClC,WAAKe,WAAL,CAAiBjoD,IAAjB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACc,MAAN2J,MAAM,GAAG;AACT,WAAO,KAAKq9C,OAAL,CAAa1/D,KAApB;AACH;;AACS,MAANqiB,MAAM,CAACA,MAAD,EAAS;AACf,SAAKq9C,OAAL,CAAax/D,IAAb,CAAkBmiB,MAAlB,EADe,CAEf;AACA;;;AACA,QAAI,CAAC,KAAKu9C,0BAAV,EAAsC;AAClC,WAAKe,WAAL,CAAiB,KAAKjoD,IAAtB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACY,MAAJqhD,IAAI,GAAG;AACP,WAAO,KAAK6G,KAAZ;AACH;;AACO,MAAJ7G,IAAI,CAACA,IAAD,EAAO;AACX,SAAK6G,KAAL,GAAa7G,IAAb;;AACA,SAAK2G,yBAAL;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACiB,MAATG,SAAS,GAAG;AACZ,WAAO,KAAKC,UAAZ;AACH;;AACY,MAATD,SAAS,CAACA,SAAD,EAAY;AACrB,SAAKC,UAAL,GAAkBD,SAAlB;;AACA,SAAKH,yBAAL;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIA,EAAAA,yBAAyB,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,UAAMK,UAAU,GAAG,KAAKH,KAAL,GACbt0B,2CAAK,CAAC,KAAKs0B,KAAL,CAAWG,UAAZ,EAAwB,KAAKH,KAAL,CAAWI,WAAnC,CADQ,GAEbp0D,wCAAE,CAAC,IAAD,CAFR;AAGA,UAAMq0D,UAAU,GAAG,KAAKH,UAAL,GACbx0B,2CAAK,CAAC,KAAKw0B,UAAL,CAAgBI,IAAjB,EAAuB,KAAKvB,oBAA5B,EAAkD,KAAKmB,UAAL,CAAgBE,WAAlE,CADQ,GAEbp0D,wCAAE,CAAC,IAAD,CAFR;AAGA,UAAMiW,UAAU,GAAG,KAAK7B,KAAxB,CAbwB,CAcxB;;AACA,UAAMmgD,YAAY,GAAGhD,mDAAa,CAAC,CAACt7C,UAAD,EAAa,KAAK68C,OAAlB,CAAD,CAAb,CAA0Cv/D,IAA1C,CAA+CiI,oDAAG,CAAC,CAAC,CAACsQ,IAAD,CAAD,KAAY,KAAKioD,WAAL,CAAiBjoD,IAAjB,CAAb,CAAlD,CAArB,CAfwB,CAgBxB;;AACA,UAAM0oD,WAAW,GAAGjD,mDAAa,CAAC,CAACgD,YAAD,EAAeJ,UAAf,CAAD,CAAb,CAA0C5gE,IAA1C,CAA+CiI,oDAAG,CAAC,CAAC,CAACsQ,IAAD,CAAD,KAAY,KAAK2oD,UAAL,CAAgB3oD,IAAhB,CAAb,CAAlD,CAApB,CAjBwB,CAkBxB;;AACA,UAAM4oD,aAAa,GAAGnD,mDAAa,CAAC,CAACiD,WAAD,EAAcH,UAAd,CAAD,CAAb,CAAyC9gE,IAAzC,CAA8CiI,oDAAG,CAAC,CAAC,CAACsQ,IAAD,CAAD,KAAY,KAAK6oD,SAAL,CAAe7oD,IAAf,CAAb,CAAjD,CAAtB,CAnBwB,CAoBxB;;AACA,SAAKknD,0BAAL,EAAiCh9C,WAAjC;AACA,SAAKg9C,0BAAL,GAAkC0B,aAAa,CAACvhE,SAAd,CAAwB2Y,IAAI,IAAI,KAAK+mD,WAAL,CAAiBv/D,IAAjB,CAAsBwY,IAAtB,CAAhC,CAAlC;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIioD,EAAAA,WAAW,CAACjoD,IAAD,EAAO;AACd;AACA;AACA;AACA,SAAKyoD,YAAL,GACI,KAAK9+C,MAAL,IAAe,IAAf,IAAuB,KAAKA,MAAL,KAAgB,EAAvC,GACM3J,IADN,GAEMA,IAAI,CAAC2J,MAAL,CAAYm/C,GAAG,IAAI,KAAKlB,eAAL,CAAqBkB,GAArB,EAA0B,KAAKn/C,MAA/B,CAAnB,CAHV;;AAIA,QAAI,KAAKw+C,SAAT,EAAoB;AAChB,WAAKY,gBAAL,CAAsB,KAAKN,YAAL,CAAkB5hE,MAAxC;AACH;;AACD,WAAO,KAAK4hE,YAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIE,EAAAA,UAAU,CAAC3oD,IAAD,EAAO;AACb;AACA,QAAI,CAAC,KAAKqhD,IAAV,EAAgB;AACZ,aAAOrhD,IAAP;AACH;;AACD,WAAO,KAAKsnD,QAAL,CAActnD,IAAI,CAACjD,KAAL,EAAd,EAA4B,KAAKskD,IAAjC,CAAP;AACH;AACD;AACJ;AACA;AACA;;;AACIwH,EAAAA,SAAS,CAAC7oD,IAAD,EAAO;AACZ,QAAI,CAAC,KAAKmoD,SAAV,EAAqB;AACjB,aAAOnoD,IAAP;AACH;;AACD,UAAMgpD,UAAU,GAAG,KAAKb,SAAL,CAAec,SAAf,GAA2B,KAAKd,SAAL,CAAee,QAA7D;AACA,WAAOlpD,IAAI,CAACjD,KAAL,CAAWisD,UAAX,EAAuBA,UAAU,GAAG,KAAKb,SAAL,CAAee,QAAnD,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIH,EAAAA,gBAAgB,CAACI,kBAAD,EAAqB;AACjCtxD,IAAAA,OAAO,CAACC,OAAR,GAAkB+vB,IAAlB,CAAuB,MAAM;AACzB,YAAMsgC,SAAS,GAAG,KAAKA,SAAvB;;AACA,UAAI,CAACA,SAAL,EAAgB;AACZ;AACH;;AACDA,MAAAA,SAAS,CAACthE,MAAV,GAAmBsiE,kBAAnB,CALyB,CAMzB;;AACA,UAAIhB,SAAS,CAACc,SAAV,GAAsB,CAA1B,EAA6B;AACzB,cAAMG,aAAa,GAAG52C,IAAI,CAAC62C,IAAL,CAAUlB,SAAS,CAACthE,MAAV,GAAmBshE,SAAS,CAACe,QAAvC,IAAmD,CAAnD,IAAwD,CAA9E;AACA,cAAMI,YAAY,GAAG92C,IAAI,CAACwD,GAAL,CAASmyC,SAAS,CAACc,SAAnB,EAA8BG,aAA9B,CAArB;;AACA,YAAIE,YAAY,KAAKnB,SAAS,CAACc,SAA/B,EAA0C;AACtCd,UAAAA,SAAS,CAACc,SAAV,GAAsBK,YAAtB,CADsC,CAEtC;AACA;;AACA,eAAKrC,oBAAL,CAA0Bz/D,IAA1B;AACH;AACJ;AACJ,KAjBD;AAkBH;AACD;AACJ;AACA;AACA;;;AACI4iB,EAAAA,OAAO,GAAG;AACN,QAAI,CAAC,KAAK88C,0BAAV,EAAsC;AAClC,WAAKc,yBAAL;AACH;;AACD,WAAO,KAAKjB,WAAZ;AACH;AACD;AACJ;AACA;AACA;;;AACIxhD,EAAAA,UAAU,GAAG;AACT,SAAK2hD,0BAAL,EAAiCh9C,WAAjC;AACA,SAAKg9C,0BAAL,GAAkC,IAAlC;AACH;;AA7RwC;AA+R7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMqC,kBAAN,SAAiC1C,mBAAjC,CAAqD;AAGrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;AAkD4Fl+D,IAAAA,0DA2K28B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA3K38BA,IAAAA,wDAi6CqpD;;;;mBAj6CrpDA;AAAAA,IAAAA,wDAi6CkqD;;;;;;AAj6ClqDA,IAAAA,oDAi6Ck2D;;;;mBAj6Cl2DA;AAAAA,IAAAA,+DAi6Ck2D;;;;;;iBAj6Cl2DA;;AAAAA,IAAAA,4DAi6C6kB;AAj6C7kBA,IAAAA,wDAi6Cm3C;AAAA,0BAj6Cn3CA,2DAi6Cm3C;AAAA;AAAA;AAAA,sBAj6Cn3CA,2DAi6Cm3C;;AAAA,kBAj6Cn3CA,yDAi6Cm3C;;AAAA,aAj6Cn3CA,yDAi6C63C,yCAAV;AAAA;AAAA,0BAj6Cn3CA,2DAi6Cm3C;AAAA;AAAA,sBAj6Cn3CA,2DAi6Cm3C;AAAA,aAj6Cn3CA,yDAi6C07C,wCAAvE;AAAA;AAj6Cn3CA,IAAAA,4DAi6Ck+C;AAj6Cl+CA,IAAAA,wDAi6CqkD;AAj6CrkDA,IAAAA,wDAi6Cu0D,4EAj6Cv0DA,oEAi6Cu0D;AAj6Cv0DA,IAAAA,0DAi6Cu4D;;;;;;;gBAj6Cv4DA;;mBAAAA;AAAAA,IAAAA,yDAi6C+qC;AAj6C/qCA,IAAAA,wDAi6CmwB;AAj6CnwBA,IAAAA,yDAi6CsyB;AAj6CtyBA,IAAAA,uDAi6CklD;AAj6CllDA,IAAAA,wDAi6CklD;;;;;;iBAj6CllDA;;AAAAA,IAAAA,4DAi6CujE;AAj6CvjEA,IAAAA,wDAi6CoqF;AAj6CpqFA,MAAAA,2DAi6CoqF;AAAA,sBAj6CpqFA,2DAi6CoqF;AAAA,aAj6CpqFA,yDAi6CorF,uCAAhB;AAAA;AAj6CpqFA,MAAAA,2DAi6CoqF;AAAA,sBAj6CpqFA,2DAi6CoqF;AAAA,aAj6CpqFA,yDAi6CqvF,0CAAjF;AAAA;AAj6CpqFA,IAAAA,0DAi6C4xF;;;;;;mBAj6C5xFA;AAAAA,IAAAA,yDAi6C03E;AAj6C13EA,IAAAA,wDAi6CkqE;AAj6ClqEA,IAAAA,yDAi6C+sE;;;;;;AAl9C3yE,MAAMohE,uBAAuB,GAAG,IAAI32D,yDAAJ,CAAmB,qBAAnB,EAA0C;AACtEgc,EAAAA,UAAU,EAAE,MAD0D;AAEtEmzB,EAAAA,OAAO,EAAEynB;AAF6D,CAA1C,CAAhC;AAIA;AACA;AACA;AACA;;;AACA,SAASA,+BAAT,GAA2C;AACvC,QAAMC,MAAM,GAAI7uD,OAAD,KAAc;AACzBiE,IAAAA,IAAI,EAAEjE,OAAO,GAAG,CAACA,OAAO,CAAC8uD,UAAR,IAAsB,CAAvB,IAA4B,IAA/B,GAAsC,GAD1B;AAEzBltD,IAAAA,KAAK,EAAE5B,OAAO,GAAG,CAACA,OAAO,CAACo/B,WAAR,IAAuB,CAAxB,IAA6B,IAAhC,GAAuC;AAF5B,GAAd,CAAf;;AAIA,SAAOyvB,MAAP;AACH;AACD;AACA;AACA;AACA;;;AACA,MAAME,SAAN,CAAgB;AACZ5/D,EAAAA,WAAW,CAACW,WAAD,EAAckM,OAAd,EAAuBgzD,iBAAvB,EAA0Cv0B,cAA1C,EAA0D;AACjE,SAAK3qC,WAAL,GAAmBA,WAAnB;AACA,SAAKkM,OAAL,GAAeA,OAAf;AACA,SAAKgzD,iBAAL,GAAyBA,iBAAzB;AACA,SAAKv0B,cAAL,GAAsBA,cAAtB;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACIw0B,EAAAA,cAAc,CAACjvD,OAAD,EAAU;AACpB,SAAKkvD,IAAL;;AACA,SAAKlzD,OAAL,CAAaW,QAAb,CAAsBtQ,IAAtB,CAA2BS,oDAAI,CAAC,CAAD,CAA/B,EAAoCb,SAApC,CAA8C,MAAM;AAChD,YAAMoY,SAAS,GAAG,KAAK2qD,iBAAL,CAAuBhvD,OAAvB,CAAlB;;AACA,YAAMmvD,MAAM,GAAG,KAAKr/D,WAAL,CAAiB0C,aAAhC;AACA28D,MAAAA,MAAM,CAAC7rD,KAAP,CAAaW,IAAb,GAAoBI,SAAS,CAACJ,IAA9B;AACAkrD,MAAAA,MAAM,CAAC7rD,KAAP,CAAa1B,KAAb,GAAqByC,SAAS,CAACzC,KAA/B;AACH,KALD;AAMH;AACD;;;AACAstD,EAAAA,IAAI,GAAG;AACH,SAAKp/D,WAAL,CAAiB0C,aAAjB,CAA+B8Q,KAA/B,CAAqC6S,UAArC,GAAkD,SAAlD;AACH;AACD;;;AACAi5C,EAAAA,IAAI,GAAG;AACH,SAAKt/D,WAAL,CAAiB0C,aAAjB,CAA+B8Q,KAA/B,CAAqC6S,UAArC,GAAkD,QAAlD;AACH;;AA5BW;;AA8BhB44C,SAAS,CAACt/D,IAAV;AAAA,mBAAsGs/D,SAAtG,EAA4FxhE,+DAA5F,CAAiIA,qDAAjI,GAA4FA,+DAA5F,CAA2JA,iDAA3J,GAA4FA,+DAA5F,CAAiLohE,uBAAjL,GAA4FphE,+DAA5F,CAAqNsrC,gEAArN;AAAA;;AACAk2B,SAAS,CAACr/D,IAAV,kBAD4FnC,+DAC5F;AAAA,QAA0FwhE,SAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAD4FxhE,MAAAA,yDAC5F;AAAA;AAAA;AAAA;;AACA;AAAA,qDAF4FA,+DAE5F,CAA2FwhE,SAA3F,EAAkH,CAAC;AACvGp/D,IAAAA,IAAI,EAAEnC,oDADiG;AAEvGrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,aADX;AAEC6F,MAAAA,IAAI,EAAE;AACF,iBAAS,aADP;AAEF,2CAAoC;AAFlC;AAFP,KAAD;AAFiG,GAAD,CAAlH,EAS4B,YAAY;AAAE,WAAO,CAAC;AAAE9F,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAA1B,EAA+C;AAAE3I,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC5GnG,QAAAA,IAAI,EAAEsI,iDADsG;AAE5G9M,QAAAA,IAAI,EAAE,CAACwjE,uBAAD;AAFsG,OAAD;AAA/B,KAA/C,EAG3B;AAAEh/D,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADoB,OAAD,EAElC;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC0tC,gEAAD;AAFP,OAFkC;AAA/B,KAH2B,CAAP;AAQlB,GAjBxB;AAAA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMw2B,eAAe,GAAG,IAAIr3D,yDAAJ,CAAmB,eAAnB,CAAxB;AACA;;AACA,MAAMs3D,aAAN,CAAoB;AAChBngE,EAAAA,WAAW;AAAC;AAA4ByG,EAAAA,QAA7B,EAAuC;AAC9C,SAAKA,QAAL,GAAgBA,QAAhB;AACH;;AAHe;;AAKpB05D,aAAa,CAAC7/D,IAAd;AAAA,mBAA0G6/D,aAA1G,EAxC4F/hE,+DAwC5F,CAAyIA,sDAAzI;AAAA;;AACA+hE,aAAa,CAAC5/D,IAAd,kBAzC4FnC,+DAyC5F;AAAA,QAA8F+hE,aAA9F;AAAA;AAAA,aAzC4F/hE,gEAyC5F,CAAqJ,CAAC;AAAE0H,IAAAA,OAAO,EAAEo6D,eAAX;AAA4Bn6D,IAAAA,WAAW,EAAEo6D;AAAzC,GAAD,CAArJ;AAAA;;AACA;AAAA,qDA1C4F/hE,+DA0C5F,CAA2F+hE,aAA3F,EAAsH,CAAC;AAC3G3/D,IAAAA,IAAI,EAAEnC,oDADqG;AAE3GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,iBADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAEo6D,eAAX;AAA4Bn6D,QAAAA,WAAW,EAAEo6D;AAAzC,OAAD;AAFZ,KAAD;AAFqG,GAAD,CAAtH,EAM4B,YAAY;AAAE,WAAO,CAAC;AAAE3/D,MAAAA,IAAI,EAAEpC,sDAAcqM;AAAtB,KAAD,CAAP;AAAoC,GAN9E;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM21D,aAAa,GAAG,IAAIv3D,yDAAJ,CAAmB,aAAnB,CAAtB;AACA;AACA;AACA;AACA;;AACA,MAAMw3D,OAAO,GAAG,IAAIx3D,yDAAJ,CAAmB,SAAnB,CAAhB;AACA;;AACA,MAAMy3D,WAAN,SAA0BnB,0DAA1B,CAAoC;AAChCn/D,EAAAA,WAAW,CAACyP,WAAD,EAAc8wD,gBAAd,EAAgCC,WAAhC,EAA6C;AACpD,UAAM/wD,WAAN,EAAmB8wD,gBAAnB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACH;;AAJ+B;;AAMpCF,WAAW,CAAChgE,IAAZ;AAAA,mBAAwGggE,WAAxG,EA3E4FliE,+DA2E5F,CAAqIA,sDAArI,GA3E4FA,+DA2E5F,CAAgKA,2DAAhK,GA3E4FA,+DA2E5F,CAAgMiiE,OAAhM;AAAA;;AACAC,WAAW,CAAC//D,IAAZ,kBA5E4FnC,+DA4E5F;AAAA,QAA4FkiE,WAA5F;AAAA;AAAA,aA5E4FliE,gEA4E5F,CAAgK,CAAC;AAAE0H,IAAAA,OAAO,EAAEs6D,aAAX;AAA0Br6D,IAAAA,WAAW,EAAEu6D;AAAvC,GAAD,CAAhK,GA5E4FliE,wEA4E5F;AAAA;;AACA;AAAA,qDA7E4FA,+DA6E5F,CAA2FkiE,WAA3F,EAAoH,CAAC;AACzG9/D,IAAAA,IAAI,EAAEnC,oDADmG;AAEzGrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,gCADX;AAEC8F,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAEs6D,aAAX;AAA0Br6D,QAAAA,WAAW,EAAEu6D;AAAvC,OAAD;AAFZ,KAAD;AAFmG,GAAD,CAApH,EAM4B,YAAY;AAAE,WAAO,CAAC;AAAE9/D,MAAAA,IAAI,EAAEpC,sDAAcqM;AAAtB,KAAD,EAA2B;AAAEjK,MAAAA,IAAI,EAAEpC,2DAAmB8Q;AAA3B,KAA3B,EAA0D;AAAE1O,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AACvHnG,QAAAA,IAAI,EAAEsI,iDADiH;AAEvH9M,QAAAA,IAAI,EAAE,CAACqkE,OAAD;AAFiH,OAAD,EAGvH;AACC7/D,QAAAA,IAAI,EAAE/B,mDAAQA;AADf,OAHuH;AAA/B,KAA1D,CAAP;AAKlB,GAXxB;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,MAAMgiE,WAAW,GAAGviB,qEAAa,CAAC,MAAM,EAAP,CAAjC;AAEA;AACA;AACA;AACA;;;AACA,MAAMwiB,aAAa,GAAG,IAAI73D,yDAAJ,CAAmB,eAAnB,CAAtB;;AACA,MAAM83D,MAAN,SAAqBF,WAArB,CAAiC;AAC7BzgE,EAAAA,WAAW,CAACk/C,iBAAD,EAAoB0hB,gBAApB,EAAsC;AAC7C;AACA,SAAK1hB,iBAAL,GAAyBA,iBAAzB;AACA,SAAK0hB,gBAAL,GAAwBA,gBAAxB;AACA;;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA;;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA;;AACA,SAAKnK,aAAL,GAAqB,IAAIv3D,yCAAJ,EAArB;AACA;AACR;AACA;AACA;;AACQ,SAAK0T,QAAL,GAAgB,IAAhB;AACA;AACR;AACA;AACA;;AACQ,SAAK+tC,MAAL,GAAc,IAAd;AACA;AACR;AACA;;AACQ,SAAKkgB,QAAL,GAAgB,KAAhB;AACH;AACD;;;AACiB,MAAbC,aAAa,GAAG;AAChB,WAAO,KAAKC,cAAZ;AACH;;AACgB,MAAbD,aAAa,CAACjkE,KAAD,EAAQ;AACrB,SAAKmkE,sBAAL,CAA4BnkE,KAA5B;AACH;AACD;;;AACW,MAAPokE,OAAO,GAAG;AACV,WAAO,KAAKL,cAAZ;AACH;;AACDv+D,EAAAA,WAAW,CAACsL,OAAD,EAAU;AACjB,QAAIA,OAAO,CAAC0qB,cAAR,CAAuB,WAAvB,KAAuC1qB,OAAO,CAAC0qB,cAAR,CAAuB,UAAvB,CAA3C,EAA+E;AAC3E,WAAKo+B,aAAL,CAAmB15D,IAAnB;AACH;AACJ;;AACDuF,EAAAA,WAAW,GAAG;AACV,SAAKm0D,aAAL,CAAmBp6D,QAAnB;AACH;;AACD6c,EAAAA,QAAQ,GAAG;AACP,SAAK0nD,cAAL,GAAsB,IAAI/iB,+DAAJ,CAAmB,KAAKqjB,gBAAL,IAAyB,KAAKC,gBAAjD,EAAmE,KAAKniB,iBAAxE,CAAtB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIgiB,EAAAA,sBAAsB,CAACnkE,KAAD,EAAQ;AAC1B;AACA;AACA;AACA;AACA,QAAIA,KAAK,IAAIA,KAAK,CAACyjE,WAAN,KAAsB,IAAnC,EAAyC;AACrC,WAAKS,cAAL,GAAsBlkE,KAAtB;AACH;AACJ;;AA9D4B;;AAgEjC4jE,MAAM,CAACrgE,IAAP;AAAA,mBAAmGqgE,MAAnG,EA1K4FviE,+DA0K5F,CAA2HA,2DAA3H,GA1K4FA,+DA0K5F,CAA2JsiE,aAA3J;AAAA;;AACAC,MAAM,CAAC96D,IAAP,kBA3K4FzH,+DA2K5F;AAAA,QAAuFuiE,MAAvF;AAAA;AAAA;AAAA;AA3K4FviE,MAAAA,4DA2K5F,WAAqcgiE,aAArc;AA3K4FhiE,MAAAA,4DA2K5F,WAAqiB8hE,eAAriB,KAA+kBz1D,sDAA/kB;AAAA;;AAAA;AAAA;;AA3K4FrM,MAAAA,4DA2K5F,MA3K4FA,yDA2K5F;AA3K4FA,MAAAA,4DA2K5F,MA3K4FA,yDA2K5F;AAAA;AAAA;AAAA;AAAA;AA3K4FA,MAAAA,yDA2K5F,CAAurBqM,sDAAvrB;AAAA;;AAAA;AAAA;;AA3K4FrM,MAAAA,4DA2K5F,MA3K4FA,yDA2K5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA3K4FA,gEA2K5F,CAAqV,CAAC;AAAE0H,IAAAA,OAAO,EAAEu6D,OAAX;AAAoBt6D,IAAAA,WAAW,EAAE46D;AAAjC,GAAD,CAArV,GA3K4FviE,wEA2K5F,EA3K4FA,kEA2K5F;AAAA;AAAA;AAAA;AAAA;AAAA;AA3K4FA,MAAAA,6DA2K5F;AA3K4FA,MAAAA,wDA2K87B,uDAA1hC;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA,qDA5K4FA,+DA4K5F,CAA2FuiE,MAA3F,EAA+G,CAAC;AACpGngE,IAAAA,IAAI,EAAEjC,oDAD8F;AAEpGvC,IAAAA,IAAI,EAAE,CAAC;AAAEyE,MAAAA,QAAQ,EAAE,SAAZ;AAAuB+K,MAAAA,MAAM,EAAE,CAAC,UAAD,CAA/B;AAA6C4D,MAAAA,eAAe,EAAEpG,0EAA9D;AAA+F5C,MAAAA,aAAa,EAAE5H,iEAA9G;AAAsIgI,MAAAA,QAAQ,EAAE,QAAhJ;AAA0JD,MAAAA,SAAS,EAAE,CAAC;AAAET,QAAAA,OAAO,EAAEu6D,OAAX;AAAoBt6D,QAAAA,WAAW,EAAE46D;AAAjC,OAAD,CAArK;AAAkNl6D,MAAAA,QAAQ,EAAE;AAA5N,KAAD;AAF8F,GAAD,CAA/G,EAG4B,YAAY;AAAE,WAAO,CAAC;AAAEjG,MAAAA,IAAI,EAAEpC,2DAAmB8Q;AAA3B,KAAD,EAAgC;AAAE1O,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC7FnG,QAAAA,IAAI,EAAEsI,iDADuF;AAE7F9M,QAAAA,IAAI,EAAE,CAAC0kE,aAAD;AAFuF,OAAD,EAG7F;AACClgE,QAAAA,IAAI,EAAE/B,mDAAQA;AADf,OAH6F;AAA/B,KAAhC,CAAP;AAKlB,GARxB,EAQ0C;AAAEuiE,IAAAA,aAAa,EAAE,CAAC;AAC5CxgE,MAAAA,IAAI,EAAE5B,uDADsC;AAE5C5C,MAAAA,IAAI,EAAE,CAACokE,aAAD;AAFsC,KAAD,CAAjB;AAG1BgB,IAAAA,gBAAgB,EAAE,CAAC;AACnB5gE,MAAAA,IAAI,EAAE5B,uDADa;AAEnB5C,MAAAA,IAAI,EAAE,CAACkkE,eAAD,EAAkB;AAAEoB,QAAAA,IAAI,EAAE72D,sDAAR;AAAqB7D,QAAAA,MAAM,EAAE;AAA7B,OAAlB;AAFa,KAAD,CAHQ;AAM1By6D,IAAAA,gBAAgB,EAAE,CAAC;AACnB7gE,MAAAA,IAAI,EAAE7B,oDADa;AAEnB3C,MAAAA,IAAI,EAAE,CAACyO,sDAAD,EAAc;AAAE7D,QAAAA,MAAM,EAAE;AAAV,OAAd;AAFa,KAAD,CANQ;AAS1Bi6D,IAAAA,SAAS,EAAE,CAAC;AACZrgE,MAAAA,IAAI,EAAE3B,gDADM;AAEZ7C,MAAAA,IAAI,EAAE,CAAC,OAAD;AAFM,KAAD,CATe;AAY1ByqD,IAAAA,SAAS,EAAE,CAAC;AACZjmD,MAAAA,IAAI,EAAE3B,gDADM;AAEZ7C,MAAAA,IAAI,EAAE,CAAC,YAAD;AAFM,KAAD,CAZe;AAe1B0qD,IAAAA,cAAc,EAAE,CAAC;AACjBlmD,MAAAA,IAAI,EAAE3B,gDADW;AAEjB7C,MAAAA,IAAI,EAAE,CAAC,iBAAD;AAFW,KAAD,CAfU;AAkB1BulE,IAAAA,UAAU,EAAE,CAAC;AACb/gE,MAAAA,IAAI,EAAE3B,gDAAKA;AADE,KAAD,CAlBc;AAoB1B2iE,IAAAA,SAAS,EAAE,CAAC;AACZhhE,MAAAA,IAAI,EAAE3B,gDAAKA;AADC,KAAD;AApBe,GAR1C;AAAA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAM4iE,iBAAiB,GAAG;AACtB;AACAC,EAAAA,YAAY,EAAEn4B,4DAAO,CAAC,cAAD,EAAiB,CAClC;AACAn4B,EAAAA,0DAAK,CAAC,uDAAD,EAA0D+C,0DAAK,CAAC;AAAE+1B,IAAAA,SAAS,EAAE;AAAb,GAAD,CAA/D,CAF6B,EAGlC;AACA;AACA;AACA;AACA94B,EAAAA,0DAAK,CAAC,MAAD,EAAS+C,0DAAK,CAAC;AAAE+1B,IAAAA,SAAS,EAAE,0BAAb;AAAyC5jB,IAAAA,SAAS,EAAE;AAApD,GAAD,CAAd,CAP6B,EAQlClV,0DAAK,CAAC,OAAD,EAAU+C,0DAAK,CAAC;AAAE+1B,IAAAA,SAAS,EAAE,yBAAb;AAAwC5jB,IAAAA,SAAS,EAAE;AAAnD,GAAD,CAAf,CAR6B,EASlCkjB,+DAAU,CAAC,wDAAD,EAA2DC,4DAAO,CAAC,sDAAD,CAAlE,CATwB,EAUlCD,+DAAU,CAAC,4BAAD,EAA+B,CACrCr1B,0DAAK,CAAC;AAAE+1B,IAAAA,SAAS,EAAE;AAAb,GAAD,CADgC,EAErCT,4DAAO,CAAC,sDAAD,CAF8B,CAA/B,CAVwB,EAclCD,+DAAU,CAAC,6BAAD,EAAgC,CACtCr1B,0DAAK,CAAC;AAAE+1B,IAAAA,SAAS,EAAE;AAAb,GAAD,CADiC,EAEtCT,4DAAO,CAAC,sDAAD,CAF+B,CAAhC,CAdwB,CAAjB;AAFC,CAA1B;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,MAAMk4B,gBAAN,SAA+BvC,gEAA/B,CAA+C;AAC3Cp/D,EAAAA,WAAW,CAAC4hE,wBAAD,EAA2BrB,gBAA3B,EAA6CsB,KAA7C,EAAoDhrD,SAApD,EAA+D;AACtE,UAAM+qD,wBAAN,EAAgCrB,gBAAhC,EAAkD1pD,SAAlD;AACA,SAAKgrD,KAAL,GAAaA,KAAb;AACA;;AACA,SAAKC,aAAL,GAAqB/wB,oDAArB;AACA;;AACA,SAAKgxB,WAAL,GAAmBhxB,oDAAnB;AACH;AACD;;;AACA33B,EAAAA,QAAQ,GAAG;AACP,UAAMA,QAAN;AACA,SAAK0oD,aAAL,GAAqB,KAAKD,KAAL,CAAWG,gBAAX,CAChB9kE,IADgB,CACXosC,yDAAS,CAAC,KAAKu4B,KAAL,CAAWI,iBAAX,CAA6B,KAAKJ,KAAL,CAAWK,SAAxC,CAAD,CADE,EAEhBplE,SAFgB,CAELqlE,WAAD,IAAiB;AAC5B,UAAIA,WAAW,IAAI,CAAC,KAAKC,WAAL,EAApB,EAAwC;AACpC,aAAKhjB,MAAL,CAAY,KAAKyiB,KAAL,CAAWQ,QAAvB;AACH;AACJ,KANoB,CAArB;AAOA,SAAKN,WAAL,GAAmB,KAAKF,KAAL,CAAWS,mBAAX,CAA+BxlE,SAA/B,CAAyC,MAAM;AAC9D,WAAKwiD,MAAL;AACH,KAFkB,CAAnB;AAGH;AACD;;;AACA98C,EAAAA,WAAW,GAAG;AACV,UAAMA,WAAN;;AACA,SAAKs/D,aAAL,CAAmBniD,WAAnB;;AACA,SAAKoiD,WAAL,CAAiBpiD,WAAjB;AACH;;AA5B0C;;AA8B/CgiD,gBAAgB,CAACrhE,IAAjB;AAAA,mBAA6GqhE,gBAA7G,EAvR4FvjE,+DAuR5F,CAA+IA,mEAA/I,GAvR4FA,+DAuR5F,CAAuLA,2DAAvL,GAvR4FA,+DAuR5F,CAAuNE,yDAAU,CAAC,MAAMikE,UAAP,CAAjO,GAvR4FnkE,+DAuR5F,CAAgQwK,qDAAhQ;AAAA;;AACA+4D,gBAAgB,CAACphE,IAAjB,kBAxR4FnC,+DAwR5F;AAAA,QAAiGujE,gBAAjG;AAAA;AAAA,aAxR4FvjE,wEAwR5F;AAAA;;AACA;AAAA,qDAzR4FA,+DAyR5F,CAA2FujE,gBAA3F,EAAyH,CAAC;AAC9GnhE,IAAAA,IAAI,EAAEnC,oDADwG;AAE9GrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE;AADX,KAAD;AAFwG,GAAD,CAAzH,EAK4B,YAAY;AAAE,WAAO,CAAC;AAAED,MAAAA,IAAI,EAAEpC,mEAA2BwhD;AAAnC,KAAD,EAAwC;AAAEp/C,MAAAA,IAAI,EAAEpC,2DAAmB8Q;AAA3B,KAAxC,EAAuE;AAAE1O,MAAAA,IAAI,EAAE+hE,UAAR;AAAoB57D,MAAAA,UAAU,EAAE,CAAC;AACrInG,QAAAA,IAAI,EAAEsI,iDAD+H;AAErI9M,QAAAA,IAAI,EAAE,CAACsC,yDAAU,CAAC,MAAMikE,UAAP,CAAX;AAF+H,OAAD;AAAhC,KAAvE,EAG3B;AAAE/hE,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAEsI,iDAD4B;AAElC9M,QAAAA,IAAI,EAAE,CAAC4M,qDAAD;AAF4B,OAAD;AAA/B,KAH2B,CAAP;AAMlB,GAXxB;AAAA;AAYA;AACA;AACA;AACA;;;AACA,MAAM45D,eAAN,CAAsB;AAClBxiE,EAAAA,WAAW,CAACW,WAAD,EAAciW,IAAd,EAAoBkwC,iBAApB,EAAuC;AAC9C,SAAKnmD,WAAL,GAAmBA,WAAnB;AACA,SAAKiW,IAAL,GAAYA,IAAZ;AACA;;AACA,SAAK6rD,sBAAL,GAA8B1xB,oDAA9B;AACA;;AACA,SAAK2xB,qBAAL,GAA6B,IAAItjE,yCAAJ,EAA7B;AACA;;AACA,SAAKujE,YAAL,GAAoB,IAAIz5D,uDAAJ,EAApB;AACA;;AACA,SAAK84D,gBAAL,GAAwB,IAAI94D,uDAAJ,EAAxB;AACA;;AACA,SAAKo5D,mBAAL,GAA2B,IAAIp5D,uDAAJ,EAA3B;AACA;;AACA,SAAK05D,WAAL,GAAmB,IAAI15D,uDAAJ,CAAiB,IAAjB,CAAnB,CAd8C,CAe9C;AACA;;AACA;;AACA,SAAK25D,iBAAL,GAAyB,OAAzB;;AACA,QAAIjsD,IAAJ,EAAU;AACN,WAAK6rD,sBAAL,GAA8B7rD,IAAI,CAAC+C,MAAL,CAAY7c,SAAZ,CAAuBoX,GAAD,IAAS;AACzD,aAAK4uD,8BAAL,CAAoC5uD,GAApC;;AACA4yC,QAAAA,iBAAiB,CAACrjD,YAAlB;AACH,OAH6B,CAA9B;AAIH,KAxB6C,CAyB9C;AACA;;;AACA,SAAKi/D,qBAAL,CACKxlE,IADL,CACU2yD,oEAAoB,CAAC,CAACzqD,CAAD,EAAI29D,CAAJ,KAAU;AACrC,aAAO39D,CAAC,CAAC49D,SAAF,KAAgBD,CAAC,CAACC,SAAlB,IAA+B59D,CAAC,CAACihD,OAAF,KAAc0c,CAAC,CAAC1c,OAAtD;AACH,KAF6B,CAD9B,EAIKvpD,SAJL,CAIesH,KAAK,IAAI;AACpB;AACA,UAAI,KAAK69D,iBAAL,CAAuB79D,KAAK,CAACiiD,OAA7B,KAAyC,KAAK4b,iBAAL,CAAuB,KAAKC,SAA5B,CAA7C,EAAqF;AACjF,aAAKU,WAAL,CAAiB39C,IAAjB;AACH;;AACD,UAAI,KAAKg9C,iBAAL,CAAuB79D,KAAK,CAAC4+D,SAA7B,KAA2C,CAAC,KAAKf,iBAAL,CAAuB,KAAKC,SAA5B,CAAhD,EAAwF;AACpF,aAAKI,mBAAL,CAAyBr9C,IAAzB;AACH;AACJ,KAZD;AAaH;AACD;;;AACY,MAARnS,QAAQ,CAACA,QAAD,EAAW;AACnB,SAAKmwD,cAAL,GAAsBnwD,QAAtB;;AACA,SAAKgwD,8BAAL;AACH;AACD;AACJ;AACA;AACA;;;AACI1pD,EAAAA,QAAQ,GAAG;AACP,QAAI,KAAK8oD,SAAL,IAAkB,QAAlB,IAA8B,KAAKrhB,MAAL,IAAe,IAAjD,EAAuD;AACnD,WAAKqhB,SAAL,GAAiB,KAAKgB,0BAAL,CAAgC,KAAKriB,MAArC,CAAjB;AACH;AACJ;;AACDr+C,EAAAA,WAAW,GAAG;AACV,SAAKigE,sBAAL,CAA4B9iD,WAA5B;;AACA,SAAK+iD,qBAAL,CAA2BnmE,QAA3B;AACH;;AACD4mE,EAAAA,sBAAsB,CAAC/+D,KAAD,EAAQ;AAC1B,UAAM+9D,WAAW,GAAG,KAAKF,iBAAL,CAAuB79D,KAAK,CAACiiD,OAA7B,CAApB;;AACA,SAAK2b,gBAAL,CAAsB/8C,IAAtB,CAA2Bk9C,WAA3B;;AACA,QAAIA,WAAJ,EAAiB;AACb,WAAKQ,YAAL,CAAkB19C,IAAlB,CAAuB,KAAKtkB,WAAL,CAAiB0C,aAAjB,CAA+BgkB,YAAtD;AACH;AACJ;AACD;;;AACA+7C,EAAAA,mBAAmB,GAAG;AAClB,WAAO,KAAKxsD,IAAL,IAAa,KAAKA,IAAL,CAAU7Z,KAAV,KAAoB,KAAjC,GAAyC,KAAzC,GAAiD,KAAxD;AACH;AACD;;;AACAklE,EAAAA,iBAAiB,CAACnvD,QAAD,EAAW;AACxB,WAAQA,QAAQ,IAAI,QAAZ,IAAwBA,QAAQ,IAAI,oBAApC,IAA4DA,QAAQ,IAAI,qBAAhF;AACH;AACD;;;AACAgwD,EAAAA,8BAA8B,CAAC5uD,GAAG,GAAG,KAAKkvD,mBAAL,EAAP,EAAmC;AAC7D,QAAI,KAAKH,cAAL,GAAsB,CAA1B,EAA6B;AACzB,WAAKf,SAAL,GAAiBhuD,GAAG,IAAI,KAAP,GAAe,MAAf,GAAwB,OAAzC;AACH,KAFD,MAGK,IAAI,KAAK+uD,cAAL,GAAsB,CAA1B,EAA6B;AAC9B,WAAKf,SAAL,GAAiBhuD,GAAG,IAAI,KAAP,GAAe,OAAf,GAAyB,MAA1C;AACH,KAFI,MAGA;AACD,WAAKguD,SAAL,GAAiB,QAAjB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACIgB,EAAAA,0BAA0B,CAACriB,MAAD,EAAS;AAC/B,UAAM3sC,GAAG,GAAG,KAAKkvD,mBAAL,EAAZ;;AACA,QAAKlvD,GAAG,IAAI,KAAP,IAAgB2sC,MAAM,IAAI,CAA3B,IAAkC3sC,GAAG,IAAI,KAAP,IAAgB2sC,MAAM,GAAG,CAA/D,EAAmE;AAC/D,aAAO,oBAAP;AACH;;AACD,WAAO,qBAAP;AACH;;AAjGiB;;AAmGtB2hB,eAAe,CAACliE,IAAhB;AAAA,mBAA4GkiE,eAA5G,EA5Y4FpkE,+DA4Y5F,CAA6IA,qDAA7I,GA5Y4FA,+DA4Y5F,CAAuKiB,8DAAvK,MA5Y4FjB,+DA4Y5F,CAAqNA,4DAArN;AAAA;;AACAokE,eAAe,CAACjiE,IAAhB,kBA7Y4FnC,+DA6Y5F;AAAA,QAAgGokE,eAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA,qDA9Y4FpkE,+DA8Y5F,CAA2FokE,eAA3F,EAAwH,CAAC;AAC7GhiE,IAAAA,IAAI,EAAEnC,oDAASA;AAD8F,GAAD,CAAxH,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEmC,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEnB,8DAAR;AAA2BsH,MAAAA,UAAU,EAAE,CAAC;AAC/FnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADiF,OAAD;AAAvC,KAA1B,EAE3B;AAAE+B,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAF2B,CAAP;AAEc,GAJxD,EAI0E;AAAEm9D,IAAAA,YAAY,EAAE,CAAC;AAC3EniE,MAAAA,IAAI,EAAE8I,iDAAMA;AAD+D,KAAD,CAAhB;AAE1D04D,IAAAA,gBAAgB,EAAE,CAAC;AACnBxhE,MAAAA,IAAI,EAAE8I,iDAAMA;AADO,KAAD,CAFwC;AAI1Dg5D,IAAAA,mBAAmB,EAAE,CAAC;AACtB9hE,MAAAA,IAAI,EAAE8I,iDAAMA;AADU,KAAD,CAJqC;AAM1Ds5D,IAAAA,WAAW,EAAE,CAAC;AACdpiE,MAAAA,IAAI,EAAE8I,iDAAMA;AADE,KAAD,CAN6C;AAQ1D+4D,IAAAA,QAAQ,EAAE,CAAC;AACX7hE,MAAAA,IAAI,EAAE3B,gDADK;AAEX7C,MAAAA,IAAI,EAAE,CAAC,SAAD;AAFK,KAAD,CARgD;AAW1D6kD,IAAAA,MAAM,EAAE,CAAC;AACTrgD,MAAAA,IAAI,EAAE3B,gDAAKA;AADF,KAAD,CAXkD;AAa1DgkE,IAAAA,iBAAiB,EAAE,CAAC;AACpBriE,MAAAA,IAAI,EAAE3B,gDAAKA;AADS,KAAD,CAbuC;AAe1DiU,IAAAA,QAAQ,EAAE,CAAC;AACXtS,MAAAA,IAAI,EAAE3B,gDAAKA;AADA,KAAD;AAfgD,GAJ1E;AAAA;AAsBA;AACA;AACA;AACA;;;AACA,MAAM0jE,UAAN,SAAyBC,eAAzB,CAAyC;AACrCxiE,EAAAA,WAAW,CAAC8L,UAAD,EAAaoI,GAAb,EAAkB4yC,iBAAlB,EAAqC;AAC5C,UAAMh7C,UAAN,EAAkBoI,GAAlB,EAAuB4yC,iBAAvB;AACH;;AAHoC;;AAKzCyb,UAAU,CAACjiE,IAAX;AAAA,mBAAuGiiE,UAAvG,EA7a4FnkE,+DA6a5F,CAAmIA,qDAAnI,GA7a4FA,+DA6a5F,CAA6JiB,8DAA7J,MA7a4FjB,+DA6a5F,CAA2MA,4DAA3M;AAAA;;AACAmkE,UAAU,CAAC18D,IAAX,kBA9a4FzH,+DA8a5F;AAAA,QAA2FmkE,UAA3F;AAAA;AAAA;AAAA;AA9a4FnkE,MAAAA,yDA8a5F,CAAgPghE,gEAAhP;AAAA;;AAAA;AAAA;;AA9a4FhhE,MAAAA,4DA8a5F,MA9a4FA,yDA8a5F;AAAA;AAAA;AAAA;AAAA,aA9a4FA,wEA8a5F;AAAA;AAAA;AAAA;AAAA;AAAA;AA9a4FA,MAAAA,4DA8a2O,gBAAvU;AA9a4FA,MAAAA,wDA8aqZ;AAAA,eAAwB,kCAAxB;AAAA;AAAA,eAAsF,sCAAtF;AAAA,QAAjf;AA9a4FA,MAAAA,wDA8awiB,8DAApoB;AA9a4FA,MAAAA,0DA8aolB,EAAhrB;AAAA;;AAAA;AA9a4FA,MAAAA,wDA8a8R,kBA9a9RA,6DA8a8R,wBA9a9RA,6DA8a8R,iCAA1X;AAAA;AAAA;AAAA,iBAAs5BujE,gBAAt5B;AAAA;AAAA;AAAA;AAAA,eAAq9B,CAACF,iBAAiB,CAACC,YAAnB;AAAr9B;AAAA;;AACA;AAAA,qDA/a4FtjE,+DA+a5F,CAA2FmkE,UAA3F,EAAmH,CAAC;AACxG/hE,IAAAA,IAAI,EAAEjC,oDADkG;AAExGvC,IAAAA,IAAI,EAAE,CAAC;AAAEyE,MAAAA,QAAQ,EAAE,cAAZ;AAA4B2F,MAAAA,aAAa,EAAE5H,iEAA3C;AAAmE4Q,MAAAA,eAAe,EAAEpG,0EAApF;AAAqHynC,MAAAA,UAAU,EAAE,CAACgxB,iBAAiB,CAACC,YAAnB,CAAjI;AAAmKp7D,MAAAA,IAAI,EAAE;AACpK,iBAAS;AAD2J,OAAzK;AAEIG,MAAAA,QAAQ,EAAE,mXAFd;AAEmYC,MAAAA,MAAM,EAAE,CAAC,0LAAD;AAF3Y,KAAD;AAFkG,GAAD,CAAnH,EAK4B,YAAY;AAAE,WAAO,CAAC;AAAElG,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEnB,8DAAR;AAA2BsH,MAAAA,UAAU,EAAE,CAAC;AAC/FnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADiF,OAAD;AAAvC,KAA1B,EAE3B;AAAE+B,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAF2B,CAAP;AAEc,GAPxD,EAO0E;AAAE69D,IAAAA,WAAW,EAAE,CAAC;AAC1E7iE,MAAAA,IAAI,EAAE7B,oDADoE;AAE1E3C,MAAAA,IAAI,EAAE,CAACojE,gEAAD;AAFoE,KAAD;AAAf,GAP1E;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,MAAMkE,eAAe,GAAG,IAAIz6D,yDAAJ,CAAmB,iBAAnB,CAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA,MAAM06D,uBAAuB,GAAGrlB,qEAAa,CAAC,MAAM,EAAP,CAA7C;AAEA;AACA;AACA;AACA;;;AACA,MAAMslB,kBAAN,SAAiCD,uBAAjC,CAAyD;AACrDvjE,EAAAA,WAAW,CAAC8L,UAAD,EAAa;AACpB;AACA,SAAKA,UAAL,GAAkBA,UAAlB;AACH;AACD;;;AACA5I,EAAAA,KAAK,GAAG;AACJ,SAAK4I,UAAL,CAAgBzI,aAAhB,CAA8BH,KAA9B;AACH;;AACDugE,EAAAA,aAAa,GAAG;AACZ,WAAO,KAAK33D,UAAL,CAAgBzI,aAAhB,CAA8Bs8D,UAArC;AACH;;AACD+D,EAAAA,cAAc,GAAG;AACb,WAAO,KAAK53D,UAAL,CAAgBzI,aAAhB,CAA8B4sC,WAArC;AACH;;AAdoD;;AAgBzDuzB,kBAAkB,CAACljE,IAAnB;AAAA,mBAA+GkjE,kBAA/G,EApe4FplE,+DAoe5F,CAAmJA,qDAAnJ;AAAA;;AACAolE,kBAAkB,CAACjjE,IAAnB,kBAre4FnC,+DAqe5F;AAAA,QAAmGolE,kBAAnG;AAAA;AAAA;AAAA;AAAA;AAre4FplE,MAAAA,yDAqe5F;AAre4FA,MAAAA,yDAqe5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAre4FA,wEAqe5F;AAAA;;AACA;AAAA,qDAte4FA,+DAse5F,CAA2FolE,kBAA3F,EAA2H,CAAC;AAChHhjE,IAAAA,IAAI,EAAEnC,oDAD0G;AAEhHrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,sBADX;AAEC+K,MAAAA,MAAM,EAAE,CAAC,UAAD,CAFT;AAGClF,MAAAA,IAAI,EAAE;AACF,oCAA4B,UAD1B;AAEF,gCAAwB;AAFtB;AAHP,KAAD;AAF0G,GAAD,CAA3H,EAU4B,YAAY;AAAE,WAAO,CAAC;AAAE9F,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,CAAP;AAAmC,GAV7E;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,MAAMiiD,2BAA2B,GAAGrkC,uFAA+B,CAAC;AAChEO,EAAAA,OAAO,EAAE;AADuD,CAAD,CAAnE;AAGA;AACA;AACA;AACA;;AACA,MAAMkgD,sBAAsB,GAAG,EAA/B;AACA;AACA;AACA;AACA;;AACA,MAAMC,mBAAmB,GAAG,GAA5B;AACA;AACA;AACA;AACA;;AACA,MAAMC,sBAAsB,GAAG,GAA/B;AACA;AACA;AACA;AACA;;AACA,MAAMC,qBAAN,CAA4B;AACxB9jE,EAAAA,WAAW,CAACW,WAAD,EAAcgW,kBAAd,EAAkCI,cAAlC,EAAkDH,IAAlD,EAAwD/J,OAAxD,EAAiEjM,SAAjE,EAA4E0qC,cAA5E,EAA4F;AACnG,SAAK3qC,WAAL,GAAmBA,WAAnB;AACA,SAAKgW,kBAAL,GAA0BA,kBAA1B;AACA,SAAKI,cAAL,GAAsBA,cAAtB;AACA,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAK/J,OAAL,GAAeA,OAAf;AACA,SAAKjM,SAAL,GAAiBA,SAAjB;AACA,SAAK0qC,cAAL,GAAsBA,cAAtB;AACA;;AACA,SAAKy4B,eAAL,GAAuB,CAAvB;AACA;;AACA,SAAKC,qBAAL,GAA6B,KAA7B;AACA;;AACA,SAAKj3D,UAAL,GAAkB,IAAI3N,yCAAJ,EAAlB;AACA;;AACA,SAAK6kE,uBAAL,GAA+B,KAA/B;AACA;;AACA,SAAKC,mBAAL,GAA2B,IAA3B;AACA;;AACA,SAAKC,oBAAL,GAA4B,IAA5B;AACA;;AACA,SAAKC,cAAL,GAAsB,IAAIhlE,yCAAJ,EAAtB;AACA;AACR;AACA;AACA;;AACQ,SAAKilE,iBAAL,GAAyB,KAAzB;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA;;AACA,SAAKC,kBAAL,GAA0B,IAAIr7D,uDAAJ,EAA1B;AACA;;AACA,SAAKs7D,YAAL,GAAoB,IAAIt7D,uDAAJ,EAApB,CA/BmG,CAgCnG;;AACA2D,IAAAA,OAAO,CAAC0X,iBAAR,CAA0B,MAAM;AAC5BjB,MAAAA,gDAAS,CAAC3iB,WAAW,CAAC0C,aAAb,EAA4B,YAA5B,CAAT,CACKnG,IADL,CACU0M,0DAAS,CAAC,KAAKmD,UAAN,CADnB,EAEKjQ,SAFL,CAEe,MAAM;AACjB,aAAK2nE,aAAL;AACH,OAJD;AAKH,KAND;AAOH;AACD;;;AACiB,MAAb3nB,aAAa,GAAG;AAChB,WAAO,KAAKwnB,cAAZ;AACH;;AACgB,MAAbxnB,aAAa,CAAC//C,KAAD,EAAQ;AACrBA,IAAAA,KAAK,GAAGqmB,4EAAoB,CAACrmB,KAAD,CAA5B;;AACA,QAAI,KAAKunE,cAAL,IAAuBvnE,KAA3B,EAAkC;AAC9B,WAAKinE,qBAAL,GAA6B,IAA7B;AACA,WAAKM,cAAL,GAAsBvnE,KAAtB;;AACA,UAAI,KAAK0mD,WAAT,EAAsB;AAClB,aAAKA,WAAL,CAAiBM,gBAAjB,CAAkChnD,KAAlC;AACH;AACJ;AACJ;;AACD0pB,EAAAA,eAAe,GAAG;AACd;AACAnD,IAAAA,gDAAS,CAAC,KAAKohD,kBAAL,CAAwBrhE,aAAzB,EAAwC,YAAxC,EAAsDkkD,2BAAtD,CAAT,CACKrqD,IADL,CACU0M,0DAAS,CAAC,KAAKmD,UAAN,CADnB,EAEKjQ,SAFL,CAEe,MAAM;AACjB,WAAK6nE,qBAAL,CAA2B,QAA3B;AACH,KAJD;AAKArhD,IAAAA,gDAAS,CAAC,KAAKshD,cAAL,CAAoBvhE,aAArB,EAAoC,YAApC,EAAkDkkD,2BAAlD,CAAT,CACKrqD,IADL,CACU0M,0DAAS,CAAC,KAAKmD,UAAN,CADnB,EAEKjQ,SAFL,CAEe,MAAM;AACjB,WAAK6nE,qBAAL,CAA2B,OAA3B;AACH,KAJD;AAKH;;AACDz3B,EAAAA,kBAAkB,GAAG;AACjB,UAAM23B,SAAS,GAAG,KAAKjuD,IAAL,GAAY,KAAKA,IAAL,CAAU+C,MAAtB,GAA+BhQ,yCAAE,CAAC,KAAD,CAAnD;;AACA,UAAMm7D,MAAM,GAAG,KAAK/tD,cAAL,CAAoB4C,MAApB,CAA2B,GAA3B,CAAf;;AACA,UAAMorD,OAAO,GAAG,MAAM;AAClB,WAAKC,gBAAL;;AACA,WAAKC,yBAAL;AACH,KAHD;;AAIA,SAAKxhB,WAAL,GAAmB,IAAIxG,+DAAJ,CAAoB,KAAKioB,MAAzB,EACd/Q,yBADc,CACY,KAAKiP,mBAAL,EADZ,EAEdxf,cAFc,GAGdF,QAHc,EAAnB;;AAIA,SAAKD,WAAL,CAAiBM,gBAAjB,CAAkC,KAAKugB,cAAvC,EAXiB,CAYjB;AACA;AACA;AACA;;;AACA,SAAKz3D,OAAL,CAAaW,QAAb,CAAsBtQ,IAAtB,CAA2BS,oDAAI,CAAC,CAAD,CAA/B,EAAoCb,SAApC,CAA8CioE,OAA9C,EAhBiB,CAiBjB;AACA;;;AACA17B,IAAAA,4CAAK,CAACw7B,SAAD,EAAYC,MAAZ,EAAoB,KAAKI,MAAL,CAAYr3D,OAAhC,CAAL,CACK3Q,IADL,CACU0M,0DAAS,CAAC,KAAKmD,UAAN,CADnB,EAEKjQ,SAFL,CAEe,MAAM;AACjB;AACA;AACA;AACA,WAAK+P,OAAL,CAAauX,GAAb,CAAiB,MAAM9W,OAAO,CAACC,OAAR,GAAkB+vB,IAAlB,CAAuBynC,OAAvB,CAAvB;;AACA,WAAKthB,WAAL,CAAiB0Q,yBAAjB,CAA2C,KAAKiP,mBAAL,EAA3C;AACH,KARD,EAnBiB,CA4BjB;AACA;AACA;;AACA,SAAK3f,WAAL,CAAiB9pC,MAAjB,CAAwBzc,IAAxB,CAA6B0M,0DAAS,CAAC,KAAKmD,UAAN,CAAtC,EAAyDjQ,SAAzD,CAAmEqoE,aAAa,IAAI;AAChF,WAAKX,YAAL,CAAkBv/C,IAAlB,CAAuBkgD,aAAvB;;AACA,WAAKC,YAAL,CAAkBD,aAAlB;AACH,KAHD;AAIH;;AACDvrD,EAAAA,qBAAqB,GAAG;AACpB;AACA,QAAI,KAAKyrD,cAAL,IAAuB,KAAKH,MAAL,CAAY5oE,MAAvC,EAA+C;AAC3C,WAAK0oE,gBAAL;AACA,WAAKK,cAAL,GAAsB,KAAKH,MAAL,CAAY5oE,MAAlC;;AACA,WAAKqa,kBAAL,CAAwBlT,YAAxB;AACH,KANmB,CAOpB;AACA;;;AACA,QAAI,KAAKugE,qBAAT,EAAgC;AAC5B,WAAKsB,cAAL,CAAoB,KAAKhB,cAAzB;;AACA,WAAKiB,uBAAL;;AACA,WAAKN,yBAAL;;AACA,WAAKjB,qBAAL,GAA6B,KAA7B;;AACA,WAAKrtD,kBAAL,CAAwBlT,YAAxB;AACH,KAfmB,CAgBpB;AACA;;;AACA,QAAI,KAAK+hE,sBAAT,EAAiC;AAC7B,WAAKC,wBAAL;;AACA,WAAKD,sBAAL,GAA8B,KAA9B;;AACA,WAAK7uD,kBAAL,CAAwBlT,YAAxB;AACH;AACJ;;AACDjB,EAAAA,WAAW,GAAG;AACV,SAAKuK,UAAL,CAAgB9P,IAAhB;;AACA,SAAK8P,UAAL,CAAgBxQ,QAAhB;;AACA,SAAK6nE,cAAL,CAAoB7nE,QAApB;AACH;AACD;;;AACAmoD,EAAAA,cAAc,CAACtgD,KAAD,EAAQ;AAClB;AACA,QAAIq5C,sEAAc,CAACr5C,KAAD,CAAlB,EAA2B;AACvB;AACH;;AACD,YAAQA,KAAK,CAACugD,OAAd;AACI,WAAKjH,yDAAL;AACA,WAAKC,yDAAL;AACI,YAAI,KAAK+nB,UAAL,KAAoB,KAAK5oB,aAA7B,EAA4C;AACxC,eAAKynB,kBAAL,CAAwBt/C,IAAxB,CAA6B,KAAKygD,UAAlC;;AACA,eAAKC,aAAL,CAAmBvhE,KAAnB;AACH;;AACD;;AACJ;AACI,aAAKq/C,WAAL,CAAiBqB,SAAjB,CAA2B1gD,KAA3B;;AATR;AAWH;AACD;AACJ;AACA;;;AACIwhE,EAAAA,iBAAiB,GAAG;AAChB,UAAM12B,WAAW,GAAG,KAAKvuC,WAAL,CAAiB0C,aAAjB,CAA+B6rC,WAAnD,CADgB,CAEhB;AACA;AACA;;AACA,QAAIA,WAAW,KAAK,KAAK22B,mBAAzB,EAA8C;AAC1C,WAAKA,mBAAL,GAA2B32B,WAAW,IAAI,EAA1C,CAD0C,CAE1C;AACA;;AACA,WAAKriC,OAAL,CAAauX,GAAb,CAAiB,MAAM;AACnB,aAAK4gD,gBAAL;;AACA,aAAKC,yBAAL;;AACA,aAAKtuD,kBAAL,CAAwBlT,YAAxB;AACH,OAJD;AAKH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIuhE,EAAAA,gBAAgB,GAAG;AACf,SAAKc,uBAAL;;AACA,SAAKP,uBAAL;;AACA,SAAKE,wBAAL;AACH;AACD;;;AACc,MAAVC,UAAU,GAAG;AACb,WAAO,KAAKjiB,WAAL,GAAmB,KAAKA,WAAL,CAAiBW,eAApC,GAAsD,CAA7D;AACH;AACD;;;AACc,MAAVshB,UAAU,CAAC3oE,KAAD,EAAQ;AAClB,QAAI,CAAC,KAAKgpE,aAAL,CAAmBhpE,KAAnB,CAAD,IAA8B,KAAK2oE,UAAL,KAAoB3oE,KAAlD,IAA2D,CAAC,KAAK0mD,WAArE,EAAkF;AAC9E;AACH;;AACD,SAAKA,WAAL,CAAiBY,aAAjB,CAA+BtnD,KAA/B;AACH;AACD;AACJ;AACA;AACA;;;AACIgpE,EAAAA,aAAa,CAAC7nE,KAAD,EAAQ;AACjB,QAAI,CAAC,KAAKgnE,MAAV,EAAkB;AACd,aAAO,IAAP;AACH;;AACD,UAAMc,GAAG,GAAG,KAAKd,MAAL,GAAc,KAAKA,MAAL,CAAY/gB,OAAZ,GAAsBjmD,KAAtB,CAAd,GAA6C,IAAzD;AACA,WAAO,CAAC,CAAC8nE,GAAF,IAAS,CAACA,GAAG,CAACjkE,QAArB;AACH;AACD;AACJ;AACA;AACA;;;AACIqjE,EAAAA,YAAY,CAAC5T,QAAD,EAAW;AACnB,QAAI,KAAKyS,uBAAT,EAAkC;AAC9B,WAAKqB,cAAL,CAAoB9T,QAApB;AACH;;AACD,QAAI,KAAK0T,MAAL,IAAe,KAAKA,MAAL,CAAY5oE,MAA/B,EAAuC;AACnC,WAAK4oE,MAAL,CAAY/gB,OAAZ,GAAsBqN,QAAtB,EAAgCtuD,KAAhC,GADmC,CAEnC;AACA;AACA;;;AACA,YAAM+iE,WAAW,GAAG,KAAKC,iBAAL,CAAuB7iE,aAA3C;;AACA,YAAM6Q,GAAG,GAAG,KAAKkvD,mBAAL,EAAZ;;AACA,UAAIlvD,GAAG,IAAI,KAAX,EAAkB;AACd+xD,QAAAA,WAAW,CAACE,UAAZ,GAAyB,CAAzB;AACH,OAFD,MAGK;AACDF,QAAAA,WAAW,CAACE,UAAZ,GAAyBF,WAAW,CAACG,WAAZ,GAA0BH,WAAW,CAACh2B,WAA/D;AACH;AACJ;AACJ;AACD;;;AACAmzB,EAAAA,mBAAmB,GAAG;AAClB,WAAO,KAAKxsD,IAAL,IAAa,KAAKA,IAAL,CAAU7Z,KAAV,KAAoB,KAAjC,GAAyC,KAAzC,GAAiD,KAAxD;AACH;AACD;;;AACA0oE,EAAAA,wBAAwB,GAAG;AACvB,QAAI,KAAKpB,iBAAT,EAA4B;AACxB;AACH;;AACD,UAAMgC,cAAc,GAAG,KAAKA,cAA5B;AACA,UAAMC,UAAU,GAAG,KAAKlD,mBAAL,OAA+B,KAA/B,GAAuC,CAACiD,cAAxC,GAAyDA,cAA5E,CALuB,CAMvB;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKE,QAAL,CAAcljE,aAAd,CAA4B8Q,KAA5B,CAAkC+1B,SAAlC,GAA+C,cAAajiB,IAAI,CAACoxC,KAAL,CAAWiN,UAAX,CAAuB,KAAnF,CAZuB,CAavB;AACA;AACA;AACA;;AACA,QAAI,KAAK1lE,SAAL,CAAe4lE,OAAf,IAA0B,KAAK5lE,SAAL,CAAe6lE,IAA7C,EAAmD;AAC/C,WAAKP,iBAAL,CAAuB7iE,aAAvB,CAAqC8iE,UAArC,GAAkD,CAAlD;AACH;AACJ;AACD;;;AACkB,MAAdE,cAAc,GAAG;AACjB,WAAO,KAAKtC,eAAZ;AACH;;AACiB,MAAdsC,cAAc,CAACtpE,KAAD,EAAQ;AACtB,SAAK2pE,SAAL,CAAe3pE,KAAf;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI4pE,EAAAA,aAAa,CAAC52D,SAAD,EAAY;AACrB,UAAM62D,UAAU,GAAG,KAAKV,iBAAL,CAAuB7iE,aAAvB,CAAqC4sC,WAAxD,CADqB,CAErB;;AACA,UAAM42B,YAAY,GAAI,CAAC92D,SAAS,IAAI,QAAb,GAAwB,CAAC,CAAzB,GAA6B,CAA9B,IAAmC62D,UAApC,GAAkD,CAAvE;AACA,WAAO,KAAKF,SAAL,CAAe,KAAK3C,eAAL,GAAuB8C,YAAtC,CAAP;AACH;AACD;;;AACAC,EAAAA,qBAAqB,CAAC/2D,SAAD,EAAY;AAC7B,SAAK00D,aAAL;;AACA,SAAKkC,aAAL,CAAmB52D,SAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIu1D,EAAAA,cAAc,CAACyB,UAAD,EAAa;AACvB,QAAI,KAAK1C,iBAAT,EAA4B;AACxB;AACH;;AACD,UAAM2C,aAAa,GAAG,KAAK9B,MAAL,GAAc,KAAKA,MAAL,CAAY/gB,OAAZ,GAAsB4iB,UAAtB,CAAd,GAAkD,IAAxE;;AACA,QAAI,CAACC,aAAL,EAAoB;AAChB;AACH,KAPsB,CAQvB;;;AACA,UAAMJ,UAAU,GAAG,KAAKV,iBAAL,CAAuB7iE,aAAvB,CAAqC4sC,WAAxD;AACA,UAAM;AAAE0vB,MAAAA,UAAF;AAAc1vB,MAAAA;AAAd,QAA8B+2B,aAAa,CAACl7D,UAAd,CAAyBzI,aAA7D;AACA,QAAI4jE,cAAJ,EAAoBC,aAApB;;AACA,QAAI,KAAK9D,mBAAL,MAA8B,KAAlC,EAAyC;AACrC6D,MAAAA,cAAc,GAAGtH,UAAjB;AACAuH,MAAAA,aAAa,GAAGD,cAAc,GAAGh3B,WAAjC;AACH,KAHD,MAIK;AACDi3B,MAAAA,aAAa,GAAG,KAAKC,aAAL,CAAmB9jE,aAAnB,CAAiC4sC,WAAjC,GAA+C0vB,UAA/D;AACAsH,MAAAA,cAAc,GAAGC,aAAa,GAAGj3B,WAAjC;AACH;;AACD,UAAMm3B,gBAAgB,GAAG,KAAKf,cAA9B;AACA,UAAMgB,eAAe,GAAG,KAAKhB,cAAL,GAAsBO,UAA9C;;AACA,QAAIK,cAAc,GAAGG,gBAArB,EAAuC;AACnC;AACA,WAAKf,cAAL,IAAuBe,gBAAgB,GAAGH,cAAnB,GAAoCtD,sBAA3D;AACH,KAHD,MAIK,IAAIuD,aAAa,GAAGG,eAApB,EAAqC;AACtC;AACA,WAAKhB,cAAL,IAAuBa,aAAa,GAAGG,eAAhB,GAAkC1D,sBAAzD;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACImC,EAAAA,uBAAuB,GAAG;AACtB,QAAI,KAAKzB,iBAAT,EAA4B;AACxB,WAAKJ,uBAAL,GAA+B,KAA/B;AACH,KAFD,MAGK;AACD,YAAMqD,SAAS,GAAG,KAAKH,aAAL,CAAmB9jE,aAAnB,CAAiC+iE,WAAjC,GAA+C,KAAKzlE,WAAL,CAAiB0C,aAAjB,CAA+B4sC,WAAhG;;AACA,UAAI,CAACq3B,SAAL,EAAgB;AACZ,aAAKjB,cAAL,GAAsB,CAAtB;AACH;;AACD,UAAIiB,SAAS,KAAK,KAAKrD,uBAAvB,EAAgD;AAC5C,aAAKttD,kBAAL,CAAwBlT,YAAxB;AACH;;AACD,WAAKwgE,uBAAL,GAA+BqD,SAA/B;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACI/B,EAAAA,uBAAuB,GAAG;AACtB,QAAI,KAAKlB,iBAAT,EAA4B;AACxB,WAAKH,mBAAL,GAA2B,KAAKC,oBAAL,GAA4B,IAAvD;AACH,KAFD,MAGK;AACD;AACA,WAAKA,oBAAL,GAA4B,KAAKkC,cAAL,IAAuB,CAAnD;AACA,WAAKnC,mBAAL,GAA2B,KAAKmC,cAAL,IAAuB,KAAKkB,qBAAL,EAAlD;;AACA,WAAK5wD,kBAAL,CAAwBlT,YAAxB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACI8jE,EAAAA,qBAAqB,GAAG;AACpB,UAAMC,eAAe,GAAG,KAAKL,aAAL,CAAmB9jE,aAAnB,CAAiC+iE,WAAzD;AACA,UAAMQ,UAAU,GAAG,KAAKV,iBAAL,CAAuB7iE,aAAvB,CAAqC4sC,WAAxD;AACA,WAAOu3B,eAAe,GAAGZ,UAAlB,IAAgC,CAAvC;AACH;AACD;;;AACA3B,EAAAA,yBAAyB,GAAG;AACxB,UAAMwC,YAAY,GAAG,KAAKvC,MAAL,IAAe,KAAKA,MAAL,CAAY5oE,MAA3B,GAAoC,KAAK4oE,MAAL,CAAY/gB,OAAZ,GAAsB,KAAKrH,aAA3B,CAApC,GAAgF,IAArG;AACA,UAAM4qB,oBAAoB,GAAGD,YAAY,GAAGA,YAAY,CAAC37D,UAAb,CAAwBzI,aAA3B,GAA2C,IAApF;;AACA,QAAIqkE,oBAAJ,EAA0B;AACtB,WAAKC,OAAL,CAAa7H,cAAb,CAA4B4H,oBAA5B;AACH,KAFD,MAGK;AACD,WAAKC,OAAL,CAAa1H,IAAb;AACH;AACJ;AACD;;;AACAwE,EAAAA,aAAa,GAAG;AACZ,SAAKL,cAAL,CAAoBnnE,IAApB;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACI0nE,EAAAA,qBAAqB,CAAC50D,SAAD,EAAY63D,UAAZ,EAAwB;AACzC;AACA;AACA,QAAIA,UAAU,IAAIA,UAAU,CAAC7b,MAAX,IAAqB,IAAnC,IAA2C6b,UAAU,CAAC7b,MAAX,KAAsB,CAArE,EAAwE;AACpE;AACH,KALwC,CAMzC;;;AACA,SAAK0Y,aAAL,GAPyC,CAQzC;;;AACApnE,IAAAA,4CAAK,CAACumE,mBAAD,EAAsBC,sBAAtB,CAAL,CACI;AADJ,KAEK3mE,IAFL,CAEU0M,0DAAS,CAACy/B,4CAAK,CAAC,KAAK+6B,cAAN,EAAsB,KAAKr3D,UAA3B,CAAN,CAFnB,EAGKjQ,SAHL,CAGe,MAAM;AACjB,YAAM;AAAE+qE,QAAAA,iBAAF;AAAqBC,QAAAA;AAArB,UAAkC,KAAKnB,aAAL,CAAmB52D,SAAnB,CAAxC,CADiB,CAEjB;;;AACA,UAAI+3D,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,IAAID,iBAAlC,EAAqD;AACjD,aAAKpD,aAAL;AACH;AACJ,KATD;AAUH;AACD;AACJ;AACA;AACA;AACA;;;AACIiC,EAAAA,SAAS,CAAC5zD,QAAD,EAAW;AAChB,QAAI,KAAKuxD,iBAAT,EAA4B;AACxB,aAAO;AAAEwD,QAAAA,iBAAiB,EAAE,CAArB;AAAwBC,QAAAA,QAAQ,EAAE;AAAlC,OAAP;AACH;;AACD,UAAMD,iBAAiB,GAAG,KAAKN,qBAAL,EAA1B;;AACA,SAAKxD,eAAL,GAAuB97C,IAAI,CAACxgB,GAAL,CAAS,CAAT,EAAYwgB,IAAI,CAACwD,GAAL,CAASo8C,iBAAT,EAA4B/0D,QAA5B,CAAZ,CAAvB,CALgB,CAMhB;AACA;;AACA,SAAK0yD,sBAAL,GAA8B,IAA9B;;AACA,SAAKD,uBAAL;;AACA,WAAO;AAAEsC,MAAAA,iBAAF;AAAqBC,MAAAA,QAAQ,EAAE,KAAK/D;AAApC,KAAP;AACH;;AA5auB;;AA8a5BD,qBAAqB,CAACxjE,IAAtB;AAAA,mBAAkHwjE,qBAAlH,EA97B4F1lE,+DA87B5F,CAAyJA,qDAAzJ,GA97B4FA,+DA87B5F,CAAmLA,4DAAnL,GA97B4FA,+DA87B5F,CAAoNigD,kEAApN,GA97B4FjgD,+DA87B5F,CAAmPiB,8DAAnP,MA97B4FjB,+DA87B5F,CAAiSA,iDAAjS,GA97B4FA,+DA87B5F,CAAuTW,4DAAvT,GA97B4FX,+DA87B5F,CAA+UsrC,gEAA/U;AAAA;;AACAo6B,qBAAqB,CAACvjE,IAAtB,kBA/7B4FnC,+DA+7B5F;AAAA,QAAsG0lE,qBAAtG;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA,qDAh8B4F1lE,+DAg8B5F,CAA2F0lE,qBAA3F,EAA8H,CAAC;AACnHtjE,IAAAA,IAAI,EAAEnC,oDAASA;AADoG,GAAD,CAA9H,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEmC,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAA1B,EAA0D;AAAEhF,MAAAA,IAAI,EAAE69C,kEAAkBn8B;AAA1B,KAA1D,EAAwF;AAAE1hB,MAAAA,IAAI,EAAEnB,8DAAR;AAA2BsH,MAAAA,UAAU,EAAE,CAAC;AAC7JnG,QAAAA,IAAI,EAAE/B,mDAAQA;AAD+I,OAAD;AAAvC,KAAxF,EAE3B;AAAE+B,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAF2B,EAEN;AAAE3I,MAAAA,IAAI,EAAEzB,4DAAWwG;AAAnB,KAFM,EAEiB;AAAE/E,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC9EnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADgE,OAAD,EAE9E;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC0tC,gEAAD;AAFP,OAF8E;AAA/B,KAFjB,CAAP;AAOlB,GATxB,EAS0C;AAAE26B,IAAAA,iBAAiB,EAAE,CAAC;AAChD7jE,MAAAA,IAAI,EAAE3B,gDAAKA;AADqC,KAAD;AAArB,GAT1C;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,MAAMkpE,iBAAN,SAAgCjE,qBAAhC,CAAsD;AAClD9jE,EAAAA,WAAW,CAAC8L,UAAD,EAAag7C,iBAAb,EAAgCgG,aAAhC,EAA+C54C,GAA/C,EAAoDunC,MAApD,EAA4DusB,QAA5D,EAAsEpb,aAAtE,EAAqF;AAC5F,UAAM9gD,UAAN,EAAkBg7C,iBAAlB,EAAqCgG,aAArC,EAAoD54C,GAApD,EAAyDunC,MAAzD,EAAiEusB,QAAjE,EAA2Epb,aAA3E;AACA,SAAKqb,cAAL,GAAsB,KAAtB;AACH;AACD;;;AACiB,MAAbC,aAAa,GAAG;AAChB,WAAO,KAAKD,cAAZ;AACH;;AACgB,MAAbC,aAAa,CAACnrE,KAAD,EAAQ;AACrB,SAAKkrE,cAAL,GAAsB9pE,6EAAqB,CAACpB,KAAD,CAA3C;AACH;;AACD4oE,EAAAA,aAAa,CAACvhE,KAAD,EAAQ;AACjBA,IAAAA,KAAK,CAACG,cAAN;AACH;;AAdiD;;AAgBtDwjE,iBAAiB,CAACznE,IAAlB;AAAA,mBAA8GynE,iBAA9G,EAx+B4F3pE,+DAw+B5F,CAAiJA,qDAAjJ,GAx+B4FA,+DAw+B5F,CAA2KA,4DAA3K,GAx+B4FA,+DAw+B5F,CAA4MigD,kEAA5M,GAx+B4FjgD,+DAw+B5F,CAA2OiB,8DAA3O,MAx+B4FjB,+DAw+B5F,CAAyRA,iDAAzR,GAx+B4FA,+DAw+B5F,CAA+SW,4DAA/S,GAx+B4FX,+DAw+B5F,CAAuUsrC,gEAAvU;AAAA;;AACAq+B,iBAAiB,CAACxnE,IAAlB,kBAz+B4FnC,+DAy+B5F;AAAA,QAAkG2pE,iBAAlG;AAAA;AAAA;AAAA;AAAA,aAz+B4F3pE,wEAy+B5F;AAAA;;AACA;AAAA,qDA1+B4FA,+DA0+B5F,CAA2F2pE,iBAA3F,EAA0H,CAAC;AAC/GvnE,IAAAA,IAAI,EAAEnC,oDAASA;AADgG,GAAD,CAA1H,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEmC,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAA1B,EAA0D;AAAEhF,MAAAA,IAAI,EAAE69C,kEAAkBn8B;AAA1B,KAA1D,EAAwF;AAAE1hB,MAAAA,IAAI,EAAEnB,8DAAR;AAA2BsH,MAAAA,UAAU,EAAE,CAAC;AAC7JnG,QAAAA,IAAI,EAAE/B,mDAAQA;AAD+I,OAAD;AAAvC,KAAxF,EAE3B;AAAE+B,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAF2B,EAEN;AAAE3I,MAAAA,IAAI,EAAEzB,4DAAWwG;AAAnB,KAFM,EAEiB;AAAE/E,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC9EnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADgE,OAAD,EAE9E;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC0tC,gEAAD;AAFP,OAF8E;AAA/B,KAFjB,CAAP;AAOlB,GATxB,EAS0C;AAAEw+B,IAAAA,aAAa,EAAE,CAAC;AAC5C1nE,MAAAA,IAAI,EAAE3B,gDAAKA;AADiC,KAAD;AAAjB,GAT1C;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMspE,YAAN,SAA2BJ,iBAA3B,CAA6C;AACzC/nE,EAAAA,WAAW,CAAC8L,UAAD,EAAag7C,iBAAb,EAAgCgG,aAAhC,EAA+C54C,GAA/C,EAAoDunC,MAApD,EAA4DusB,QAA5D,EAAsEpb,aAAtE,EAAqF;AAC5F,UAAM9gD,UAAN,EAAkBg7C,iBAAlB,EAAqCgG,aAArC,EAAoD54C,GAApD,EAAyDunC,MAAzD,EAAiEusB,QAAjE,EAA2Epb,aAA3E;AACH;;AAHwC;;AAK7Cub,YAAY,CAAC7nE,IAAb;AAAA,mBAAyG6nE,YAAzG,EAlgC4F/pE,+DAkgC5F,CAAuIA,qDAAvI,GAlgC4FA,+DAkgC5F,CAAiKA,4DAAjK,GAlgC4FA,+DAkgC5F,CAAkMigD,kEAAlM,GAlgC4FjgD,+DAkgC5F,CAAiOiB,8DAAjO,MAlgC4FjB,+DAkgC5F,CAA+QA,iDAA/Q,GAlgC4FA,+DAkgC5F,CAAqSW,4DAArS,GAlgC4FX,+DAkgC5F,CAA6TsrC,gEAA7T;AAAA;;AACAy+B,YAAY,CAACtiE,IAAb,kBAngC4FzH,+DAmgC5F;AAAA,QAA6F+pE,YAA7F;AAAA;AAAA;AAAA;AAngC4F/pE,MAAAA,4DAmgC5F,WAAggBolE,kBAAhgB;AAAA;;AAAA;AAAA;;AAngC4FplE,MAAAA,4DAmgC5F,MAngC4FA,yDAmgC5F;AAAA;AAAA;AAAA;AAAA;AAngC4FA,MAAAA,yDAmgC5F,CAAwlBwhE,SAAxlB;AAngC4FxhE,MAAAA,yDAmgC5F;AAngC4FA,MAAAA,yDAmgC5F;AAngC4FA,MAAAA,yDAmgC5F;AAngC4FA,MAAAA,yDAmgC5F;AAngC4FA,MAAAA,yDAmgC5F;AAAA;;AAAA;AAAA;;AAngC4FA,MAAAA,4DAmgC5F,MAngC4FA,yDAmgC5F;AAngC4FA,MAAAA,4DAmgC5F,MAngC4FA,yDAmgC5F;AAngC4FA,MAAAA,4DAmgC5F,MAngC4FA,yDAmgC5F;AAngC4FA,MAAAA,4DAmgC5F,MAngC4FA,yDAmgC5F;AAngC4FA,MAAAA,4DAmgC5F,MAngC4FA,yDAmgC5F;AAngC4FA,MAAAA,4DAmgC5F,MAngC4FA,yDAmgC5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAngC4FA,MAAAA,yDAmgC5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAngC4FA,wEAmgC5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAngC4FA,MAAAA,6DAmgC5F;AAngC4FA,MAAAA,4DAmgC+mC,mBAA3sC;AAngC4FA,MAAAA,wDAmgCogD;AAAA,eAAU,0BAAsB,QAAtB,CAAV;AAAA;AAAA,eAAgE,0BAAsB,QAAtB,SAAhE;AAAA;AAAA,eAA6H,mBAA7H;AAAA,QAAhmD;AAngC4FA,MAAAA,uDAmgCupD,aAAnvD;AAngC4FA,MAAAA,0DAmgCgtD,EAA5yD;AAngC4FA,MAAAA,4DAmgC6tD,gBAAzzD;AAngC4FA,MAAAA,wDAmgCsxD;AAAA,eAAY,0BAAZ;AAAA,QAAl3D;AAngC4FA,MAAAA,4DAmgC+zD,gBAA35D;AAngC4FA,MAAAA,wDAmgCs9D;AAAA,eAAsB,uBAAtB;AAAA,QAAljE;AAngC4FA,MAAAA,4DAmgCwgE,gBAApmE;AAngC4FA,MAAAA,0DAmgC4jE,GAAxpE;AAngC4FA,MAAAA,0DAmgC2lE,EAAvrE;AAngC4FA,MAAAA,uDAmgCumE,mBAAnsE;AAngC4FA,MAAAA,0DAmgCsoE,IAAluE;AAngC4FA,MAAAA,4DAmgCwpE,qBAApvE;AAngC4FA,MAAAA,wDAmgCqiF;AAAA,eAAc,0BAAsB,OAAtB,SAAd;AAAA;AAAA,eAAuE,0BAAsB,OAAtB,CAAvE;AAAA;AAAA,eAA2H,mBAA3H;AAAA,QAAjoF;AAngC4FA,MAAAA,uDAmgCsrF,cAAlxF;AAngC4FA,MAAAA,0DAmgC+uF,EAA30F;AAAA;;AAAA;AAngC4FA,MAAAA,yDAmgCw4C,gEAAp+C;AAngC4FA,MAAAA,wDAmgCo0C,kHAAh6C;AAngC4FA,MAAAA,uDAmgCm3D,GAA/8D;AAngC4FA,MAAAA,yDAmgCm3D,oEAA/8D;AAngC4FA,MAAAA,uDAmgCq5E,GAAj/E;AAngC4FA,MAAAA,yDAmgCq5E,+DAAj/E;AAngC4FA,MAAAA,wDAmgCk1E,gHAA96E;AAAA;AAAA;AAAA,iBAA2iLmB,6DAA3iL,EAA4xLE,sEAA5xL,EAAi9LmgE,SAAj9L;AAAA;AAAA;AAAA;;AACA;AAAA,qDApgC4FxhE,+DAogC5F,CAA2F+pE,YAA3F,EAAqH,CAAC;AAC1G3nE,IAAAA,IAAI,EAAEjC,oDADoG;AAE1GvC,IAAAA,IAAI,EAAE,CAAC;AAAEyE,MAAAA,QAAQ,EAAE,gBAAZ;AAA8B+K,MAAAA,MAAM,EAAE,CAAC,eAAD,CAAtC;AAAyD2yB,MAAAA,OAAO,EAAE,CAAC,oBAAD,EAAuB,cAAvB,CAAlE;AAA0G/3B,MAAAA,aAAa,EAAE5H,iEAAzH;AAAiJ4Q,MAAAA,eAAe,EAAEpG,0EAAlK;AAAmM1C,MAAAA,IAAI,EAAE;AACpM,iBAAS,gBAD2L;AAEpM,8DAAsD,yBAF8I;AAGpM,sCAA8B;AAHsK,OAAzM;AAIIG,MAAAA,QAAQ,EAAE,6oDAJd;AAI6pDC,MAAAA,MAAM,EAAE,CAAC,irFAAD;AAJrqD,KAAD;AAFoG,GAAD,CAArH,EAO4B,YAAY;AAAE,WAAO,CAAC;AAAElG,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAA1B,EAA0D;AAAEhF,MAAAA,IAAI,EAAE69C,kEAAkBn8B;AAA1B,KAA1D,EAAwF;AAAE1hB,MAAAA,IAAI,EAAEnB,8DAAR;AAA2BsH,MAAAA,UAAU,EAAE,CAAC;AAC7JnG,QAAAA,IAAI,EAAE/B,mDAAQA;AAD+I,OAAD;AAAvC,KAAxF,EAE3B;AAAE+B,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAF2B,EAEN;AAAE3I,MAAAA,IAAI,EAAEzB,4DAAWwG;AAAnB,KAFM,EAEiB;AAAE/E,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC9EnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADgE,OAAD,EAE9E;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC0tC,gEAAD;AAFP,OAF8E;AAA/B,KAFjB,CAAP;AAOlB,GAdxB,EAc0C;AAAEw7B,IAAAA,MAAM,EAAE,CAAC;AACrC1kE,MAAAA,IAAI,EAAE+I,0DAD+B;AAErCvN,MAAAA,IAAI,EAAE,CAACwnE,kBAAD,EAAqB;AAAEphD,QAAAA,WAAW,EAAE;AAAf,OAArB;AAF+B,KAAD,CAAV;AAG1BulD,IAAAA,OAAO,EAAE,CAAC;AACVnnE,MAAAA,IAAI,EAAE7B,oDADI;AAEV3C,MAAAA,IAAI,EAAE,CAAC4jE,SAAD,EAAY;AAAEh5D,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAFI,KAAD,CAHiB;AAM1Bs/D,IAAAA,iBAAiB,EAAE,CAAC;AACpB1lE,MAAAA,IAAI,EAAE7B,oDADc;AAEpB3C,MAAAA,IAAI,EAAE,CAAC,kBAAD,EAAqB;AAAE4K,QAAAA,MAAM,EAAE;AAAV,OAArB;AAFc,KAAD,CANO;AAS1B2/D,IAAAA,QAAQ,EAAE,CAAC;AACX/lE,MAAAA,IAAI,EAAE7B,oDADK;AAEX3C,MAAAA,IAAI,EAAE,CAAC,SAAD,EAAY;AAAE4K,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAFK,KAAD,CATgB;AAY1BugE,IAAAA,aAAa,EAAE,CAAC;AAChB3mE,MAAAA,IAAI,EAAE7B,oDADU;AAEhB3C,MAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB;AAAE4K,QAAAA,MAAM,EAAE;AAAV,OAAjB;AAFU,KAAD,CAZW;AAe1Bg+D,IAAAA,cAAc,EAAE,CAAC;AACjBpkE,MAAAA,IAAI,EAAE7B,oDADW;AAEjB3C,MAAAA,IAAI,EAAE,CAAC,eAAD;AAFW,KAAD,CAfU;AAkB1B0oE,IAAAA,kBAAkB,EAAE,CAAC;AACrBlkE,MAAAA,IAAI,EAAE7B,oDADe;AAErB3C,MAAAA,IAAI,EAAE,CAAC,mBAAD;AAFe,KAAD;AAlBM,GAd1C;AAAA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,IAAIosE,MAAM,GAAG,CAAb;AACA;;AACA,MAAMC,iBAAN,CAAwB,GAExB;;AACA;;;AACA,MAAMC,qBAAqB,GAAGn/B,kEAAU,CAAC8U,0EAAkB,CAAC,MAAM;AAC9Dj+C,EAAAA,WAAW,CAACW,WAAD,EAAc;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AAH6D,CAAP,CAAnB,EAIpC,SAJoC,CAAxC;AAKA;AACA;AACA;AACA;;;AACA,MAAM4nE,gBAAN,SAA+BD,qBAA/B,CAAqD;AACjDtoE,EAAAA,WAAW,CAAC8L,UAAD,EAAa6K,kBAAb,EAAiC6xD,aAAjC,EAAgDl9B,cAAhD,EAAgE;AACvE,UAAMx/B,UAAN;AACA,SAAK6K,kBAAL,GAA0BA,kBAA1B;AACA,SAAK20B,cAAL,GAAsBA,cAAtB;AACA;;AACA,SAAKm9B,KAAL,GAAa,IAAI7qB,oDAAJ,EAAb;AACA;;AACA,SAAK8qB,cAAL,GAAsB,CAAtB;AACA;;AACA,SAAKC,oBAAL,GAA4B,IAA5B;AACA;;AACA,SAAKC,qBAAL,GAA6B,CAA7B;AACA;;AACA,SAAKC,iBAAL,GAAyB93B,oDAAzB;AACA;;AACA,SAAK+3B,qBAAL,GAA6B/3B,oDAA7B;AACA,SAAKuzB,cAAL,GAAsB,IAAtB;AACA;;AACA,SAAKyE,cAAL,GAAsB,OAAtB;AACA;;AACA,SAAKC,mBAAL,GAA2B,IAAI9/D,uDAAJ,EAA3B;AACA;;AACA,SAAK+/D,WAAL,GAAmB,IAAI//D,uDAAJ,EAAnB;AACA;;AACA,SAAKggE,aAAL,GAAqB,IAAIhgE,uDAAJ,EAArB;AACA;;AACA,SAAKigE,iBAAL,GAAyB,IAAIjgE,uDAAJ,CAAiB,IAAjB,CAAzB;AACA,SAAKkgE,QAAL,GAAgBhB,MAAM,EAAtB;AACA,SAAKvF,iBAAL,GACI2F,aAAa,IAAIA,aAAa,CAAC3F,iBAA/B,GAAmD2F,aAAa,CAAC3F,iBAAjE,GAAqF,OADzF;AAEA,SAAKwB,iBAAL,GACImE,aAAa,IAAIA,aAAa,CAACnE,iBAAd,IAAmC,IAApD,GACMmE,aAAa,CAACnE,iBADpB,GAEM,KAHV;AAIA,SAAKgF,aAAL,GACIb,aAAa,IAAIA,aAAa,CAACa,aAAd,IAA+B,IAAhD,GAAuDb,aAAa,CAACa,aAArE,GAAqF,KADzF;AAEA,SAAKC,eAAL,GAAuBd,aAAa,EAAEc,eAAf,IAAkC,IAAzD;AACH;AACD;;;AACiB,MAAbD,aAAa,GAAG;AAChB,WAAO,KAAKE,cAAZ;AACH;;AACgB,MAAbF,aAAa,CAACtsE,KAAD,EAAQ;AACrB,SAAKwsE,cAAL,GAAsBprE,6EAAqB,CAACpB,KAAD,CAA3C;AACH;AACD;;;AACiB,MAAb+/C,aAAa,GAAG;AAChB,WAAO,KAAKwnB,cAAZ;AACH;;AACgB,MAAbxnB,aAAa,CAAC//C,KAAD,EAAQ;AACrB,SAAK2rE,cAAL,GAAsBtlD,4EAAoB,CAACrmB,KAAD,EAAQ,IAAR,CAA1C;AACH;AACD;;;AACqB,MAAjB8lE,iBAAiB,GAAG;AACpB,WAAO,KAAK2G,kBAAZ;AACH;;AACoB,MAAjB3G,iBAAiB,CAAC9lE,KAAD,EAAQ;AACzB,SAAKysE,kBAAL,GAA0B,QAAQh/C,IAAR,CAAaztB,KAAK,GAAG,EAArB,IAA2BA,KAAK,GAAG,IAAnC,GAA0CA,KAApE;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACuB,MAAfusE,eAAe,GAAG;AAClB,WAAO,KAAKG,gBAAZ;AACH;;AACkB,MAAfH,eAAe,CAACvsE,KAAD,EAAQ;AACvB,SAAK0sE,gBAAL,GAAwBrmD,4EAAoB,CAACrmB,KAAD,EAAQ,IAAR,CAA5C;AACH;AACD;;;AACmB,MAAf2sE,eAAe,GAAG;AAClB,WAAO,KAAKC,gBAAZ;AACH;;AACkB,MAAfD,eAAe,CAAC3sE,KAAD,EAAQ;AACvB,UAAMsG,aAAa,GAAG,KAAK1C,WAAL,CAAiB0C,aAAvC;AACAA,IAAAA,aAAa,CAAC0I,SAAd,CAAwBqI,MAAxB,CAAgC,kBAAiB,KAAKs1D,eAAgB,EAAtE;;AACA,QAAI3sE,KAAJ,EAAW;AACPsG,MAAAA,aAAa,CAAC0I,SAAd,CAAwBlE,GAAxB,CAA6B,kBAAiB9K,KAAM,EAApD;AACH;;AACD,SAAK4sE,gBAAL,GAAwB5sE,KAAxB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACI6c,EAAAA,qBAAqB,GAAG;AACpB;AACA;AACA,UAAMgwD,aAAa,GAAI,KAAKlB,cAAL,GAAsB,KAAKmB,cAAL,CAAoB,KAAKnB,cAAzB,CAA7C,CAHoB,CAIpB;AACA;;;AACA,QAAI,KAAKpE,cAAL,IAAuBsF,aAA3B,EAA0C;AACtC,YAAME,UAAU,GAAG,KAAKxF,cAAL,IAAuB,IAA1C;;AACA,UAAI,CAACwF,UAAL,EAAiB;AACb,aAAKX,iBAAL,CAAuBlkD,IAAvB,CAA4B,KAAK8kD,kBAAL,CAAwBH,aAAxB,CAA5B,EADa,CAEb;AACA;;AACA,cAAMI,OAAO,GAAG,KAAKC,eAAL,CAAqB5mE,aAArC;AACA2mE,QAAAA,OAAO,CAAC71D,KAAR,CAAcmS,SAAd,GAA0B0jD,OAAO,CAAC3iD,YAAR,GAAuB,IAAjD;AACH,OARqC,CAStC;AACA;;;AACA/Z,MAAAA,OAAO,CAACC,OAAR,GAAkB+vB,IAAlB,CAAuB,MAAM;AACzB,aAAKmrC,KAAL,CAAW7tD,OAAX,CAAmB,CAACorD,GAAD,EAAM9nE,KAAN,KAAiB8nE,GAAG,CAACjF,QAAJ,GAAe7iE,KAAK,KAAK0rE,aAA7D;;AACA,YAAI,CAACE,UAAL,EAAiB;AACb,eAAKd,mBAAL,CAAyB/jD,IAAzB,CAA8B2kD,aAA9B,EADa,CAEb;AACA;;AACA,eAAKK,eAAL,CAAqB5mE,aAArB,CAAmC8Q,KAAnC,CAAyCmS,SAAzC,GAAqD,EAArD;AACH;AACJ,OARD;AASH,KA1BmB,CA2BpB;;;AACA,SAAKmiD,KAAL,CAAW7tD,OAAX,CAAmB,CAACorD,GAAD,EAAM9nE,KAAN,KAAgB;AAC/B8nE,MAAAA,GAAG,CAAClzD,QAAJ,GAAe5U,KAAK,GAAG0rE,aAAvB,CAD+B,CAE/B;AACA;;AACA,UAAI,KAAKtF,cAAL,IAAuB,IAAvB,IAA+B0B,GAAG,CAAClzD,QAAJ,IAAgB,CAA/C,IAAoD,CAACkzD,GAAG,CAACnlB,MAA7D,EAAqE;AACjEmlB,QAAAA,GAAG,CAACnlB,MAAJ,GAAa+oB,aAAa,GAAG,KAAKtF,cAAlC;AACH;AACJ,KAPD;;AAQA,QAAI,KAAKA,cAAL,KAAwBsF,aAA5B,EAA2C;AACvC,WAAKtF,cAAL,GAAsBsF,aAAtB;AACA,WAAKjB,oBAAL,GAA4B,IAA5B;;AACA,WAAKhyD,kBAAL,CAAwBlT,YAAxB;AACH;AACJ;;AACDypC,EAAAA,kBAAkB,GAAG;AACjB,SAAKg9B,yBAAL;;AACA,SAAKC,qBAAL,GAFiB,CAGjB;AACA;;;AACA,SAAKtB,iBAAL,GAAyB,KAAKJ,KAAL,CAAW56D,OAAX,CAAmB/Q,SAAnB,CAA6B,MAAM;AACxD,YAAM8sE,aAAa,GAAG,KAAKC,cAAL,CAAoB,KAAKnB,cAAzB,CAAtB,CADwD,CAExD;AACA;;;AACA,UAAIkB,aAAa,KAAK,KAAKtF,cAA3B,EAA2C;AACvC,cAAM8F,IAAI,GAAG,KAAK3B,KAAL,CAAWtkB,OAAX,EAAb;;AACA,YAAIkmB,WAAJ;;AACA,aAAK,IAAIzlE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwlE,IAAI,CAAC9tE,MAAzB,EAAiCsI,CAAC,EAAlC,EAAsC;AAClC,cAAIwlE,IAAI,CAACxlE,CAAD,CAAJ,CAAQm8D,QAAZ,EAAsB;AAClB;AACA;AACA;AACA,iBAAK2H,cAAL,GAAsB,KAAKpE,cAAL,GAAsB1/D,CAA5C;AACA,iBAAK+jE,oBAAL,GAA4B,IAA5B;AACA0B,YAAAA,WAAW,GAAGD,IAAI,CAACxlE,CAAD,CAAlB;AACA;AACH;AACJ,SAbsC,CAcvC;AACA;AACA;;;AACA,YAAI,CAACylE,WAAD,IAAgBD,IAAI,CAACR,aAAD,CAAxB,EAAyC;AACrCt8D,UAAAA,OAAO,CAACC,OAAR,GAAkB+vB,IAAlB,CAAuB,MAAM;AACzB8sC,YAAAA,IAAI,CAACR,aAAD,CAAJ,CAAoB7I,QAApB,GAA+B,IAA/B;AACA,iBAAKoI,iBAAL,CAAuBlkD,IAAvB,CAA4B,KAAK8kD,kBAAL,CAAwBH,aAAxB,CAA5B;AACH,WAHD;AAIH;AACJ;;AACD,WAAKjzD,kBAAL,CAAwBlT,YAAxB;AACH,KA7BwB,CAAzB;AA8BH;AACD;;;AACAymE,EAAAA,yBAAyB,GAAG;AACxB;AACA;AACA;AACA,SAAKI,QAAL,CAAcz8D,OAAd,CAAsB3Q,IAAtB,CAA2BosC,yDAAS,CAAC,KAAKghC,QAAN,CAApC,EAAqDxtE,SAArD,CAAgEstE,IAAD,IAAU;AACrE,WAAK3B,KAAL,CAAWviD,KAAX,CAAiBkkD,IAAI,CAAChrD,MAAL,CAAY4mD,GAAG,IAAI;AAChC,eAAOA,GAAG,CAACpF,gBAAJ,KAAyB,IAAzB,IAAiC,CAACoF,GAAG,CAACpF,gBAA7C;AACH,OAFgB,CAAjB;;AAGA,WAAK6H,KAAL,CAAWjiB,eAAX;AACH,KALD;AAMH;;AACDhkD,EAAAA,WAAW,GAAG;AACV,SAAKimE,KAAL,CAAWlkB,OAAX;;AACA,SAAKskB,iBAAL,CAAuBlpD,WAAvB;;AACA,SAAKmpD,qBAAL,CAA2BnpD,WAA3B;AACH;AACD;;;AACA4qD,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKC,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBvF,yBAAhB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACID,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKwF,UAAT,EAAqB;AACjB,WAAKA,UAAL,CAAgBxF,gBAAhB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACIyF,EAAAA,QAAQ,CAACvsE,KAAD,EAAQ;AACZ,UAAMwsE,MAAM,GAAG,KAAKF,UAApB;;AACA,QAAIE,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAAChF,UAAP,GAAoBxnE,KAApB;AACH;AACJ;;AACDoF,EAAAA,aAAa,CAACpF,KAAD,EAAQ;AACjB,SAAKyqE,oBAAL,GAA4BzqE,KAA5B;AACA,SAAK+qE,WAAL,CAAiBhkD,IAAjB,CAAsB,KAAK8kD,kBAAL,CAAwB7rE,KAAxB,CAAtB;AACH;;AACD6rE,EAAAA,kBAAkB,CAAC7rE,KAAD,EAAQ;AACtB,UAAMkG,KAAK,GAAG,IAAIikE,iBAAJ,EAAd;AACAjkE,IAAAA,KAAK,CAAClG,KAAN,GAAcA,KAAd;;AACA,QAAI,KAAKuqE,KAAL,IAAc,KAAKA,KAAL,CAAWnsE,MAA7B,EAAqC;AACjC8H,MAAAA,KAAK,CAAC4hE,GAAN,GAAY,KAAKyC,KAAL,CAAWtkB,OAAX,GAAqBjmD,KAArB,CAAZ;AACH;;AACD,WAAOkG,KAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACI+lE,EAAAA,qBAAqB,GAAG;AACpB,QAAI,KAAKrB,qBAAT,EAAgC;AAC5B,WAAKA,qBAAL,CAA2BnpD,WAA3B;AACH;;AACD,SAAKmpD,qBAAL,GAA6Bz/B,4CAAK,CAAC,GAAG,KAAKo/B,KAAL,CAAWtjE,GAAX,CAAe6gE,GAAG,IAAIA,GAAG,CAACrP,aAA1B,CAAJ,CAAL,CAAmD75D,SAAnD,CAA6D,MAAM,KAAK6Z,kBAAL,CAAwBlT,YAAxB,EAAnE,CAA7B;AACH;AACD;;;AACAomE,EAAAA,cAAc,CAAC3rE,KAAD,EAAQ;AAClB;AACA;AACA;AACA,WAAO+pB,IAAI,CAACwD,GAAL,CAAS,KAAKg9C,KAAL,CAAWnsE,MAAX,GAAoB,CAA7B,EAAgC2rB,IAAI,CAACxgB,GAAL,CAASvJ,KAAK,IAAI,CAAlB,EAAqB,CAArB,CAAhC,CAAP;AACH;AACD;;;AACAysE,EAAAA,cAAc,CAAC/lE,CAAD,EAAI;AACd,WAAQ,iBAAgB,KAAKwkE,QAAS,IAAGxkE,CAAE,EAA3C;AACH;AACD;;;AACAgmE,EAAAA,gBAAgB,CAAChmE,CAAD,EAAI;AAChB,WAAQ,mBAAkB,KAAKwkE,QAAS,IAAGxkE,CAAE,EAA7C;AACH;AACD;AACJ;AACA;AACA;;;AACIimE,EAAAA,wBAAwB,CAACC,SAAD,EAAY;AAChC,QAAI,CAAC,KAAKvB,cAAN,IAAwB,CAAC,KAAKX,qBAAlC,EAAyD;AACrD;AACH;;AACD,UAAMoB,OAAO,GAAG,KAAKC,eAAL,CAAqB5mE,aAArC;AACA2mE,IAAAA,OAAO,CAAC71D,KAAR,CAAcd,MAAd,GAAuB,KAAKu1D,qBAAL,GAA6B,IAApD,CALgC,CAMhC;AACA;;AACA,QAAI,KAAKqB,eAAL,CAAqB5mE,aAArB,CAAmC0nE,YAAvC,EAAqD;AACjDf,MAAAA,OAAO,CAAC71D,KAAR,CAAcd,MAAd,GAAuBy3D,SAAS,GAAG,IAAnC;AACH;AACJ;AACD;;;AACAE,EAAAA,2BAA2B,GAAG;AAC1B,UAAMhB,OAAO,GAAG,KAAKC,eAAL,CAAqB5mE,aAArC;AACA,SAAKulE,qBAAL,GAA6BoB,OAAO,CAAC3iD,YAArC;AACA2iD,IAAAA,OAAO,CAAC71D,KAAR,CAAcd,MAAd,GAAuB,EAAvB;AACA,SAAK61D,aAAL,CAAmBjkD,IAAnB;AACH;AACD;;;AACA+mC,EAAAA,YAAY,CAACga,GAAD,EAAMiF,SAAN,EAAiB/sE,KAAjB,EAAwB;AAChC,QAAI,CAAC8nE,GAAG,CAACjkE,QAAT,EAAmB;AACf,WAAK+6C,aAAL,GAAqBmuB,SAAS,CAACvF,UAAV,GAAuBxnE,KAA5C;AACH;AACJ;AACD;;;AACA+iD,EAAAA,YAAY,CAAC+kB,GAAD,EAAM9nE,KAAN,EAAa;AACrB,QAAI8nE,GAAG,CAACjkE,QAAR,EAAkB;AACd,aAAO,IAAP;AACH;;AACD,UAAMmpE,WAAW,GAAG,KAAKvC,oBAAL,IAA6B,KAAK7rB,aAAtD;AACA,WAAO5+C,KAAK,KAAKgtE,WAAV,GAAwB,CAAxB,GAA4B,CAAC,CAApC;AACH;AACD;;;AACAC,EAAAA,gBAAgB,CAACC,WAAD,EAAcltE,KAAd,EAAqB;AACjC;AACA;AACA;AACA;AACA,QAAIktE,WAAW,IAAIA,WAAW,KAAK,OAA/B,IAA0CA,WAAW,KAAK,OAA9D,EAAuE;AACnE,WAAKZ,UAAL,CAAgB9E,UAAhB,GAA6BxnE,KAA7B;AACH;AACJ;;AA1SgD;;AA4SrDqqE,gBAAgB,CAACjoE,IAAjB;AAAA,mBAA6GioE,gBAA7G,EA52C4FnqE,+DA42C5F,CAA+IA,qDAA/I,GA52C4FA,+DA42C5F,CAAyKA,4DAAzK,GA52C4FA,+DA42C5F,CAA0MklE,eAA1M,MA52C4FllE,+DA42C5F,CAAsPsrC,gEAAtP;AAAA;;AACA6+B,gBAAgB,CAAChoE,IAAjB,kBA72C4FnC,+DA62C5F;AAAA,QAAiGmqE,gBAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA72C4FnqE,wEA62C5F;AAAA;;AACA;AAAA,qDA92C4FA,+DA82C5F,CAA2FmqE,gBAA3F,EAAyH,CAAC;AAC9G/nE,IAAAA,IAAI,EAAEnC,oDAASA;AAD+F,GAAD,CAAzH,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEmC,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAA1B,EAA0D;AAAEhF,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AACvHnG,QAAAA,IAAI,EAAEsI,iDADiH;AAEvH9M,QAAAA,IAAI,EAAE,CAACsnE,eAAD;AAFiH,OAAD,EAGvH;AACC9iE,QAAAA,IAAI,EAAE/B,mDAAQA;AADf,OAHuH;AAA/B,KAA1D,EAK3B;AAAE+B,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADoB,OAAD,EAElC;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC0tC,gEAAD;AAFP,OAFkC;AAA/B,KAL2B,CAAP;AAUlB,GAZxB,EAY0C;AAAE2/B,IAAAA,aAAa,EAAE,CAAC;AAC5C7oE,MAAAA,IAAI,EAAE3B,gDAAKA;AADiC,KAAD,CAAjB;AAE1Bi+C,IAAAA,aAAa,EAAE,CAAC;AAChBt8C,MAAAA,IAAI,EAAE3B,gDAAKA;AADK,KAAD,CAFW;AAI1BkqE,IAAAA,cAAc,EAAE,CAAC;AACjBvoE,MAAAA,IAAI,EAAE3B,gDAAKA;AADM,KAAD,CAJU;AAM1BgkE,IAAAA,iBAAiB,EAAE,CAAC;AACpBriE,MAAAA,IAAI,EAAE3B,gDAAKA;AADS,KAAD,CANO;AAQ1ByqE,IAAAA,eAAe,EAAE,CAAC;AAClB9oE,MAAAA,IAAI,EAAE3B,gDAAKA;AADO,KAAD,CARS;AAU1BwlE,IAAAA,iBAAiB,EAAE,CAAC;AACpB7jE,MAAAA,IAAI,EAAE3B,gDAAKA;AADS,KAAD,CAVO;AAY1B6qE,IAAAA,eAAe,EAAE,CAAC;AAClBlpE,MAAAA,IAAI,EAAE3B,gDAAKA;AADO,KAAD,CAZS;AAc1BmqE,IAAAA,mBAAmB,EAAE,CAAC;AACtBxoE,MAAAA,IAAI,EAAE8I,iDAAMA;AADU,KAAD,CAdK;AAgB1B2/D,IAAAA,WAAW,EAAE,CAAC;AACdzoE,MAAAA,IAAI,EAAE8I,iDAAMA;AADE,KAAD,CAhBa;AAkB1B4/D,IAAAA,aAAa,EAAE,CAAC;AAChB1oE,MAAAA,IAAI,EAAE8I,iDAAMA;AADI,KAAD,CAlBW;AAoB1B6/D,IAAAA,iBAAiB,EAAE,CAAC;AACpB3oE,MAAAA,IAAI,EAAE8I,iDAAMA;AADQ,KAAD;AApBO,GAZ1C;AAAA;AAmCA;AACA;AACA;AACA;AACA;;;AACA,MAAM+hE,WAAN,SAA0B9C,gBAA1B,CAA2C;AACvCvoE,EAAAA,WAAW,CAAC8L,UAAD,EAAag7C,iBAAb,EAAgC0hB,aAAhC,EAA+C5b,aAA/C,EAA8D;AACrE,UAAM9gD,UAAN,EAAkBg7C,iBAAlB,EAAqC0hB,aAArC,EAAoD5b,aAApD;AACH;;AAHsC;;AAK3Cye,WAAW,CAAC/qE,IAAZ;AAAA,mBAAwG+qE,WAAxG,EA35C4FjtE,+DA25C5F,CAAqIA,qDAArI,GA35C4FA,+DA25C5F,CAA+JA,4DAA/J,GA35C4FA,+DA25C5F,CAAgMklE,eAAhM,MA35C4FllE,+DA25C5F,CAA4OsrC,gEAA5O;AAAA;;AACA2hC,WAAW,CAACxlE,IAAZ,kBA55C4FzH,+DA45C5F;AAAA,QAA4FitE,WAA5F;AAAA;AAAA;AAAA;AA55C4FjtE,MAAAA,4DA45C5F,WAKwDuiE,MALxD;AAAA;;AAAA;AAAA;;AA55C4FviE,MAAAA,4DA45C5F,MA55C4FA,yDA45C5F;AAAA;AAAA;AAAA;AAAA;AA55C4FA,MAAAA,yDA45C5F;AA55C4FA,MAAAA,yDA45C5F;AAAA;;AAAA;AAAA;;AA55C4FA,MAAAA,4DA45C5F,MA55C4FA,yDA45C5F;AA55C4FA,MAAAA,4DA45C5F,MA55C4FA,yDA45C5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA55C4FA,MAAAA,yDA45C5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA55C4FA,gEA45C5F,CAAoY,CAC5X;AACI0H,IAAAA,OAAO,EAAE46D,aADb;AAEI36D,IAAAA,WAAW,EAAEslE;AAFjB,GAD4X,CAApY,GA55C4FjtE,wEA45C5F;AAAA;AAAA;AAAA;AAAA;AAAA;AA55C4FA,MAAAA,4DAi6CkR,2BAL9W;AA55C4FA,MAAAA,wDAi6Cge;AAAA,eAAiB,yBAAjB;AAAA;AAAA;AAAA,QAL5jB;AA55C4FA,MAAAA,wDAi6C6kB,gDALzqB;AA55C4FA,MAAAA,0DAi6Cy5D,EALr/D;AA55C4FA,MAAAA,4DAi6C86D,gBAL1gE;AA55C4FA,MAAAA,wDAi6CujE,kEALnpE;AA55C4FA,MAAAA,0DAi6C6yF,EALz4F;AAAA;;AAAA;AA55C4FA,MAAAA,wDAi6C6T,yHALzZ;AA55C4FA,MAAAA,uDAi6CiuB,GAL7zB;AA55C4FA,MAAAA,wDAi6CiuB,sBAL7zB;AA55C4FA,MAAAA,uDAi6Cw9D,GALpjE;AA55C4FA,MAAAA,yDAi6Cw9D,oEALpjE;AA55C4FA,MAAAA,uDAi6CwnE,GALptE;AA55C4FA,MAAAA,wDAi6CwnE,sBALptE;AAAA;AAAA;AAAA,iBAKo8I+pE,YALp8I,EAKokJ5F,UALpkJ,EAKkoJnkB,oDALloJ,EAK8uJolB,kBAL9uJ,EAKo0JjkE,6DALp0J,EAKqjKI,+DALrjK,EAKgrKy+C,oDALhrK,EAK6vKA,iDAL7vK,EAKg1K8gB,gEALh1K;AAAA;AAAA;AAAA;;AAMA;AAAA,qDAl6C4F9gE,+DAk6C5F,CAA2FitE,WAA3F,EAAoH,CAAC;AACzG7qE,IAAAA,IAAI,EAAEjC,oDADmG;AAEzGvC,IAAAA,IAAI,EAAE,CAAC;AAAEyE,MAAAA,QAAQ,EAAE,eAAZ;AAA6B+F,MAAAA,QAAQ,EAAE,aAAvC;AAAsDJ,MAAAA,aAAa,EAAE5H,iEAArE;AAA6F4Q,MAAAA,eAAe,EAAEpG,0EAA9G;AAA+IwC,MAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,eAAV,CAAvJ;AAAmLjF,MAAAA,SAAS,EAAE,CACzL;AACIT,QAAAA,OAAO,EAAE46D,aADb;AAEI36D,QAAAA,WAAW,EAAEslE;AAFjB,OADyL,CAA9L;AAKI/kE,MAAAA,IAAI,EAAE;AACL,iBAAS,eADJ;AAEL,gDAAwC,eAFnC;AAGL,iDAAyC;AAHpC,OALV;AASIG,MAAAA,QAAQ,EAAE,qiFATd;AASqjFC,MAAAA,MAAM,EAAE,CAAC,+gDAAD;AAT7jF,KAAD;AAFmG,GAAD,CAApH,EAY4B,YAAY;AAAE,WAAO,CAAC;AAAElG,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAA1B,EAA0D;AAAEhF,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AACvHnG,QAAAA,IAAI,EAAEsI,iDADiH;AAEvH9M,QAAAA,IAAI,EAAE,CAACsnE,eAAD;AAFiH,OAAD,EAGvH;AACC9iE,QAAAA,IAAI,EAAE/B,mDAAQA;AADf,OAHuH;AAA/B,KAA1D,EAK3B;AAAE+B,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADoB,OAAD,EAElC;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC0tC,gEAAD;AAFP,OAFkC;AAA/B,KAL2B,CAAP;AAUlB,GAtBxB,EAsB0C;AAAE4gC,IAAAA,QAAQ,EAAE,CAAC;AACvC9pE,MAAAA,IAAI,EAAE+I,0DADiC;AAEvCvN,MAAAA,IAAI,EAAE,CAAC2kE,MAAD,EAAS;AAAEv+C,QAAAA,WAAW,EAAE;AAAf,OAAT;AAFiC,KAAD,CAAZ;AAG1B6nD,IAAAA,eAAe,EAAE,CAAC;AAClBzpE,MAAAA,IAAI,EAAE7B,oDADY;AAElB3C,MAAAA,IAAI,EAAE,CAAC,gBAAD;AAFY,KAAD,CAHS;AAM1BwuE,IAAAA,UAAU,EAAE,CAAC;AACbhqE,MAAAA,IAAI,EAAE7B,oDADO;AAEb3C,MAAAA,IAAI,EAAE,CAAC,WAAD;AAFO,KAAD;AANc,GAtB1C;AAAA;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAI8D,YAAY,GAAG,CAAnB;AACA;AACA;AACA;AACA;;AACA,MAAM0rE,cAAN,SAA6B1H,qBAA7B,CAAmD;AAC/C9jE,EAAAA,WAAW,CAAC8L,UAAD,EAAaoI,GAAb,EAAkBunC,MAAlB,EAA0BqL,iBAA1B,EAA6CgG,aAA7C,EAA4Dkb,QAA5D,EAAsEpb,aAAtE,EAAqF;AAC5F,UAAM9gD,UAAN,EAAkBg7C,iBAAlB,EAAqCgG,aAArC,EAAoD54C,GAApD,EAAyDunC,MAAzD,EAAiEusB,QAAjE,EAA2Epb,aAA3E;AACA,SAAKqb,cAAL,GAAsB,KAAtB;AACA;;AACA,SAAKnnE,KAAL,GAAa,SAAb;AACH;AACD;;;AACmB,MAAf4oE,eAAe,GAAG;AAClB,WAAO,KAAKC,gBAAZ;AACH;;AACkB,MAAfD,eAAe,CAAC3sE,KAAD,EAAQ;AACvB,UAAMgP,SAAS,GAAG,KAAKpL,WAAL,CAAiB0C,aAAjB,CAA+B0I,SAAjD;AACAA,IAAAA,SAAS,CAACqI,MAAV,CAAkB,kBAAiB,KAAKs1D,eAAgB,EAAxD;;AACA,QAAI3sE,KAAJ,EAAW;AACPgP,MAAAA,SAAS,CAAClE,GAAV,CAAe,kBAAiB9K,KAAM,EAAtC;AACH;;AACD,SAAK4sE,gBAAL,GAAwB5sE,KAAxB;AACH;AACD;;;AACiB,MAAbmrE,aAAa,GAAG;AAChB,WAAO,KAAKD,cAAZ;AACH;;AACgB,MAAbC,aAAa,CAACnrE,KAAD,EAAQ;AACrB,SAAKkrE,cAAL,GAAsB9pE,6EAAqB,CAACpB,KAAD,CAA3C;AACH;;AACD4oE,EAAAA,aAAa,GAAG,CACZ;AACH;;AACDz4B,EAAAA,kBAAkB,GAAG;AACjB;AACA;AACA,SAAKg4B,MAAL,CAAYr3D,OAAZ,CAAoB3Q,IAApB,CAAyBosC,yDAAS,CAAC,IAAD,CAAlC,EAA0C1/B,0DAAS,CAAC,KAAKmD,UAAN,CAAnD,EAAsEjQ,SAAtE,CAAgF,MAAM;AAClF,WAAK2uE,gBAAL;AACH,KAFD;;AAGA,UAAMv+B,kBAAN;AACH;AACD;;;AACAu+B,EAAAA,gBAAgB,GAAG;AACf,QAAI,CAAC,KAAKvG,MAAV,EAAkB;AACd;AACH;;AACD,UAAMtjD,KAAK,GAAG,KAAKsjD,MAAL,CAAY/gB,OAAZ,EAAd;;AACA,SAAK,IAAIv/C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgd,KAAK,CAACtlB,MAA1B,EAAkCsI,CAAC,EAAnC,EAAuC;AACnC,UAAIgd,KAAK,CAAChd,CAAD,CAAL,CAASinD,MAAb,EAAqB;AACjB,aAAK/O,aAAL,GAAqBl4C,CAArB;;AACA,aAAK+R,kBAAL,CAAwBlT,YAAxB;;AACA,YAAI,KAAKioE,QAAT,EAAmB;AACf,eAAKA,QAAL,CAAcC,YAAd,GAA6B/pD,KAAK,CAAChd,CAAD,CAAL,CAAS/C,EAAtC;AACH;;AACD;AACH;AACJ,KAdc,CAef;;;AACA,SAAKi7C,aAAL,GAAqB,CAAC,CAAtB;;AACA,SAAK6qB,OAAL,CAAa1H,IAAb;AACH;;AACD2L,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKF,QAAL,GAAgB,SAAhB,GAA4B,KAAK/qE,WAAL,CAAiB0C,aAAjB,CAA+B+I,YAA/B,CAA4C,MAA5C,CAAnC;AACH;;AA3D8C;;AA6DnDo/D,cAAc,CAAClrE,IAAf;AAAA,mBAA2GkrE,cAA3G,EA7gD4FptE,+DA6gD5F,CAA2IA,qDAA3I,GA7gD4FA,+DA6gD5F,CAAqKiB,8DAArK,MA7gD4FjB,+DA6gD5F,CAAmNA,iDAAnN,GA7gD4FA,+DA6gD5F,CAAyOA,4DAAzO,GA7gD4FA,+DA6gD5F,CAA0QigD,kEAA1Q,GA7gD4FjgD,+DA6gD5F,CAAySW,4DAAzS,GA7gD4FX,+DA6gD5F,CAAiUsrC,gEAAjU;AAAA;;AACA8hC,cAAc,CAACjrE,IAAf,kBA9gD4FnC,+DA8gD5F;AAAA,QAA+FotE,cAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA9gD4FptE,wEA8gD5F;AAAA;;AACA;AAAA,qDA/gD4FA,+DA+gD5F,CAA2FotE,cAA3F,EAAuH,CAAC;AAC5GhrE,IAAAA,IAAI,EAAEnC,oDAASA;AAD6F,GAAD,CAAvH,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEmC,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEnB,8DAAR;AAA2BsH,MAAAA,UAAU,EAAE,CAAC;AAC/FnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADiF,OAAD;AAAvC,KAA1B,EAE3B;AAAE+B,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAF2B,EAEN;AAAE3I,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAFM,EAE0B;AAAEhF,MAAAA,IAAI,EAAE69C,kEAAkBn8B;AAA1B,KAF1B,EAEwD;AAAE1hB,MAAAA,IAAI,EAAEzB,4DAAWwG;AAAnB,KAFxD,EAE+E;AAAE/E,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC5InG,QAAAA,IAAI,EAAE/B,mDAAQA;AAD8H,OAAD,EAE5I;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC0tC,gEAAD;AAFP,OAF4I;AAA/B,KAF/E,CAAP;AAOlB,GATxB,EAS0C;AAAEggC,IAAAA,eAAe,EAAE,CAAC;AAC9ClpE,MAAAA,IAAI,EAAE3B,gDAAKA;AADmC,KAAD,CAAnB;AAE1BqpE,IAAAA,aAAa,EAAE,CAAC;AAChB1nE,MAAAA,IAAI,EAAE3B,gDAAKA;AADK,KAAD,CAFW;AAI1BiC,IAAAA,KAAK,EAAE,CAAC;AACRN,MAAAA,IAAI,EAAE3B,gDAAKA;AADH,KAAD,CAJmB;AAM1B6sE,IAAAA,QAAQ,EAAE,CAAC;AACXlrE,MAAAA,IAAI,EAAE3B,gDAAKA;AADA,KAAD;AANgB,GAT1C;AAAA;AAkBA;AACA;AACA;AACA;;;AACA,MAAMgtE,SAAN,SAAwBL,cAAxB,CAAuC;AACnCxrE,EAAAA,WAAW,CAAC8L,UAAD,EAAaoI,GAAb,EAAkBunC,MAAlB,EAA0BqL,iBAA1B,EAA6CgG,aAA7C,EAA4Dkb,QAA5D,EAAsEpb,aAAtE,EAAqF;AAC5F,UAAM9gD,UAAN,EAAkBoI,GAAlB,EAAuBunC,MAAvB,EAA+BqL,iBAA/B,EAAkDgG,aAAlD,EAAiEkb,QAAjE,EAA2Epb,aAA3E;AACH;;AAHkC;;AAKvCif,SAAS,CAACvrE,IAAV;AAAA,mBAAsGurE,SAAtG,EA1iD4FztE,+DA0iD5F,CAAiIA,qDAAjI,GA1iD4FA,+DA0iD5F,CAA2JiB,8DAA3J,MA1iD4FjB,+DA0iD5F,CAAyMA,iDAAzM,GA1iD4FA,+DA0iD5F,CAA+NA,4DAA/N,GA1iD4FA,+DA0iD5F,CAAgQigD,kEAAhQ,GA1iD4FjgD,+DA0iD5F,CAA+RW,4DAA/R,GA1iD4FX,+DA0iD5F,CAAuTsrC,gEAAvT;AAAA;;AACAmiC,SAAS,CAAChmE,IAAV,kBA3iD4FzH,+DA2iD5F;AAAA,QAA0FytE,SAA1F;AAAA;AAAA;AAAA;AA3iD4FztE,MAAAA,4DA2iD5F,WAA6nB0tE,UAA7nB;AAAA;;AAAA;AAAA;;AA3iD4F1tE,MAAAA,4DA2iD5F,MA3iD4FA,yDA2iD5F;AAAA;AAAA;AAAA;AAAA;AA3iD4FA,MAAAA,yDA2iD5F,CAAouBwhE,SAApuB;AA3iD4FxhE,MAAAA,yDA2iD5F;AA3iD4FA,MAAAA,yDA2iD5F;AA3iD4FA,MAAAA,yDA2iD5F;AA3iD4FA,MAAAA,yDA2iD5F;AA3iD4FA,MAAAA,yDA2iD5F;AAAA;;AAAA;AAAA;;AA3iD4FA,MAAAA,4DA2iD5F,MA3iD4FA,yDA2iD5F;AA3iD4FA,MAAAA,4DA2iD5F,MA3iD4FA,yDA2iD5F;AA3iD4FA,MAAAA,4DA2iD5F,MA3iD4FA,yDA2iD5F;AA3iD4FA,MAAAA,4DA2iD5F,MA3iD4FA,yDA2iD5F;AA3iD4FA,MAAAA,4DA2iD5F,MA3iD4FA,yDA2iD5F;AA3iD4FA,MAAAA,4DA2iD5F,MA3iD4FA,yDA2iD5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3iD4FA,MAAAA,yDA2iD5F;AA3iD4FA,MAAAA,yDA2iD5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA3iD4FA,wEA2iD5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3iD4FA,MAAAA,6DA2iD5F;AA3iD4FA,MAAAA,4DA2iDoyC,mBAAh4C;AA3iD4FA,MAAAA,wDA2iDyrD;AAAA,eAAU,0BAAsB,QAAtB,CAAV;AAAA;AAAA,eAAgE,0BAAsB,QAAtB,SAAhE;AAAA;AAAA,eAA6H,mBAA7H;AAAA,QAArxD;AA3iD4FA,MAAAA,uDA2iD40D,aAAx6D;AA3iD4FA,MAAAA,0DA2iDq4D,EAAj+D;AA3iD4FA,MAAAA,4DA2iDk5D,gBAA9+D;AA3iD4FA,MAAAA,wDA2iD08D;AAAA,eAAY,0BAAZ;AAAA,QAAtiE;AA3iD4FA,MAAAA,4DA2iDm/D,gBAA/kE;AA3iD4FA,MAAAA,wDA2iDonE;AAAA,eAAsB,uBAAtB;AAAA,QAAhtE;AA3iD4FA,MAAAA,4DA2iDsqE,gBAAlwE;AA3iD4FA,MAAAA,0DA2iDytE,GAArzE;AA3iD4FA,MAAAA,0DA2iDwvE,EAAp1E;AA3iD4FA,MAAAA,uDA2iDowE,mBAAh2E;AA3iD4FA,MAAAA,0DA2iDmyE,IAA/3E;AA3iD4FA,MAAAA,4DA2iDqzE,qBAAj5E;AA3iD4FA,MAAAA,wDA2iDksF;AAAA,eAAc,0BAAsB,OAAtB,SAAd;AAAA;AAAA,eAAuE,0BAAsB,OAAtB,CAAvE;AAAA;AAAA,eAA2H,mBAA3H;AAAA,QAA9xF;AA3iD4FA,MAAAA,uDA2iDm1F,cAA/6F;AA3iD4FA,MAAAA,0DA2iD44F,EAAx+F;AAAA;;AAAA;AA3iD4FA,MAAAA,yDA2iD6jD,gEAAzpD;AA3iD4FA,MAAAA,wDA2iDy/C,kHAArlD;AA3iD4FA,MAAAA,uDA2iDyhE,GAArnE;AA3iD4FA,MAAAA,yDA2iDyhE,oEAArnE;AA3iD4FA,MAAAA,uDA2iDkjF,GAA9oF;AA3iD4FA,MAAAA,yDA2iDkjF,+DAA9oF;AA3iD4FA,MAAAA,wDA2iD++E,gHAA3kF;AAAA;AAAA;AAAA,iBAAm1LmB,6DAAn1L,EAAokME,sEAApkM,EAAyvMmgE,SAAzvM;AAAA;AAAA;AAAA;;AACA;AAAA,qDA5iD4FxhE,+DA4iD5F,CAA2FytE,SAA3F,EAAkH,CAAC;AACvGrrE,IAAAA,IAAI,EAAEjC,oDADiG;AAEvGvC,IAAAA,IAAI,EAAE,CAAC;AAAEyE,MAAAA,QAAQ,EAAE,mBAAZ;AAAiC+F,MAAAA,QAAQ,EAAE,yBAA3C;AAAsEgF,MAAAA,MAAM,EAAE,CAAC,OAAD,CAA9E;AAAyFlF,MAAAA,IAAI,EAAE;AAC1F,uBAAe,YAD2E;AAE1F,iBAAS,gCAFiF;AAG1F,8DAAsD,yBAHoC;AAI1F,sCAA8B,gCAJ4D;AAK1F,+BAAuB,wCALmE;AAM1F,8BAAsB,oBANoE;AAO1F,4BAAoB;AAPsE,OAA/F;AAQIF,MAAAA,aAAa,EAAE5H,iEARnB;AAQ2C4Q,MAAAA,eAAe,EAAEpG,0EAR5D;AAQ6FvC,MAAAA,QAAQ,EAAE,qnDARvG;AAQ8tDC,MAAAA,MAAM,EAAE,CAAC,4zFAAD;AARtuD,KAAD;AAFiG,GAAD,CAAlH,EAW4B,YAAY;AAAE,WAAO,CAAC;AAAElG,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAD,EAA0B;AAAE9E,MAAAA,IAAI,EAAEnB,8DAAR;AAA2BsH,MAAAA,UAAU,EAAE,CAAC;AAC/FnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADiF,OAAD;AAAvC,KAA1B,EAE3B;AAAE+B,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAF2B,EAEN;AAAE3I,MAAAA,IAAI,EAAEpC,4DAAoBoH;AAA5B,KAFM,EAE0B;AAAEhF,MAAAA,IAAI,EAAE69C,kEAAkBn8B;AAA1B,KAF1B,EAEwD;AAAE1hB,MAAAA,IAAI,EAAEzB,4DAAWwG;AAAnB,KAFxD,EAE+E;AAAE/E,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC5InG,QAAAA,IAAI,EAAE/B,mDAAQA;AAD8H,OAAD,EAE5I;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC0tC,gEAAD;AAFP,OAF4I;AAA/B,KAF/E,CAAP;AAOlB,GAlBxB,EAkB0C;AAAEw7B,IAAAA,MAAM,EAAE,CAAC;AACrC1kE,MAAAA,IAAI,EAAE+I,0DAD+B;AAErCvN,MAAAA,IAAI,EAAE,CAACsC,yDAAU,CAAC,MAAMwtE,UAAP,CAAX,EAA+B;AAAE1pD,QAAAA,WAAW,EAAE;AAAf,OAA/B;AAF+B,KAAD,CAAV;AAG1BulD,IAAAA,OAAO,EAAE,CAAC;AACVnnE,MAAAA,IAAI,EAAE7B,oDADI;AAEV3C,MAAAA,IAAI,EAAE,CAAC4jE,SAAD,EAAY;AAAEh5D,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAFI,KAAD,CAHiB;AAM1Bs/D,IAAAA,iBAAiB,EAAE,CAAC;AACpB1lE,MAAAA,IAAI,EAAE7B,oDADc;AAEpB3C,MAAAA,IAAI,EAAE,CAAC,kBAAD,EAAqB;AAAE4K,QAAAA,MAAM,EAAE;AAAV,OAArB;AAFc,KAAD,CANO;AAS1B2/D,IAAAA,QAAQ,EAAE,CAAC;AACX/lE,MAAAA,IAAI,EAAE7B,oDADK;AAEX3C,MAAAA,IAAI,EAAE,CAAC,SAAD,EAAY;AAAE4K,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAFK,KAAD,CATgB;AAY1BugE,IAAAA,aAAa,EAAE,CAAC;AAChB3mE,MAAAA,IAAI,EAAE7B,oDADU;AAEhB3C,MAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB;AAAE4K,QAAAA,MAAM,EAAE;AAAV,OAAjB;AAFU,KAAD,CAZW;AAe1Bg+D,IAAAA,cAAc,EAAE,CAAC;AACjBpkE,MAAAA,IAAI,EAAE7B,oDADW;AAEjB3C,MAAAA,IAAI,EAAE,CAAC,eAAD;AAFW,KAAD,CAfU;AAkB1B0oE,IAAAA,kBAAkB,EAAE,CAAC;AACrBlkE,MAAAA,IAAI,EAAE7B,oDADe;AAErB3C,MAAAA,IAAI,EAAE,CAAC,mBAAD;AAFe,KAAD;AAlBM,GAlB1C;AAAA,MAwCA;;;AACA,MAAM+vE,oBAAoB,GAAG7c,qEAAa,CAACjR,0EAAkB,CAACC,qEAAa,CAAC,MAAM,EAAP,CAAd,CAAnB,CAA1C;AAEA;;;AACA,MAAM8tB,eAAN,SAA8BD,oBAA9B,CAAmD;AAC/C/rE,EAAAA,WAAW,CAACisE,UAAD;AACX;AAAqBngE,EAAAA,UADV,EACsBogE,mBADtB,EAC2C1a,QAD3C,EACqDlR,aADrD,EACoEsM,aADpE,EACmF;AAC1F;AACA,SAAKqf,UAAL,GAAkBA,UAAlB;AACA,SAAKngE,UAAL,GAAkBA,UAAlB;AACA,SAAKw0C,aAAL,GAAqBA,aAArB;AACA;;AACA,SAAK6rB,SAAL,GAAiB,KAAjB;AACA;;AACA,SAAKtqE,EAAL,GAAW,gBAAe/B,YAAY,EAAG,EAAzC;AACA,SAAKssE,YAAL,GAAoBF,mBAAmB,IAAI,EAA3C;AACA,SAAK1a,QAAL,GAAgBhsB,QAAQ,CAACgsB,QAAD,CAAR,IAAsB,CAAtC;;AACA,QAAI5E,aAAa,KAAK,gBAAtB,EAAwC;AACpC,WAAKwf,YAAL,CAAkBC,SAAlB,GAA8B;AAAEC,QAAAA,aAAa,EAAE,CAAjB;AAAoBC,QAAAA,YAAY,EAAE;AAAlC,OAA9B;AACH;AACJ;AACD;;;AACU,MAAN1gB,MAAM,GAAG;AACT,WAAO,KAAKsgB,SAAZ;AACH;;AACS,MAANtgB,MAAM,CAAC9uD,KAAD,EAAQ;AACd,UAAM69B,QAAQ,GAAGz8B,6EAAqB,CAACpB,KAAD,CAAtC;;AACA,QAAI69B,QAAQ,KAAK,KAAKuxC,SAAtB,EAAiC;AAC7B,WAAKA,SAAL,GAAiBvxC,QAAjB;;AACA,WAAKqxC,UAAL,CAAgBR,gBAAhB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;AACsB,MAAde,cAAc,GAAG;AACjB,WAAQ,KAAKzqE,QAAL,IACJ,KAAKmmE,aADD,IAEJ,KAAK+D,UAAL,CAAgB/D,aAFZ,IAGJ,CAAC,CAAC,KAAKkE,YAAL,CAAkBrqE,QAHxB;AAIH;AACD;;;AACAmB,EAAAA,KAAK,GAAG;AACJ,SAAK4I,UAAL,CAAgBzI,aAAhB,CAA8BH,KAA9B;AACH;;AACDujB,EAAAA,eAAe,GAAG;AACd,SAAK65B,aAAL,CAAmB18B,OAAnB,CAA2B,KAAK9X,UAAhC;AACH;;AACDtJ,EAAAA,WAAW,GAAG;AACV,SAAK89C,aAAL,CAAmB37B,cAAnB,CAAkC,KAAK7Y,UAAvC;AACH;;AACD2gE,EAAAA,YAAY,GAAG;AACX;AACA;AACA,SAAKR,UAAL,CAAgBvG,UAAhB,GAA6B,KAAKuG,UAAL,CAAgB/G,MAAhB,CAAuB/gB,OAAvB,GAAiChyC,OAAjC,CAAyC,IAAzC,CAA7B;AACH;;AACDuyC,EAAAA,cAAc,CAACtgD,KAAD,EAAQ;AAClB,QAAI,KAAK6nE,UAAL,CAAgBP,QAAhB,IAA4BtnE,KAAK,CAACugD,OAAN,KAAkBhH,yDAAlD,EAAyD;AACrD,WAAK7xC,UAAL,CAAgBzI,aAAhB,CAA8BiB,KAA9B;AACH;AACJ;;AACDooE,EAAAA,gBAAgB,GAAG;AACf,WAAO,KAAKT,UAAL,CAAgBP,QAAhB,GACD,KAAKO,UAAL,CAAgBP,QAAhB,EAA0B7pE,EADzB,GAED,KAAKiK,UAAL,CAAgBzI,aAAhB,CAA8B+I,YAA9B,CAA2C,eAA3C,CAFN;AAGH;;AACDugE,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKV,UAAL,CAAgBP,QAApB,EAA8B;AAC1B,aAAO,KAAK7f,MAAL,GAAc,MAAd,GAAuB,OAA9B;AACH,KAFD,MAGK;AACD,aAAO,KAAK//C,UAAL,CAAgBzI,aAAhB,CAA8B+I,YAA9B,CAA2C,eAA3C,CAAP;AACH;AACJ;;AACDwgE,EAAAA,eAAe,GAAG;AACd,WAAO,KAAK/gB,MAAL,IAAe,CAAC,KAAKogB,UAAL,CAAgBP,QAAhC,GAA2C,MAA3C,GAAoD,IAA3D;AACH;;AACDE,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKK,UAAL,CAAgBP,QAAhB,GAA2B,KAA3B,GAAmC,KAAK5/D,UAAL,CAAgBzI,aAAhB,CAA8B+I,YAA9B,CAA2C,MAA3C,CAA1C;AACH;;AACD60C,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKgrB,UAAL,CAAgBP,QAApB,EAA8B;AAC1B,aAAO,KAAKS,SAAL,GAAiB,CAAjB,GAAqB,CAAC,CAA7B;AACH,KAFD,MAGK;AACD,aAAO,KAAK3a,QAAZ;AACH;AACJ;;AApF8C;;AAsFnDwa,eAAe,CAAC1rE,IAAhB;AAAA,mBAA4G0rE,eAA5G,EA9qD4F5tE,+DA8qD5F,CAA6IotE,cAA7I,GA9qD4FptE,+DA8qD5F,CAAwKA,qDAAxK,GA9qD4FA,+DA8qD5F,CAAkMkhE,6EAAlM,MA9qD4FlhE,+DA8qD5F,CAAwP,UAAxP,GA9qD4FA,+DA8qD5F,CAAgSuB,4DAAhS,GA9qD4FvB,+DA8qD5F,CAA4TsrC,gEAA5T;AAAA;;AACAsiC,eAAe,CAACzrE,IAAhB,kBA/qD4FnC,+DA+qD5F;AAAA,QAAgG4tE,eAAhG;AAAA;AAAA;AAAA;AAAA;AAAA,aA/qD4F5tE,wEA+qD5F;AAAA;;AACA;AAAA,qDAhrD4FA,+DAgrD5F,CAA2F4tE,eAA3F,EAAwH,CAAC;AAC7GxrE,IAAAA,IAAI,EAAEnC,oDAASA;AAD8F,GAAD,CAAxH,EAE4B,YAAY;AAAE,WAAO,CAAC;AAAEmC,MAAAA,IAAI,EAAEgrE;AAAR,KAAD,EAA2B;AAAEhrE,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAA3B,EAAoD;AAAE9E,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AACjHnG,QAAAA,IAAI,EAAE/B,mDAAQA;AADmG,OAAD,EAEjH;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAACsjE,6EAAD;AAFP,OAFiH;AAA/B,KAApD,EAK3B;AAAE9+D,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAE4I,oDAD4B;AAElCpN,QAAAA,IAAI,EAAE,CAAC,UAAD;AAF4B,OAAD;AAA/B,KAL2B,EAQ3B;AAAEwE,MAAAA,IAAI,EAAEb,4DAAe+hD;AAAvB,KAR2B,EAQA;AAAElhD,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC7DnG,QAAAA,IAAI,EAAE/B,mDAAQA;AAD+C,OAAD,EAE7D;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC0tC,gEAAD;AAFP,OAF6D;AAA/B,KARA,CAAP;AAalB,GAfxB,EAe0C;AAAEmiB,IAAAA,MAAM,EAAE,CAAC;AACrCrrD,MAAAA,IAAI,EAAE3B,gDAAKA;AAD0B,KAAD,CAAV;AAE1BgD,IAAAA,EAAE,EAAE,CAAC;AACLrB,MAAAA,IAAI,EAAE3B,gDAAKA;AADN,KAAD;AAFsB,GAf1C;AAAA;AAoBA;AACA;AACA;;;AACA,MAAMitE,UAAN,SAAyBE,eAAzB,CAAyC;AACrChsE,EAAAA,WAAW,CAAC6sE,SAAD,EAAY/gE,UAAZ,EAAwB2vC,MAAxB,EAAgCusB,QAAhC,EAA0CkE,mBAA1C,EAA+D1a,QAA/D,EAAyEsb,YAAzE,EAAuFlgB,aAAvF,EAAsG;AAC7G,UAAMigB,SAAN,EAAiB/gE,UAAjB,EAA6BogE,mBAA7B,EAAkD1a,QAAlD,EAA4Dsb,YAA5D,EAA0ElgB,aAA1E;AACA,SAAKmgB,cAAL,GAAsB,IAAIxN,kEAAJ,CAAmB,IAAnB,EAAyB9jB,MAAzB,EAAiC3vC,UAAjC,EAA6Ck8D,QAA7C,CAAtB;;AACA,SAAK+E,cAAL,CAAoBC,kBAApB,CAAuClhE,UAAU,CAACzI,aAAlD;AACH;;AACDb,EAAAA,WAAW,GAAG;AACV,UAAMA,WAAN;;AACA,SAAKuqE,cAAL,CAAoBE,oBAApB;AACH;;AAToC;;AAWzCnB,UAAU,CAACxrE,IAAX;AAAA,mBAAuGwrE,UAAvG,EAltD4F1tE,+DAktD5F,CAAmIytE,SAAnI,GAltD4FztE,+DAktD5F,CAAyJA,qDAAzJ,GAltD4FA,+DAktD5F,CAAmLA,iDAAnL,GAltD4FA,+DAktD5F,CAAyMW,4DAAzM,GAltD4FX,+DAktD5F,CAAiOkhE,6EAAjO,MAltD4FlhE,+DAktD5F,CAAuR,UAAvR,GAltD4FA,+DAktD5F,CAA+TuB,4DAA/T,GAltD4FvB,+DAktD5F,CAA2VsrC,gEAA3V;AAAA;;AACAoiC,UAAU,CAACvrE,IAAX,kBAntD4FnC,+DAmtD5F;AAAA,QAA2F0tE,UAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAntD4F1tE,MAAAA,wDAmtD5F;AAAA,eAA2F,kBAA3F;AAAA;AAAA,eAA2F,0BAA3F;AAAA;AAAA;;AAAA;AAntD4FA,MAAAA,yDAmtD5F;AAntD4FA,MAAAA,yDAmtD5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAntD4FA,wEAmtD5F;AAAA;;AACA;AAAA,qDAptD4FA,+DAotD5F,CAA2F0tE,UAA3F,EAAmH,CAAC;AACxGtrE,IAAAA,IAAI,EAAEnC,oDADkG;AAExGrC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,8BADX;AAEC+F,MAAAA,QAAQ,EAAE,YAFX;AAGCgF,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,eAAb,EAA8B,UAA9B,CAHT;AAIClF,MAAAA,IAAI,EAAE;AACF,iBAAS,kCADP;AAEF,gCAAwB,oBAFtB;AAGF,+BAAuB,mBAHrB;AAIF,gCAAwB,UAJtB;AAKF,gCAAwB,oBALtB;AAMF,qBAAa,IANX;AAOF,2BAAmB,gBAPjB;AAQF,uBAAe,YARb;AASF,oCAA4B,UAT1B;AAUF,wCAAgC,QAV9B;AAWF,mBAAW,gBAXT;AAYF,qBAAa;AAZX;AAJP,KAAD;AAFkG,GAAD,CAAnH,EAqB4B,YAAY;AAAE,WAAO,CAAC;AAAE9F,MAAAA,IAAI,EAAEqrE;AAAR,KAAD,EAAsB;AAAErrE,MAAAA,IAAI,EAAEpC,qDAAakH;AAArB,KAAtB,EAA+C;AAAE9E,MAAAA,IAAI,EAAEpC,iDAAS+K;AAAjB,KAA/C,EAAoE;AAAE3I,MAAAA,IAAI,EAAEzB,4DAAWwG;AAAnB,KAApE,EAA2F;AAAE/E,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AACxJnG,QAAAA,IAAI,EAAE/B,mDAAQA;AAD0I,OAAD,EAExJ;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAACsjE,6EAAD;AAFP,OAFwJ;AAA/B,KAA3F,EAK3B;AAAE9+D,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAClCnG,QAAAA,IAAI,EAAE4I,oDAD4B;AAElCpN,QAAAA,IAAI,EAAE,CAAC,UAAD;AAF4B,OAAD;AAA/B,KAL2B,EAQ3B;AAAEwE,MAAAA,IAAI,EAAEb,4DAAe+hD;AAAvB,KAR2B,EAQA;AAAElhD,MAAAA,IAAI,EAAExD,SAAR;AAAmB2J,MAAAA,UAAU,EAAE,CAAC;AAC7DnG,QAAAA,IAAI,EAAE/B,mDAAQA;AAD+C,OAAD,EAE7D;AACC+B,QAAAA,IAAI,EAAEsI,iDADP;AAEC9M,QAAAA,IAAI,EAAE,CAAC0tC,gEAAD;AAFP,OAF6D;AAA/B,KARA,CAAP;AAalB,GAlCxB;AAAA;AAmCA;AACA;AACA;;;AACA,MAAMwjC,cAAN,CAAqB;AACjBltE,EAAAA,WAAW,GAAG;AACV;AACA,SAAK6B,EAAL,GAAW,qBAAoB/B,YAAY,EAAG,EAA9C;AACH;;AAJgB;;AAMrBotE,cAAc,CAAC5sE,IAAf;AAAA,mBAA2G4sE,cAA3G;AAAA;;AACAA,cAAc,CAACrnE,IAAf,kBAjwD4FzH,+DAiwD5F;AAAA,QAA+F8uE,cAA/F;AAAA;AAAA,sBAAkM,UAAlM;AAAA;AAAA;AAAA;AAjwD4F9uE,MAAAA,yDAiwD5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAjwD4FA,MAAAA,6DAiwD5F;AAjwD4FA,MAAAA,0DAiwD2R,GAAvX;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA,qDAlwD4FA,+DAkwD5F,CAA2F8uE,cAA3F,EAAuH,CAAC;AAC5G1sE,IAAAA,IAAI,EAAEjC,oDADsG;AAE5GvC,IAAAA,IAAI,EAAE,CAAC;AACCyE,MAAAA,QAAQ,EAAE,mBADX;AAEC+F,MAAAA,QAAQ,EAAE,gBAFX;AAGCC,MAAAA,QAAQ,EAAE,2BAHX;AAICH,MAAAA,IAAI,EAAE;AACF,kCAA0B,cADxB;AAEF,qBAAa,IAFX;AAGF,iBAAS,mBAHP;AAIF,gBAAQ;AAJN,OAJP;AAUCF,MAAAA,aAAa,EAAE5H,iEAVhB;AAWC4Q,MAAAA,eAAe,EAAEpG,yEAA8B0nC;AAXhD,KAAD;AAFsG,GAAD,CAAvH,QAe4B;AAAE7uC,IAAAA,EAAE,EAAE,CAAC;AACnBrB,MAAAA,IAAI,EAAE3B,gDAAKA;AADQ,KAAD;AAAN,GAf5B;AAAA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMsuE,aAAN,CAAoB;;AAEpBA,aAAa,CAAC7sE,IAAd;AAAA,mBAA0G6sE,aAA1G;AAAA;;AACAA,aAAa,CAACnmE,IAAd,kBA/xD4F5I,8DA+xD5F;AAAA,QAA2G+uE;AAA3G;AAwBAA,aAAa,CAAClmE,IAAd,kBAvzD4F7I,8DAuzD5F;AAAA,YAAoI,CACxHwB,yDADwH,EAExHwpC,mEAFwH,EAGxHi2B,6DAHwH,EAIxHlhB,mEAJwH,EAKxHjV,oEALwH,EAMxH+1B,0DANwH,CAApI,EAOW71B,mEAPX;AAAA;;AAQA;AAAA,qDA/zD4FhrC,+DA+zD5F,CAA2F+uE,aAA3F,EAAsH,CAAC;AAC3G3sE,IAAAA,IAAI,EAAE1B,mDADqG;AAE3G9C,IAAAA,IAAI,EAAE,CAAC;AACCmL,MAAAA,OAAO,EAAE,CACLvH,yDADK,EAELwpC,mEAFK,EAGLi2B,6DAHK,EAILlhB,mEAJK,EAKLjV,oEALK,EAML+1B,0DANK,CADV;AASC;AACA73D,MAAAA,OAAO,EAAE,CACLgiC,mEADK,EAELiiC,WAFK,EAGL/K,WAHK,EAILK,MAJK,EAKLkL,SALK,EAMLqB,cANK,EAOLpB,UAPK,EAQL3L,aARK,CAVV;AAoBCj5D,MAAAA,YAAY,EAAE,CACVmkE,WADU,EAEV/K,WAFU,EAGVK,MAHU,EAIVf,SAJU,EAKV4D,kBALU,EAMVqI,SANU,EAOVqB,cAPU,EAQVpB,UARU,EASVvJ,UATU,EAUVZ,gBAVU,EAWVwG,YAXU,EAYVhI,aAZU;AApBf,KAAD;AAFqG,GAAD,CAAtH;AAAA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","sources":["./src/app/core/decorators/ngrx-selector.decorator.ts","./src/app/core/directives/drag-drop-file-upload.directive.ts","./src/app/core/enums/material-icon.enum.ts","./src/app/core/enums/more-option-action.enum.ts","./src/app/shared/components/confirm/confirm.component.ts","./src/app/shared/components/confirm/confirm.component.html","./src/app/shared/components/more-option/more-options.component.ts","./src/app/shared/components/more-option/more-options.component.html","./src/app/shared/components/progress/progress.component.ts","./src/app/shared/components/progress/progress.component.html","./src/app/shared/components/spinner/spinner.component.ts","./src/app/shared/components/spinner/spinner.component.html","./src/app/shared/material/material.module.ts","./src/app/shared/pipes/file-format.pipe.ts","./src/app/shared/shared.module.ts","./node_modules/rxjs/dist/esm/internal/observable/forkJoin.js","./node_modules/rxjs/dist/esm/internal/operators/delay.js","./node_modules/rxjs/dist/esm/internal/operators/delayWhen.js","./node_modules/@angular-material-components/file-input/fesm2020/angular-material-components-file-input.mjs","./node_modules/@angular/cdk/fesm2020/table.mjs","./node_modules/@angular/cdk/fesm2020/text-field.mjs","./node_modules/@angular/forms/fesm2020/forms.mjs","./node_modules/@angular/material/fesm2020/form-field.mjs","./node_modules/@angular/material/fesm2020/icon.mjs","./node_modules/@angular/material/fesm2020/input.mjs","./node_modules/@angular/material/fesm2020/menu.mjs","./node_modules/@angular/material/fesm2020/progress-spinner.mjs","./node_modules/@angular/material/fesm2020/select.mjs","./node_modules/@angular/material/fesm2020/table.mjs","./node_modules/@angular/material/fesm2020/tabs.mjs"],"sourcesContent":["import { select, Store } from '@ngrx/store';\nimport { ExtraModuleInjector } from '../injector/injector.module';\n\nexport function State(selectorFunc: any) {\n  const store = ExtraModuleInjector.get(Store);\n  \n  return function<Type> (target: Type, key: string) {\n    let value;\n    const getter = function () {\n      return store.pipe(select(selectorFunc));\n    };\n\n    const setter = function() {\n      store.pipe(select(selectorFunc));\n    }\n\n    Object.defineProperty(target, key, {\n      get: getter,\n      set: setter,\n    });\n  };\n}\n","import {\n  Directive,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Output,\n} from '@angular/core';\n\n@Directive({\n  selector: '[appDragDropFileUpload]',\n})\nexport class DragDropFileUploadDirective {\n  @Output() private readonly fileDropped = new EventEmitter<FileList>();\n\n  @HostBinding('style.background-color') private backgroundColor = '#ffffff';\n\n  @HostListener('dragover', ['$event']) private dragOver(\n    event: DragEvent\n  ): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.backgroundColor = '#fcfcfc';\n  }\n\n  @HostListener('dragleave', ['$event']) private dragLeave(\n    event: DragEvent\n  ): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.backgroundColor = '#ffffff';\n  }\n\n  @HostListener('drop', ['$event']) private drop(event: DragEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.backgroundColor = '#cccccc';\n\n    const files = event?.dataTransfer?.files as FileList;\n    if (files?.length > 0) {\n      this.fileDropped.emit(files);\n    }\n  }\n}\n","export enum MatIcon {\n  EDIT = 'edit',\n  DELETE = 'delete',\n  ADD_SHOPPING_CART = 'add_shopping_cart',\n  PROFILE = 'person',\n  MORE_OPTIONS = 'more_vert',\n}\n","export enum MoreOptionAction {\n  Add,\n  Update,\n  Delete,\n  Open,\n  Close,\n  ShowUp\n}\n","import { Component, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmComponent {\n  constructor(\n    public readonly dialog: MatDialogRef<ConfirmComponent>,\n    @Inject(MAT_DIALOG_DATA) public readonly title: string\n  ) {}\n\n  public confirmed(): void {\n    this.dialog.close(true);\n  }\n\n  public cancelled(): void {\n    this.dialog.close(false);\n  }\n}\n","<section class=\"confirm\">\n  <h3 class=\"confirm__title\">{{ title }}</h3>\n  <div class=\"confirm__dialog\">\n    <button class=\"confirm__btn\" (click)=\"confirmed()\">Yes</button\n    ><button class=\"confirm__btn\" (click)=\"cancelled()\">No</button>\n  </div>\n</section>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { MatIcon } from 'src/app/core/enums/material-icon.enum';\nimport { MoreOptionAction } from 'src/app/core/enums/more-option-action.enum';\nimport { MoreOptions } from 'src/app/core/models/more-options.model';\n\n@Component({\n  selector: 'app-more-options',\n  templateUrl: './more-options.component.html',\n  styleUrls: ['./more-options.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MoreOptionsComponent {\n  @Input() moreOptions: MoreOptions[];\n\n  @Output() public add: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public openAction: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public closeAction: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public update: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public delete: EventEmitter<void> = new EventEmitter<void>();\n  @Output() public showUp: EventEmitter<void> = new EventEmitter<void>();\n\n  public readonly moreOptionsIcon = MatIcon.MORE_OPTIONS;\n\n  public emitAction(action: MoreOptionAction): void {\n    switch (action) {\n      case MoreOptionAction.Add:\n        this.add.emit();\n        break;\n      case MoreOptionAction.Open:\n        this.openAction.emit();\n        break;\n      case MoreOptionAction.Close:\n        this.closeAction.emit();\n        break;\n      case MoreOptionAction.Update:\n        this.update.emit();\n        break;\n      case MoreOptionAction.Delete:\n        this.delete.emit();\n        break;\n      case MoreOptionAction.ShowUp:\n        this.showUp.emit();\n        break;\n    }\n  }\n}\n","<ng-container>\n  <button\n    mat-icon-button\n    [matMenuTriggerFor]=\"menu\"\n    aria-label=\"more-options-button\"\n    class=\"more-options-btn\"\n  >\n    <mat-icon>{{ moreOptionsIcon }}</mat-icon>\n  </button>\n\n  <mat-menu #menu=\"matMenu\">\n    <ng-container *ngFor=\"let option of moreOptions\">\n      <button mat-menu-item (click)=\"emitAction(option.action)\">\n        <mat-icon>{{ option.icon }}</mat-icon>\n        <span>{{ option.text }}</span>\n      </button>\n    </ng-container>\n  </mat-menu>\n</ng-container>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-progress',\n  templateUrl: './progress.component.html',\n  styleUrls: ['./progress.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProgressComponent {\n  @Input() public progress: number | null | undefined = 0;\n}\n","<progress max=\"100\" [value]=\"progress\"></progress>\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { ProgressSpinnerMode } from '@angular/material/progress-spinner';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SpinnerComponent {\n  @Input() diameter: number;\n  color: ThemePalette = 'primary';\n  mode: ProgressSpinnerMode = 'indeterminate';\n}\n","<mat-progress-spinner\n  class=\"example-margin\"\n  [color]=\"color\"\n  [mode]=\"mode\"\n  [diameter]=\"diameter\"\n>\n</mat-progress-spinner>\n","import { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatSelectModule } from '@angular/material/select';\nimport { NgxMatFileInputModule } from '@angular-material-components/file-input';\n\nconst MAT_MODULES = [\n  MatDialogModule,\n  MatMenuModule,\n  MatIconModule,\n  MatButtonModule,\n  MatProgressSpinnerModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatTableModule,\n  MatTabsModule,\n  MatSelectModule,\n  NgxMatFileInputModule\n];\n@NgModule({\n  imports: [...MAT_MODULES],\n  exports: [...MAT_MODULES],\n})\nexport class MaterialModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fileFormat',\n})\nexport class FileFormatPipe implements PipeTransform {\n  transform(bytes: number, decimals = 0): string {\n    if (bytes === 0) {\n      return '0 Bytes';\n    }\n\n    const k = 1024;\n    const dm = decimals <= 0 ? 0 : decimals || 2;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SpinnerComponent } from './components/spinner/spinner.component';\nimport { MaterialModule } from './material/material.module';\nimport { ConfirmComponent } from './components/confirm/confirm.component';\nimport { DragDropFileUploadDirective } from '../core/directives/drag-drop-file-upload.directive';\nimport { ProgressComponent } from './components/progress/progress.component';\nimport { FileFormatPipe } from './pipes/file-format.pipe';\nimport { MoreOptionsComponent } from './components/more-option/more-options.component';\n\n\n\nconst SHARED_COMPONENNTS = [\n  SpinnerComponent,\n  ConfirmComponent,\n  DragDropFileUploadDirective,\n  ProgressComponent,\n  FileFormatPipe,\n  MoreOptionsComponent\n]\n\n@NgModule({\n  declarations: [\n    ...SHARED_COMPONENNTS,\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n  ],\n  exports: [\n    MaterialModule,\n    ...SHARED_COMPONENNTS\n  ]\n})\nexport class SharedModule { }\n","import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nexport function forkJoin(...args) {\n    const resultSelector = popResultSelector(args);\n    const { args: sources, keys } = argsArgArrayOrObject(args);\n    const result = new Observable((subscriber) => {\n        const { length } = sources;\n        if (!length) {\n            subscriber.complete();\n            return;\n        }\n        const values = new Array(length);\n        let remainingCompletions = length;\n        let remainingEmissions = length;\n        for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n            let hasValue = false;\n            innerFrom(sources[sourceIndex]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (!hasValue) {\n                    hasValue = true;\n                    remainingEmissions--;\n                }\n                values[sourceIndex] = value;\n            }, () => remainingCompletions--, undefined, () => {\n                if (!remainingCompletions || !hasValue) {\n                    if (!remainingEmissions) {\n                        subscriber.next(keys ? createObject(keys, values) : values);\n                    }\n                    subscriber.complete();\n                }\n            }));\n        }\n    });\n    return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\nexport function delay(due, scheduler = asyncScheduler) {\n    const duration = timer(due, scheduler);\n    return delayWhen(() => duration);\n}\n","import { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n    }\n    return mergeMap((value, index) => delayDurationSelector(value, index).pipe(take(1), mapTo(value)));\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { Directive, forwardRef, Component, ViewEncapsulation, Optional, Self, ViewChild, ContentChild, Input, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/core';\nimport { mixinErrorState } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport * as i1 from '@angular/cdk/platform';\nimport * as i2 from '@angular/forms';\nimport * as i4 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i5 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i7 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material/input';\n\nlet nextUniqueId = 0;\r\nconst _NgxMatInputMixinBase = mixinErrorState(class {\r\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \r\n    /** @docs-private */\r\n    ngControl) {\r\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\r\n        this._parentForm = _parentForm;\r\n        this._parentFormGroup = _parentFormGroup;\r\n        this.ngControl = ngControl;\r\n    }\r\n});\r\nclass NgxMatFileInputIcon {\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatFileInputIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatFileInputIcon, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatFileInputIcon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: NgxMatFileInputIcon, selector: \"[ngxMatFileInputIcon]\", ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatFileInputIcon, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[ngxMatFileInputIcon]'\r\n                }]\r\n        }] });\r\nclass NgxMatFileInputComponent extends _NgxMatInputMixinBase {\r\n    constructor(_elementRef, _platform, _cd, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher) {\r\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\r\n        this._elementRef = _elementRef;\r\n        this._platform = _platform;\r\n        this._cd = _cd;\r\n        this.ngControl = ngControl;\r\n        this.color = 'primary';\r\n        this.fileNames = null;\r\n        this._uid = `ngx-mat-fileinput-${nextUniqueId++}`;\r\n        this.stateChanges = new Subject();\r\n        this.focused = false;\r\n        this.controlType = 'ngx-mat-file-input';\r\n        this.autofilled = false;\r\n        /** Function when touched */\r\n        this._onTouched = () => { };\r\n        /** Function when changed */\r\n        this._onChange = () => { };\r\n        this._disabled = false;\r\n        this._multiple = false;\r\n        this.placeholder = 'Choose a file';\r\n        this.separator = ',';\r\n        this._required = false;\r\n        this._readonly = true;\r\n        this.id = this.id;\r\n        if (this.ngControl) {\r\n            this.ngControl.valueAccessor = this;\r\n        }\r\n    }\r\n    get disabled() {\r\n        if (this.ngControl && this.ngControl.disabled !== null) {\r\n            return this.ngControl.disabled;\r\n        }\r\n        return this._disabled;\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n        if (this.focused) {\r\n            this.focused = false;\r\n            this.stateChanges.next();\r\n        }\r\n    }\r\n    get id() { return this._id; }\r\n    set id(value) { this._id = value || this._uid; }\r\n    get multiple() { return this._multiple; }\r\n    set multiple(value) {\r\n        this._multiple = coerceBooleanProperty(value);\r\n    }\r\n    get required() { return this._required; }\r\n    set required(value) { this._required = coerceBooleanProperty(value); }\r\n    get value() { return this._value; }\r\n    set value(value) {\r\n        this._value = value;\r\n    }\r\n    get readonly() { return this._readonly; }\r\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\r\n    /**\r\n     * Limiting accepted file types\r\n     * Example: accept=\"image/png, image/jpeg\" or accept=\".png, .jpg, .jpeg\" — Accept PNG or JPEG files.\r\n     */\r\n    get accept() { return this._accept; }\r\n    set accept(value) {\r\n        this._accept = value;\r\n    }\r\n    ngOnChanges() {\r\n        this.stateChanges.next();\r\n    }\r\n    ngOnDestroy() {\r\n        this.stateChanges.complete();\r\n    }\r\n    ngDoCheck() {\r\n        if (this.ngControl) {\r\n            this.updateErrorState();\r\n        }\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    writeValue(value) {\r\n        this._updateInputValue(value);\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    registerOnChange(fn) {\r\n        this._onChange = fn;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    registerOnTouched(fn) {\r\n        this._onTouched = fn;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n        this.stateChanges.next();\r\n    }\r\n    /** Focuses the input. */\r\n    focus(options) {\r\n        this._inputValueRef.nativeElement.focus(options);\r\n    }\r\n    _focusChanged(isFocused) {\r\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\r\n            this.focused = isFocused;\r\n            this.stateChanges.next();\r\n        }\r\n    }\r\n    /** Mark the field as touched */\r\n    _markAsTouched() {\r\n        this._onTouched();\r\n        this._cd.markForCheck();\r\n        this.stateChanges.next();\r\n    }\r\n    _isBadInput() {\r\n        let validity = this._inputValueRef.nativeElement.validity;\r\n        return validity && validity.badInput;\r\n    }\r\n    get empty() {\r\n        return !this._inputValueRef.nativeElement.value && !this._isBadInput() &&\r\n            !this.autofilled;\r\n    }\r\n    get shouldLabelFloat() {\r\n        return this.focused || !this.empty;\r\n    }\r\n    setDescribedByIds(ids) {\r\n        this._ariaDescribedby = ids.join(' ');\r\n    }\r\n    openFilePicker(event) {\r\n        this._inputFileRef.nativeElement.click();\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        this._markAsTouched();\r\n    }\r\n    handleFiles(filelist) {\r\n        if (filelist.length > 0) {\r\n            const files = new Array();\r\n            for (let i = 0; i < filelist.length; i++) {\r\n                files.push(filelist.item(i));\r\n            }\r\n            this._updateInputValue(files);\r\n            this._resetInputFile();\r\n            this._onChange(this.multiple ? files : files[0]);\r\n        }\r\n    }\r\n    /** Handles a click on the control's container. */\r\n    onContainerClick(event) { }\r\n    ;\r\n    _resetInputFile() {\r\n        this._inputFileRef.nativeElement.value = \"\";\r\n    }\r\n    _updateInputValue(files) {\r\n        let text = null;\r\n        if (files) {\r\n            if (Array.isArray(files)) {\r\n                text = this._multiple\r\n                    ? files.map(x => x.name).join(this.separator)\r\n                    : files[0].name;\r\n            }\r\n            else {\r\n                text = files.name != null ? files.name : null;\r\n            }\r\n        }\r\n        this._inputValueRef.nativeElement.value = text;\r\n    }\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatFileInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatFileInputComponent, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.ChangeDetectorRef }, { token: i2.NgControl, optional: true, self: true }, { token: i2.NgForm, optional: true }, { token: i2.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatFileInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: NgxMatFileInputComponent, selector: \"ngx-mat-file-input\", inputs: { color: \"color\", disabled: \"disabled\", id: \"id\", multiple: \"multiple\", placeholder: \"placeholder\", separator: \"separator\", required: \"required\", errorStateMatcher: \"errorStateMatcher\", value: \"value\", readonly: \"readonly\", accept: \"accept\" }, host: { classAttribute: \"ngx-mat-file-input\" }, providers: [\r\n        { provide: MatFormFieldControl, useExisting: forwardRef((() => NgxMatFileInputComponent)) }\r\n    ], queries: [{ propertyName: \"_customIcon\", first: true, predicate: NgxMatFileInputIcon, descendants: true }], viewQueries: [{ propertyName: \"_inputFileRef\", first: true, predicate: [\"inputFile\"], descendants: true, static: true }, { propertyName: \"_inputValueRef\", first: true, predicate: [\"inputValue\"], descendants: true, static: true }], exportAs: [\"ngx-mat-file-input\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<input #inputValue autocomplete=\\\"off\\\" class=\\\"mat-input-element mat-form-field-autofill-control\\\" [attr.id]='id'\\r\\n  [attr.placeholder]='placeholder' [disabled]='disabled' [required]='required' [attr.readonly]='readonly || null'\\r\\n  [attr.aria-describedby]='_ariaDescribedby || null' [attr.aria-invalid]='errorState'\\r\\n  [attr.aria-required]='required.toString()'>\\r\\n<div class=\\\"mat-form-field-suffix\\\">\\r\\n  <button matSuffix mat-icon-button [color]=\\\"color\\\" class=\\\"button-browse\\\"  (click)=\\\"openFilePicker($event)\\\" type=\\\"button\\\"\\r\\n   [disabled]=\\\"disabled\\\">\\r\\n    <mat-icon *ngIf=\\\"!_customIcon\\\" class=\\\"ngx-mat-file-input--default-icon\\\">attach_file</mat-icon>\\r\\n    <ng-content select=\\\"[ngxMatFileInputIcon]\\\"></ng-content>\\r\\n  </button>\\r\\n</div>\\r\\n<input type=\\\"file\\\" #inputFile (change)=\\\"handleFiles($event.target.files)\\\" class=\\\"input-file\\\"\\r\\n  [multiple]=\\\"multiple\\\" [accept]=\\\"accept\\\">\", styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .ngx-mat-file-input--default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .ngx-mat-file-input--default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .ngx-mat-file-input--default-icon{margin:auto}.ngx-mat-file-input{display:flex;line-height:18px;height:18px;align-items:center}.ngx-mat-file-input .input-file{display:block;visibility:hidden;width:0;height:0}\\n\"], components: [{ type: i4.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { type: i5.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], directives: [{ type: i6.MatSuffix, selector: \"[matSuffix]\" }, { type: i7.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatFileInputComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'ngx-mat-file-input', encapsulation: ViewEncapsulation.None, host: {\r\n                        'class': 'ngx-mat-file-input'\r\n                    }, providers: [\r\n                        { provide: MatFormFieldControl, useExisting: forwardRef((() => NgxMatFileInputComponent)) }\r\n                    ], exportAs: 'ngx-mat-file-input', template: \"<input #inputValue autocomplete=\\\"off\\\" class=\\\"mat-input-element mat-form-field-autofill-control\\\" [attr.id]='id'\\r\\n  [attr.placeholder]='placeholder' [disabled]='disabled' [required]='required' [attr.readonly]='readonly || null'\\r\\n  [attr.aria-describedby]='_ariaDescribedby || null' [attr.aria-invalid]='errorState'\\r\\n  [attr.aria-required]='required.toString()'>\\r\\n<div class=\\\"mat-form-field-suffix\\\">\\r\\n  <button matSuffix mat-icon-button [color]=\\\"color\\\" class=\\\"button-browse\\\"  (click)=\\\"openFilePicker($event)\\\" type=\\\"button\\\"\\r\\n   [disabled]=\\\"disabled\\\">\\r\\n    <mat-icon *ngIf=\\\"!_customIcon\\\" class=\\\"ngx-mat-file-input--default-icon\\\">attach_file</mat-icon>\\r\\n    <ng-content select=\\\"[ngxMatFileInputIcon]\\\"></ng-content>\\r\\n  </button>\\r\\n</div>\\r\\n<input type=\\\"file\\\" #inputFile (change)=\\\"handleFiles($event.target.files)\\\" class=\\\"input-file\\\"\\r\\n  [multiple]=\\\"multiple\\\" [accept]=\\\"accept\\\">\", styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .ngx-mat-file-input--default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .ngx-mat-file-input--default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .ngx-mat-file-input--default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .ngx-mat-file-input--default-icon{margin:auto}.ngx-mat-file-input{display:flex;line-height:18px;height:18px;align-items:center}.ngx-mat-file-input .input-file{display:block;visibility:hidden;width:0;height:0}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.ChangeDetectorRef }, { type: i2.NgControl, decorators: [{\r\n                    type: Optional\r\n                }, {\r\n                    type: Self\r\n                }] }, { type: i2.NgForm, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: i2.FormGroupDirective, decorators: [{\r\n                    type: Optional\r\n                }] }, { type: i3.ErrorStateMatcher }]; }, propDecorators: { _inputFileRef: [{\r\n                type: ViewChild,\r\n                args: ['inputFile', { static: true }]\r\n            }], _inputValueRef: [{\r\n                type: ViewChild,\r\n                args: ['inputValue', { static: true }]\r\n            }], _customIcon: [{\r\n                type: ContentChild,\r\n                args: [NgxMatFileInputIcon]\r\n            }], color: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input\r\n            }], id: [{\r\n                type: Input\r\n            }], multiple: [{\r\n                type: Input\r\n            }], placeholder: [{\r\n                type: Input\r\n            }], separator: [{\r\n                type: Input\r\n            }], required: [{\r\n                type: Input\r\n            }], errorStateMatcher: [{\r\n                type: Input\r\n            }], value: [{\r\n                type: Input\r\n            }], readonly: [{\r\n                type: Input\r\n            }], accept: [{\r\n                type: Input\r\n            }] } });\n\nclass NgxMatFileInputModule {\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatFileInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatFileInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatFileInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatFileInputModule, declarations: [NgxMatFileInputComponent,\r\n        NgxMatFileInputIcon], imports: [CommonModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatFormFieldModule,\r\n        MatInputModule], exports: [NgxMatFileInputComponent,\r\n        NgxMatFileInputIcon] });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatFileInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatFileInputModule, imports: [[\r\n            CommonModule,\r\n            MatButtonModule,\r\n            MatIconModule,\r\n            MatFormFieldModule,\r\n            MatInputModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatFileInputModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        NgxMatFileInputComponent,\r\n                        NgxMatFileInputIcon\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        MatButtonModule,\r\n                        MatIconModule,\r\n                        MatFormFieldModule,\r\n                        MatInputModule\r\n                    ],\r\n                    exports: [\r\n                        NgxMatFileInputComponent,\r\n                        NgxMatFileInputIcon\r\n                    ]\r\n                }]\r\n        }] });\n\nfunction calculFileSize(number) {\r\n    if (number < 1024) {\r\n        return number + 'bytes';\r\n    }\r\n    else if (number >= 1024 && number < 1048576) {\r\n        return (number / 1024).toFixed(1) + 'KB';\r\n    }\r\n    else if (number >= 1048576) {\r\n        return (number / 1048576).toFixed(1) + 'MB';\r\n    }\r\n}\n\n/**\r\n * Validator for size of file\r\n * @param max Max of size of file (in bytes)\r\n */\r\nfunction MaxSizeValidator(max) {\r\n    return (ctrl) => {\r\n        max = Number(max);\r\n        if (isNaN(max)) {\r\n            throw 'MaxSizeValidator: max of size of file is invalid';\r\n        }\r\n        if (!ctrl.value)\r\n            return null;\r\n        let files = ctrl.value;\r\n        if (!Array.isArray(ctrl.value)) {\r\n            files = [ctrl.value];\r\n        }\r\n        if (!files.length)\r\n            return null;\r\n        const add = (a, b) => a + b;\r\n        const sumSize = files.map(x => x.size).reduce(add);\r\n        if (sumSize > max) {\r\n            return {\r\n                maxSize: true\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n}\n\n/**\r\n *\r\n * @param accept Allowable type of file\r\n */\r\nfunction AcceptValidator(accept) {\r\n    return (ctrl) => {\r\n        if (!accept) {\r\n            throw ('AcceptValidator: allowable type of file can not be empty');\r\n        }\r\n        if (ctrl.value == null)\r\n            return null;\r\n        if (!accept.includes(ctrl.value.type)) {\r\n            return {\r\n                accept: true\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n}\n\n/*\r\n * Public API Surface of file-input\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AcceptValidator, MaxSizeValidator, NgxMatFileInputComponent, NgxMatFileInputIcon, NgxMatFileInputModule, calculFileSize };\n","import * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Input, ContentChild, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, NgZone, Attribute, SkipSelf, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkCellDef, selector: \"[cdkCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkHeaderCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkFooterCellDef, selector: \"[cdkFooterCellDef]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkFooterCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n}\nCdkColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkColumnDef, deps: [{ token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], stickyEnd: [{\n                type: Input,\n                args: ['stickyEnd']\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkFooterCell, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n}\nCdkCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable\n            ? from(Promise.resolve(undefined))\n            : this._ngZone.onStable.pipe(take(1));\n    }\n}\n_CoalescedStyleScheduler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n_CoalescedStyleScheduler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _CoalescedStyleScheduler });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BaseRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive });\nBaseRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: BaseRowDef, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }]; } });\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkHeaderRowDef, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkFooterRowDef, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n}\nCdkRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkRowDef, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\nCdkCellOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCellOutlet, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCellOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; } });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkHeaderRow, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkFooterRow, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n}\nCdkRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\nCdkRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkRow, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._contentClassName = 'cdk-no-data-row';\n    }\n}\nCdkNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkNoDataRow, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nCdkNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkNoDataRow, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1\n                        ? []\n                        : cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => (stickyStartStates[index] ? width : null)),\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1\n                        ? []\n                        : cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                            .reverse(),\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable\n                ? Array.from(row.children)\n                : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                this._positionListener?.stickyHeaderRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n            else {\n                this._positionListener?.stickyFooterRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n}\nCdkRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nCdkRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkRecycleRows, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: DataRowOutlet, selector: \"[rowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[rowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HeaderRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nHeaderRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[headerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FooterRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nFooterRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[footerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nNoDataRowOutlet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NoDataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nNoDataRowOutlet.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[noDataRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener, \n    /**\n     * @deprecated `_ngZone` parameter to become required.\n     * @breaking-change 14.0.0\n     */\n    _ngZone) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        this._ngZone = _ngZone;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        /**\n         * Emits when the table completes rendering a set of data rows based on the latest data from the\n         * data source, even if the set of rows is empty.\n         */\n        this.contentChanged = new EventEmitter();\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        [\n            this._rowOutlet.viewContainer,\n            this._headerRowOutlet.viewContainer,\n            this._footerRowOutlet.viewContainer,\n            this._cachedRenderRowsMap,\n            this._customColumnDefs,\n            this._customRowDefs,\n            this._customHeaderRowDefs,\n            this._customFooterRowDefs,\n            this._columnDefsByName,\n        ].forEach(def => {\n            def.clear();\n        });\n        this._headerRowDefs = [];\n        this._footerRowDefs = [];\n        this._defaultRowDef = null;\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === 1 /* INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        // Allow the new row data to render before measuring it.\n        // @breaking-change 14.0.0 Remove undefined check once _ngZone is required.\n        if (this._ngZone && NgZone.isInAngularZone()) {\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._onDestroy)).subscribe(() => {\n                this.updateStickyColumnStyles();\n            });\n        }\n        else {\n            this.updateStickyColumnStyles();\n        }\n        this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && rootNode?.nodeType === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n    }\n}\nCdkTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTable, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: 'role', attribute: true }, { token: i1.Directionality, optional: true }, { token: DOCUMENT }, { token: i2.Platform }, { token: _VIEW_REPEATER_STRATEGY }, { token: _COALESCED_STYLE_SCHEDULER }, { token: i3.ViewportRuler }, { token: STICKY_POSITIONING_LISTENER, optional: true, skipSelf: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkTable, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, outputs: { contentChanged: \"contentChanged\" }, host: { properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n        { provide: CDK_TABLE, useExisting: CdkTable },\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], viewQueries: [{ propertyName: \"_rowOutlet\", first: true, predicate: DataRowOutlet, descendants: true, static: true }, { propertyName: \"_headerRowOutlet\", first: true, predicate: HeaderRowOutlet, descendants: true, static: true }, { propertyName: \"_footerRowOutlet\", first: true, predicate: FooterRowOutlet, descendants: true, static: true }, { propertyName: \"_noDataRowOutlet\", first: true, predicate: NoDataRowOutlet, descendants: true, static: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], directives: [{ type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { type: DataRowOutlet, selector: \"[rowOutlet]\" }, { type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i2.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_VIEW_REPEATER_STRATEGY]\n                }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                    type: Inject,\n                    args: [_COALESCED_STYLE_SCHEDULER]\n                }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [STICKY_POSITIONING_LISTENER]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input\n            }], fixedLayout: [{\n                type: Input\n            }], contentChanged: [{\n                type: Output\n            }], _rowOutlet: [{\n                type: ViewChild,\n                args: [DataRowOutlet, { static: true }]\n            }], _headerRowOutlet: [{\n                type: ViewChild,\n                args: [HeaderRowOutlet, { static: true }]\n            }], _footerRowOutlet: [{\n                type: ViewChild,\n                args: [FooterRowOutlet, { static: true }]\n            }], _noDataRowOutlet: [{\n                type: ViewChild,\n                args: [NoDataRowOutlet, { static: true }]\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTextColumn, deps: [{ token: CdkTable, optional: true }, { token: TEXT_COLUMN_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nCdkTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkTextColumn, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, directives: [{ type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"sticky\", \"cdkColumnDef\", \"stickyEnd\"] }, { type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }, { type: CdkCellDef, selector: \"[cdkCellDef]\" }, { type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () { return [{ type: CdkTable, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TEXT_COLUMN_OPTIONS]\n                }] }]; }, propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCdkTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTableModule, declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet], imports: [ScrollingModule], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn,\n        CdkNoDataRow,\n        CdkRecycleRows,\n        NoDataRowOutlet] });\nCdkTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTableModule, imports: [[ScrollingModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            },\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AutofillMonitor, deps: [{ token: i1.Platform }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nAutofillMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AutofillMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AutofillMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }]; } });\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAutofill, deps: [{ token: i0.ElementRef }, { token: AutofillMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAutofill.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkAutofill, selector: \"[cdkAutofill]\", outputs: { cdkAutofill: \"cdkAutofill\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAutofill, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAutofill]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: AutofillMonitor }]; }, propDecorators: { cdkAutofill: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._isViewInited = false;\n        /** Handles `focus` and `blur` events. */\n        this._handleFocusEvent = (event) => {\n            this._hasFocus = event.type === 'focus';\n        };\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() {\n        return this._minRows;\n    }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() {\n        return this._maxRows;\n    }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() {\n        return this._textareaElement.placeholder;\n    }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        if (value) {\n            this._textareaElement.setAttribute('placeholder', value);\n        }\n        else {\n            this._textareaElement.removeAttribute('placeholder');\n        }\n        this._cacheTextareaPlaceholderHeight();\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n                this._textareaElement.addEventListener('focus', this._handleFocusEvent);\n                this._textareaElement.addEventListener('blur', this._handleFocusEvent);\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._textareaElement.removeEventListener('focus', this._handleFocusEvent);\n        this._textareaElement.removeEventListener('blur', this._handleFocusEvent);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        textareaClone.remove();\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        const element = this._textareaElement;\n        const previousMargin = element.style.marginBottom || '';\n        const isFirefox = this._platform.FIREFOX;\n        const needsMarginFiller = isFirefox && this._hasFocus;\n        const measuringClass = isFirefox\n            ? 'cdk-textarea-autosize-measuring-firefox'\n            : 'cdk-textarea-autosize-measuring';\n        // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n        // work around it by assigning a temporary margin with the same height as the `textarea` so that\n        // it occupies the same amount of space. See #23233.\n        if (needsMarginFiller) {\n            element.style.marginBottom = `${element.clientHeight}px`;\n        }\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        element.classList.add(measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = element.scrollHeight - 4;\n        element.classList.remove(measuringClass);\n        if (needsMarginFiller) {\n            element.style.marginBottom = previousMargin;\n        }\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && this._hasFocus) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTextareaAutosize, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTextareaAutosize.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkTextareaAutosize, selector: \"textarea[cdkTextareaAutosize]\", inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"], placeholder: \"placeholder\" }, host: { attributes: { \"rows\": \"1\" }, listeners: { \"input\": \"_noopInputHandler()\" }, classAttribute: \"cdk-textarea-autosize\" }, exportAs: [\"cdkTextareaAutosize\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTextareaAutosize, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'textarea[cdkTextareaAutosize]',\n                    exportAs: 'cdkTextareaAutosize',\n                    host: {\n                        'class': 'cdk-textarea-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { minRows: [{\n                type: Input,\n                args: ['cdkAutosizeMinRows']\n            }], maxRows: [{\n                type: Input,\n                args: ['cdkAutosizeMaxRows']\n            }], enabled: [{\n                type: Input,\n                args: ['cdkTextareaAutosize']\n            }], placeholder: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: TextFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTextFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: TextFieldModule, declarations: [CdkAutofill, CdkTextareaAutosize], exports: [CdkAutofill, CdkTextareaAutosize] });\nTextFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: TextFieldModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: TextFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkAutofill, CdkTextareaAutosize],\n                    exports: [CdkAutofill, CdkTextareaAutosize],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","/**\n * @license Angular v14.2.1\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ɵisPromise, ɵisObservable, ɵRuntimeError, Self, EventEmitter, Input, Host, SkipSelf, ɵcoerceToBoolean, ChangeDetectorRef, Output, NgModule, Injectable, inject, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { from, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BaseControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * The registered callback function called when a change or input event occurs on the input\n         * element.\n         * @nodoc\n         */\n        this.onChange = (_) => { };\n        /**\n         * The registered callback function called when a blur event occurs on the input element.\n         * @nodoc\n         */\n        this.onTouched = () => { };\n    }\n    /**\n     * Helper method that sets a property on a target element using the current Renderer\n     * implementation.\n     * @nodoc\n     */\n    setProperty(key, value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n        this.setProperty('disabled', isDisabled);\n    }\n}\nBaseControlValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: BaseControlValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nBaseControlValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: BaseControlValueAccessor, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: BaseControlValueAccessor, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }]; } });\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nclass BuiltInControlValueAccessor extends BaseControlValueAccessor {\n}\nBuiltInControlValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: BuiltInControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nBuiltInControlValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: BuiltInControlValueAccessor, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: BuiltInControlValueAccessor, decorators: [{\n            type: Directive\n        }] });\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessor),\n    multi: true,\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.setProperty('checked', value);\n    }\n}\nCheckboxControlValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: CheckboxControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nCheckboxControlValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\", host: { listeners: { \"change\": \"onChange($event.target.checked)\", \"blur\": \"onTouched()\" } }, providers: [CHECKBOX_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: CheckboxControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                    host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                    providers: [CHECKBOX_VALUE_ACCESSOR]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultValueAccessor),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n    const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * {@searchKeywords ngDefaultControl}\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass DefaultValueAccessor extends BaseControlValueAccessor {\n    constructor(renderer, elementRef, _compositionMode) {\n        super(renderer, elementRef);\n        this._compositionMode = _compositionMode;\n        /** Whether the user is creating a composition string (IME events). */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        const normalizedValue = value == null ? '' : value;\n        this.setProperty('value', normalizedValue);\n    }\n    /** @internal */\n    _handleInput(value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    /** @internal */\n    _compositionStart() {\n        this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    }\n}\nDefaultValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DefaultValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: COMPOSITION_BUFFER_MODE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nDefaultValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\", host: { listeners: { \"input\": \"$any(this)._handleInput($event.target.value)\", \"blur\": \"onTouched()\", \"compositionstart\": \"$any(this)._compositionStart()\", \"compositionend\": \"$any(this)._compositionEnd($event.target.value)\" } }, providers: [DEFAULT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: DefaultValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                    // TODO: vsavkin replace the above selector with the one below it once\n                    // https://github.com/angular/angular/issues/3011 is implemented\n                    // selector: '[ngModel],[formControl],[formControlName]',\n                    host: {\n                        '(input)': '$any(this)._handleInput($event.target.value)',\n                        '(blur)': 'onTouched()',\n                        '(compositionstart)': '$any(this)._compositionStart()',\n                        '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n                    },\n                    providers: [DEFAULT_VALUE_ACCESSOR]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [COMPOSITION_BUFFER_MODE]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NG_DEV_MODE$1 = typeof ngDevMode === 'undefined' || !!ngDevMode;\nfunction isEmptyInputValue(value) {\n    /**\n     * Check if the object is a string or array before evaluating the length attribute.\n     * This avoids falsely rejecting objects that contain a custom length attribute.\n     * For example, the object {id: 1, length: 0, width: 0} should not be returned as empty.\n     */\n    return value == null ||\n        ((typeof value === 'string' || Array.isArray(value)) && value.length === 0);\n}\nfunction hasValidLength(value) {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_ASYNC_VALIDATORS`\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = new InjectionToken('NgValidators');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see `NG_VALIDATORS`\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n    /**\n     * @description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static min(min) {\n        return minValidator(min);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     *\n     * @usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static max(max) {\n        return maxValidator(max);\n    }\n    /**\n     * @description\n     * Validator that requires the control have a non-empty value.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static required(control) {\n        return requiredValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('some value', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @returns An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static requiredTrue(control) {\n        return requiredTrueValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * Tests the value using a [regular\n     * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n     * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n     * address in the [WHATWG HTML\n     * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n     * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n     * lengths of different parts of the address).\n     *\n     * The differences from the WHATWG version include:\n     * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n     * - Disallow `local-part` to be longer than 64 characters.\n     * - Disallow the whole address to be longer than 254 characters.\n     *\n     * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n     * validate the value against a different pattern.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @returns An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static email(control) {\n        return emailValidator(control);\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays. The\n     * `minLength` validator logic is also not invoked for values when their `length` property is 0\n     * (for example in case of an empty string or an empty array), to support optional controls. You\n     * can use the standard `required` validator if empty values should not be considered valid.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `minlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static minLength(minLength) {\n        return minLengthValidator(minLength);\n    }\n    /**\n     * @description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n     * only for types that have a numeric `length` property, such as strings or arrays.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @returns A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static maxLength(maxLength) {\n        return maxLengthValidator(maxLength);\n    }\n    /**\n     * @description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided by default if you use the HTML5 `pattern` attribute.\n     *\n     * @usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * ### Pattern matching with the global or sticky flag\n     *\n     * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n     * can produce different results on the same input when validations are run consecutively. This is\n     * due to how the behavior of `RegExp.prototype.test` is\n     * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n     * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n     * Due to this behavior, it is recommended that when using\n     * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n     * flag enabled.\n     *\n     * ```typescript\n     * // Not recommended (since the `g` flag is used)\n     * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n     *\n     * // Good\n     * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n     * ```\n     *\n     * @param pattern A regular expression to be used as is to test the values, or a string.\n     * If a string is passed, the `^` character is prepended and the `$` character is\n     * appended to the provided string (if not already present), and the resulting regular\n     * expression is used to test the values.\n     *\n     * @returns A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static pattern(pattern) {\n        return patternValidator(pattern);\n    }\n    /**\n     * @description\n     * Validator that performs no operation.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static nullValidator(control) {\n        return nullValidator(control);\n    }\n    static compose(validators) {\n        return compose(validators);\n    }\n    /**\n     * @description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @returns A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     *\n     * @see `updateValueAndValidity()`\n     *\n     */\n    static composeAsync(validators) {\n        return composeAsync(validators);\n    }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n        return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = parseFloat(control.value);\n        // Controls with NaN values after parsing should be treated as not having a\n        // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n        return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n    };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n    return isEmptyInputValue(control.value) ? { 'required': true } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n    return control.value === true ? null : { 'required': true };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n    if (isEmptyInputValue(control.value)) {\n        return null; // don't validate empty values to allow optional controls\n    }\n    return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n}\n/**\n * Validator that requires the length of the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n */\nfunction minLengthValidator(minLength) {\n    return (control) => {\n        if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n            // don't validate empty values to allow optional controls\n            // don't validate values without `length` property\n            return null;\n        }\n        return control.value.length < minLength ?\n            { 'minlength': { 'requiredLength': minLength, 'actualLength': control.value.length } } :\n            null;\n    };\n}\n/**\n * Validator that requires the length of the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n */\nfunction maxLengthValidator(maxLength) {\n    return (control) => {\n        return hasValidLength(control.value) && control.value.length > maxLength ?\n            { 'maxlength': { 'requiredLength': maxLength, 'actualLength': control.value.length } } :\n            null;\n    };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n    if (!pattern)\n        return nullValidator;\n    let regex;\n    let regexStr;\n    if (typeof pattern === 'string') {\n        regexStr = '';\n        if (pattern.charAt(0) !== '^')\n            regexStr += '^';\n        regexStr += pattern;\n        if (pattern.charAt(pattern.length - 1) !== '$')\n            regexStr += '$';\n        regex = new RegExp(regexStr);\n    }\n    else {\n        regexStr = pattern.toString();\n        regex = pattern;\n    }\n    return (control) => {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        const value = control.value;\n        return regex.test(value) ? null :\n            { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n    };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n    return null;\n}\nfunction isPresent(o) {\n    return o != null;\n}\nfunction toObservable(value) {\n    const obs = ɵisPromise(value) ? from(value) : value;\n    if (NG_DEV_MODE$1 && !(ɵisObservable(obs))) {\n        let errorMessage = `Expected async validator to return Promise or Observable.`;\n        // A synchronous validator will return object or null.\n        if (typeof value === 'object') {\n            errorMessage +=\n                ' Are you using a synchronous validator where an async validator is expected?';\n        }\n        throw new ɵRuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n    }\n    return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n    let res = {};\n    // Not using Array.reduce here due to a Chrome 80 bug\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n    arrayOfErrors.forEach((errors) => {\n        res = errors != null ? { ...res, ...errors } : res;\n    });\n    return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n    return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n    return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n    return validators.map(validator => {\n        return isValidatorFn(validator) ?\n            validator :\n            ((c) => validator.validate(c));\n    });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        return mergeErrors(executeValidators(control, presentValidators));\n    };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n    return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n    if (!validators)\n        return null;\n    const presentValidators = validators.filter(isPresent);\n    if (presentValidators.length == 0)\n        return null;\n    return function (control) {\n        const observables = executeValidators(control, presentValidators).map(toObservable);\n        return forkJoin(observables).pipe(map(mergeErrors));\n    };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? composeAsync(normalizeValidators(validators)) :\n        null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n    if (controlValidators === null)\n        return [dirValidator];\n    return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] :\n        [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n    return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n    return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n    if (!validators)\n        return [];\n    return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n    return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n    const current = makeValidatorsArray(currentValidators);\n    const validatorsToAdd = makeValidatorsArray(validators);\n    validatorsToAdd.forEach((v) => {\n        // Note: if there are duplicate entries in the new validators array,\n        // only the first one would be added to the current list of validators.\n        // Duplicate ones would be ignored since `hasValidator` would detect\n        // the presence of a validator function and we update the current list in place.\n        if (!hasValidator(current, v)) {\n            current.push(v);\n        }\n    });\n    return current;\n}\nfunction removeValidators(validators, currentValidators) {\n    return makeValidatorsArray(currentValidators).filter(v => !hasValidator(validators, v));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n    constructor() {\n        /**\n         * Set of synchronous validators as they were provided while calling `setValidators` function.\n         * @internal\n         */\n        this._rawValidators = [];\n        /**\n         * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n         * function.\n         * @internal\n         */\n        this._rawAsyncValidators = [];\n        /*\n         * The set of callbacks to be invoked when directive instance is being destroyed.\n         */\n        this._onDestroyCallbacks = [];\n    }\n    /**\n     * @description\n     * Reports the value of the control if it is present, otherwise null.\n     */\n    get value() {\n        return this.control ? this.control.value : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     */\n    get valid() {\n        return this.control ? this.control.valid : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     */\n    get invalid() {\n        return this.control ? this.control.invalid : null;\n    }\n    /**\n     * @description\n     * Reports whether a control is pending, meaning that that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     */\n    get pending() {\n        return this.control ? this.control.pending : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     */\n    get disabled() {\n        return this.control ? this.control.disabled : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     */\n    get enabled() {\n        return this.control ? this.control.enabled : null;\n    }\n    /**\n     * @description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     */\n    get errors() {\n        return this.control ? this.control.errors : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get pristine() {\n        return this.control ? this.control.pristine : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     */\n    get dirty() {\n        return this.control ? this.control.dirty : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get touched() {\n        return this.control ? this.control.touched : null;\n    }\n    /**\n     * @description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     */\n    get status() {\n        return this.control ? this.control.status : null;\n    }\n    /**\n     * @description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     */\n    get untouched() {\n        return this.control ? this.control.untouched : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * @description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return null;\n    }\n    /**\n     * Sets synchronous validators for this directive.\n     * @internal\n     */\n    _setValidators(validators) {\n        this._rawValidators = validators || [];\n        this._composedValidatorFn = composeValidators(this._rawValidators);\n    }\n    /**\n     * Sets asynchronous validators for this directive.\n     * @internal\n     */\n    _setAsyncValidators(validators) {\n        this._rawAsyncValidators = validators || [];\n        this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @description\n     * Synchronous validator function composed of all the synchronous validators registered with this\n     * directive.\n     */\n    get validator() {\n        return this._composedValidatorFn || null;\n    }\n    /**\n     * @description\n     * Asynchronous validator function composed of all the asynchronous validators registered with\n     * this directive.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn || null;\n    }\n    /**\n     * Internal function to register callbacks that should be invoked\n     * when directive instance is being destroyed.\n     * @internal\n     */\n    _registerOnDestroy(fn) {\n        this._onDestroyCallbacks.push(fn);\n    }\n    /**\n     * Internal function to invoke all registered \"on destroy\" callbacks.\n     * Note: calling this function also clears the list of callbacks.\n     * @internal\n     */\n    _invokeOnDestroyCallbacks() {\n        this._onDestroyCallbacks.forEach(fn => fn());\n        this._onDestroyCallbacks = [];\n    }\n    /**\n     * @description\n     * Resets the control with the provided value if the control is present.\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * @description\n     * The top-level form directive for the control.\n     */\n    get formDirective() {\n        return null;\n    }\n    /**\n     * @description\n     * The path to this group.\n     */\n    get path() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * @description\n         * The parent form for the control.\n         *\n         * @internal\n         */\n        this._parent = null;\n        /**\n         * @description\n         * The name for the control\n         */\n        this.name = null;\n        /**\n         * @description\n         * The value accessor for the control\n         */\n        this.valueAccessor = null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n    constructor(cd) {\n        this._cd = cd;\n    }\n    get isTouched() {\n        return !!this._cd?.control?.touched;\n    }\n    get isUntouched() {\n        return !!this._cd?.control?.untouched;\n    }\n    get isPristine() {\n        return !!this._cd?.control?.pristine;\n    }\n    get isDirty() {\n        return !!this._cd?.control?.dirty;\n    }\n    get isValid() {\n        return !!this._cd?.control?.valid;\n    }\n    get isInvalid() {\n        return !!this._cd?.control?.invalid;\n    }\n    get isPending() {\n        return !!this._cd?.control?.pending;\n    }\n    get isSubmitted() {\n        // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n        // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n        return !!this._cd?.submitted;\n    }\n}\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'isUntouched',\n    '[class.ng-touched]': 'isTouched',\n    '[class.ng-pristine]': 'isPristine',\n    '[class.ng-dirty]': 'isDirty',\n    '[class.ng-valid]': 'isValid',\n    '[class.ng-invalid]': 'isInvalid',\n    '[class.ng-pending]': 'isPending',\n};\nconst ngGroupStatusHost = {\n    ...ngControlStatusHost,\n    '[class.ng-submitted]': 'isSubmitted',\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatus.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NgControlStatus, deps: [{ token: NgControl, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgControlStatus.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\", host: { properties: { \"class.ng-untouched\": \"isUntouched\", \"class.ng-touched\": \"isTouched\", \"class.ng-pristine\": \"isPristine\", \"class.ng-dirty\": \"isDirty\", \"class.ng-valid\": \"isValid\", \"class.ng-invalid\": \"isInvalid\", \"class.ng-pending\": \"isPending\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NgControlStatus, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost }]\n        }], ctorParameters: function () { return [{ type: NgControl, decorators: [{\n                    type: Self\n                }] }]; } });\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see `NgControlStatus`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n        super(cd);\n    }\n}\nNgControlStatusGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NgControlStatusGroup, deps: [{ token: ControlContainer, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgControlStatusGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\", host: { properties: { \"class.ng-untouched\": \"isUntouched\", \"class.ng-touched\": \"isTouched\", \"class.ng-pristine\": \"isPristine\", \"class.ng-dirty\": \"isDirty\", \"class.ng-valid\": \"isValid\", \"class.ng-invalid\": \"isInvalid\", \"class.ng-pending\": \"isPending\", \"class.ng-submitted\": \"isSubmitted\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NgControlStatusGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                    host: ngGroupStatusHost\n                }]\n        }], ctorParameters: function () { return [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction controlParentException() {\n    return new ɵRuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction ngModelGroupException() {\n    return new ɵRuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n    return new ɵRuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n    return new ɵRuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n    return new ɵRuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n    return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n    return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n    return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n    return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n    return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see `status`\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see `status`\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see `markAsPending`\n * @see `status`\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see `markAsDisabled`\n * @see `status`\n */\nconst DISABLED = 'DISABLED';\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n            console.warn(asyncValidatorsDroppedWithOptsWarning);\n        }\n    }\n    return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) :\n        asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\nfunction assertControlPresent(parent, isGroup, key) {\n    const controls = parent.controls;\n    const collection = isGroup ? Object.keys(controls) : controls;\n    if (!collection.length) {\n        throw new ɵRuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, NG_DEV_MODE ? noControlsError(isGroup) : '');\n    }\n    if (!controls[key]) {\n        throw new ɵRuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, NG_DEV_MODE ? missingControlError(isGroup, key) : '');\n    }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n    control._forEachChild((_, key) => {\n        if (value[key] === undefined) {\n            throw new ɵRuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, NG_DEV_MODE ? missingControlValueError(isGroup, key) : '');\n        }\n    });\n}\n// clang-format on\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param validators The function or array of functions that is used to determine the validity of\n     *     this control synchronously.\n     * @param asyncValidators The function or array of functions that is used to determine validity of\n     *     this control asynchronously.\n     */\n    constructor(validators, asyncValidators) {\n        /** @internal */\n        this._pendingDirty = false;\n        /**\n         * Indicates that a control has its own pending asynchronous validation in progress.\n         *\n         * @internal\n         */\n        this._hasOwnPendingAsyncValidator = false;\n        /** @internal */\n        this._pendingTouched = false;\n        /** @internal */\n        this._onCollectionChange = () => { };\n        this._parent = null;\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * True if the control is marked as `touched`.\n         *\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /** @internal */\n        this._onDisabledChange = [];\n        this._rawValidators = validators;\n        this._rawAsyncValidators = asyncValidators;\n        this._composedValidatorFn = coerceToValidator(this._rawValidators);\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n    }\n    /**\n     * Returns the function that is used to determine the validity of this control synchronously.\n     * If multiple validators have been added, this will be a single composed function.\n     * See `Validators.compose()` for additional information.\n     */\n    get validator() {\n        return this._composedValidatorFn;\n    }\n    set validator(validatorFn) {\n        this._rawValidators = this._composedValidatorFn = validatorFn;\n    }\n    /**\n     * Returns the function that is used to determine the validity of this control asynchronously.\n     * If multiple validators have been added, this will be a single composed function.\n     * See `Validators.compose()` for additional information.\n     */\n    get asyncValidator() {\n        return this._composedAsyncValidatorFn;\n    }\n    set asyncValidator(asyncValidatorFn) {\n        this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n    }\n    /**\n     * The parent control.\n     */\n    get parent() {\n        return this._parent;\n    }\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() {\n        return this.status === VALID;\n    }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() {\n        return this.status === INVALID;\n    }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() {\n        return this.status == PENDING;\n    }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @returns True if the control is disabled, false otherwise.\n     */\n    get disabled() {\n        return this.status === DISABLED;\n    }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @returns True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     */\n    get enabled() {\n        return this.status !== DISABLED;\n    }\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() {\n        return !this.pristine;\n    }\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     */\n    get untouched() {\n        return !this.touched;\n    }\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing synchronous validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * If you want to add a new validator without affecting existing ones, consider\n     * using `addValidators()` method instead.\n     */\n    setValidators(validators) {\n        this._rawValidators = validators;\n        this._composedValidatorFn = coerceToValidator(validators);\n    }\n    /**\n     * Sets the asynchronous validators that are active on this control. Calling this\n     * overwrites any existing asynchronous validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * If you want to add a new validator without affecting existing ones, consider\n     * using `addAsyncValidators()` method instead.\n     */\n    setAsyncValidators(validators) {\n        this._rawAsyncValidators = validators;\n        this._composedAsyncValidatorFn = coerceToAsyncValidator(validators);\n    }\n    /**\n     * Add a synchronous validator or validators to this control, without affecting other validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * Adding a validator that already exists will have no effect. If duplicate validator functions\n     * are present in the `validators` array, only the first instance would be added to a form\n     * control.\n     *\n     * @param validators The new validator function or functions to add to this control.\n     */\n    addValidators(validators) {\n        this.setValidators(addValidators(validators, this._rawValidators));\n    }\n    /**\n     * Add an asynchronous validator or validators to this control, without affecting other\n     * validators.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * Adding a validator that already exists will have no effect.\n     *\n     * @param validators The new asynchronous validator function or functions to add to this control.\n     */\n    addAsyncValidators(validators) {\n        this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n    }\n    /**\n     * Remove a synchronous validator from this control, without affecting other validators.\n     * Validators are compared by function reference; you must pass a reference to the exact same\n     * validator function as the one that was originally set. If a provided validator is not found,\n     * it is ignored.\n     *\n     * @usageNotes\n     *\n     * ### Reference to a ValidatorFn\n     *\n     * ```\n     * // Reference to the RequiredValidator\n     * const ctrl = new FormControl<string | null>('', Validators.required);\n     * ctrl.removeValidators(Validators.required);\n     *\n     * // Reference to anonymous function inside MinValidator\n     * const minValidator = Validators.min(3);\n     * const ctrl = new FormControl<string | null>('', minValidator);\n     * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n     * expect(ctrl.hasValidator(Validators.min(3)).toEqual(false)\n     *\n     * ctrl.removeValidators(minValidator);\n     * ```\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param validators The validator or validators to remove.\n     */\n    removeValidators(validators) {\n        this.setValidators(removeValidators(validators, this._rawValidators));\n    }\n    /**\n     * Remove an asynchronous validator from this control, without affecting other validators.\n     * Validators are compared by function reference; you must pass a reference to the exact same\n     * validator function as the one that was originally set. If a provided validator is not found, it\n     * is ignored.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     * @param validators The asynchronous validator or validators to remove.\n     */\n    removeAsyncValidators(validators) {\n        this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n    }\n    /**\n     * Check whether a synchronous validator function is present on this control. The provided\n     * validator must be a reference to the exact same function that was provided.\n     *\n     * @usageNotes\n     *\n     * ### Reference to a ValidatorFn\n     *\n     * ```\n     * // Reference to the RequiredValidator\n     * const ctrl = new FormControl<number | null>(0, Validators.required);\n     * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n     *\n     * // Reference to anonymous function inside MinValidator\n     * const minValidator = Validators.min(3);\n     * const ctrl = new FormControl<number | null>(0, minValidator);\n     * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n     * expect(ctrl.hasValidator(Validators.min(3)).toEqual(false)\n     * ```\n     *\n     * @param validator The validator to check for presence. Compared by function reference.\n     * @returns Whether the provided validator was found on this control.\n     */\n    hasValidator(validator) {\n        return hasValidator(this._rawValidators, validator);\n    }\n    /**\n     * Check whether an asynchronous validator function is present on this control. The provided\n     * validator must be a reference to the exact same function that was provided.\n     *\n     * @param validator The asynchronous validator to check for presence. Compared by function\n     *     reference.\n     * @returns Whether the provided asynchronous validator was found on this control.\n     */\n    hasAsyncValidator(validator) {\n        return hasValidator(this._rawAsyncValidators, validator);\n    }\n    /**\n     * Empties out the synchronous validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearValidators() {\n        this.validator = null;\n    }\n    /**\n     * Empties out the async validator list.\n     *\n     * When you add or remove a validator at run time, you must call\n     * `updateValueAndValidity()` for the new validation to take effect.\n     *\n     */\n    clearAsyncValidators() {\n        this.asyncValidator = null;\n    }\n    /**\n     * Marks the control as `touched`. A control is touched by focus and\n     * blur events that do not change the value.\n     *\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsTouched(opts = {}) {\n        this.touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    }\n    /**\n     * Marks the control and all its descendant controls as `touched`.\n     * @see `markAsTouched()`\n     */\n    markAllAsTouched() {\n        this.markAsTouched({ onlySelf: true });\n        this._forEachChild((control) => control.markAllAsTouched());\n    }\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, also marks all children as `untouched`\n     * and recalculates the `touched` status of all parent controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsDirty()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after the marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsUntouched(opts = {}) {\n        this.touched = false;\n        this._pendingTouched = false;\n        this._forEachChild((control) => {\n            control.markAsUntouched({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * Marks the control as `dirty`. A control becomes dirty when\n     * the control's value is changed through the UI; compare `markAsTouched`.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsPristine()`\n     *\n     * @param opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsDirty(opts = {}) {\n        this.pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    }\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, marks all children as `pristine`,\n     * and recalculates the `pristine` status of all parent\n     * controls.\n     *\n     * @see `markAsTouched()`\n     * @see `markAsUntouched()`\n     * @see `markAsDirty()`\n     *\n     * @param opts Configuration options that determine how the control emits events after\n     * marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     */\n    markAsPristine(opts = {}) {\n        this.pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild((control) => {\n            control.markAsPristine({ onlySelf: true });\n        });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * Marks the control as `pending`.\n     *\n     * A control is pending while the control performs async validation.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates changes and\n     * emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event with the latest status the control is marked pending.\n     * When false, no events are emitted.\n     *\n     */\n    markAsPending(opts = {}) {\n        this.status = PENDING;\n        if (opts.emitEvent !== false) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    }\n    /**\n     * Disables the control. This means the control is exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children are also disabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configuration options that determine how the control propagates\n     * changes and emits events after the control is disabled.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is disabled.\n     * When false, no events are emitted.\n     */\n    disable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = DISABLED;\n        this.errors = null;\n        this._forEachChild((control) => {\n            control.disable({ ...opts, onlySelf: true });\n        });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        this._updateAncestors({ ...opts, skipPristineCheck });\n        this._onDisabledChange.forEach((changeFn) => changeFn(true));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @see {@link AbstractControl.status}\n     *\n     * @param opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     */\n    enable(opts = {}) {\n        // If parent has been marked artificially dirty we don't want to re-calculate the\n        // parent's dirtiness based on the children.\n        const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n        this.status = VALID;\n        this._forEachChild((control) => {\n            control.enable({ ...opts, onlySelf: true });\n        });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors({ ...opts, skipPristineCheck });\n        this._onDisabledChange.forEach((changeFn) => changeFn(false));\n    }\n    _updateAncestors(opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            if (!opts.skipPristineCheck) {\n                this._parent._updatePristine();\n            }\n            this._parent._updateTouched();\n        }\n    }\n    /**\n     * Sets the parent of the control\n     *\n     * @param parent The new parent.\n     */\n    setParent(parent) {\n        this._parent = parent;\n    }\n    /**\n     * The raw value of this control. For most control implementations, the raw value will include\n     * disabled children.\n     */\n    getRawValue() {\n        return this.value;\n    }\n    /**\n     * Recalculates the value and validation status of the control.\n     *\n     * By default, it also updates the value and validity of its ancestors.\n     *\n     * @param opts Configuration options determine how the control propagates changes and emits events\n     * after updates and validity checks are applied.\n     * * `onlySelf`: When true, only update this control. When false or not supplied,\n     * update all direct ancestors. Default is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is updated.\n     * When false, no events are emitted.\n     */\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            this.errors = this._runValidator();\n            this.status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            this.valueChanges.emit(this.value);\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    }\n    /** @internal */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((ctrl) => ctrl._updateTreeValidity(opts));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    _setInitialStatus() {\n        this.status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    _runAsyncValidator(emitEvent) {\n        if (this.asyncValidator) {\n            this.status = PENDING;\n            this._hasOwnPendingAsyncValidator = true;\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription = obs.subscribe((errors) => {\n                this._hasOwnPendingAsyncValidator = false;\n                // This will trigger the recalculation of the validation status, which depends on\n                // the state of the asynchronous validation (whether it is in progress or not). So, it is\n                // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n                this.setErrors(errors, { emitEvent });\n            });\n        }\n    }\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n            this._hasOwnPendingAsyncValidator = false;\n        }\n    }\n    /**\n     * Sets errors on a form control when running validations manually, rather than automatically.\n     *\n     * Calling `setErrors` also updates the validity of the parent control.\n     *\n     * @usageNotes\n     *\n     * ### Manually set the errors for a control\n     *\n     * ```\n     * const login = new FormControl('someLogin');\n     * login.setErrors({\n     *   notUnique: true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({ notUnique: true });\n     *\n     * login.setValue('someOtherLogin');\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    setErrors(errors, opts = {}) {\n        this.errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * @param path A dot-delimited string or array of string/number values that define the path to the\n     * control. If a string is provided, passing it as a string literal will result in improved type\n     * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n     * information to be available.\n     *\n     * @usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n     *\n     * ### Retrieve a control in a FormArray\n     *\n     * When accessing an element inside a FormArray, you can use an element index.\n     * For example, to get a `price` control from the first element in an `items` array you can use:\n     *\n     * * `this.form.get('items.0.price');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['items', 0, 'price']);`\n     */\n    get(path) {\n        let currPath = path;\n        if (currPath == null)\n            return null;\n        if (!Array.isArray(currPath))\n            currPath = currPath.split('.');\n        if (currPath.length === 0)\n            return null;\n        return currPath.reduce((control, name) => control && control._find(name), this);\n    }\n    /**\n     * @description\n     * Reports error data for the control with the given path.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * @returns error data for that particular error. If the control or error is not present,\n     * null is returned.\n     */\n    getError(errorCode, path) {\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * @description\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param errorCode The code of the error to check\n     * @param path A list of control names that designates how to move from the current control\n     * to the control that should be queried for errors.\n     *\n     * @usageNotes\n     * For example, for the following `FormGroup`:\n     *\n     * ```\n     * form = new FormGroup({\n     *   address: new FormGroup({ street: new FormControl() })\n     * });\n     * ```\n     *\n     * The path to the 'street' control from the root form would be 'address' -> 'street'.\n     *\n     * It can be provided to this method in one of two formats:\n     *\n     * 1. An array of string control names, e.g. `['address', 'street']`\n     * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n     *\n     * If no path is given, this method checks for the error on the current control.\n     *\n     * @returns whether the given error is present in the control at the given path.\n     *\n     * If the control is not present, false is returned.\n     */\n    hasError(errorCode, path) {\n        return !!this.getError(errorCode, path);\n    }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     */\n    get root() {\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /** @internal */\n    _updateControlsErrors(emitEvent) {\n        this.status = this._calculateStatus();\n        if (emitEvent) {\n            this.statusChanges.emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    }\n    /** @internal */\n    _initObservables() {\n        this.valueChanges = new EventEmitter();\n        this.statusChanges = new EventEmitter();\n    }\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /** @internal */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((control) => control.status === status);\n    }\n    /** @internal */\n    _anyControlsDirty() {\n        return this._anyControls((control) => control.dirty);\n    }\n    /** @internal */\n    _anyControlsTouched() {\n        return this._anyControls((control) => control.touched);\n    }\n    /** @internal */\n    _updatePristine(opts = {}) {\n        this.pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /** @internal */\n    _updateTouched(opts = {}) {\n        this.touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /** @internal */\n    _registerOnCollectionChange(fn) {\n        this._onCollectionChange = fn;\n    }\n    /** @internal */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && opts.updateOn != null) {\n            this._updateOn = opts.updateOn;\n        }\n    }\n    /**\n     * Check to see if parent has been marked artificially dirty.\n     *\n     * @internal\n     */\n    _parentMarkedDirty(onlySelf) {\n        const parentDirty = this._parent && this._parent.dirty;\n        return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n    }\n    /** @internal */\n    _find(name) {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n            // so we set `emitEvent` to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator\n        });\n    }\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    addControl(name, control, options = {}) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group. In a strongly-typed group, required controls cannot be\n     * removed.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param name The control name to remove from the collection\n     * @param options Specifies whether this FormGroup instance should emit events after a\n     *     control is removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * removed. When false, no events are emitted.\n     */\n    removeControl(name, options = {}) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    setControl(name, control, options = {}) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * @usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you exclude a value of a control that does exist.\n     *\n     * @param value The new value for the control that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     */\n    setValue(value, options = {}) {\n        assertAllValuesPresent(this, true, value);\n        Object.keys(value).forEach(name => {\n            assertControlPresent(this, true, name);\n            this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param value The object that matches the structure of the group.\n     * @param options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control value\n     * is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values, so\n        // we just ignore such cases when a field containing FormGroup instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        Object.keys(value).forEach(name => {\n            // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n            // `as any` is required.\n            const control = this.controls[name];\n            if (control) {\n                control.patchValue(\n                /* Guaranteed to be present, due to the outer forEach. */ value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n     * the value of all descendants to their default values, or null if no defaults were provided.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * @param value Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(form.value);  // {last: 'last'}\n     * console.log(form.get('first').status);  // 'DISABLED'\n     * ```\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((control, name) => {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            acc[name] = control.getRawValue();\n            return acc;\n        });\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach(key => {\n            // The list of controls can change (for ex. controls might be removed) while the loop\n            // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n            // have to null check before invoking the callback.\n            const control = this.controls[key];\n            control && cb(control, key);\n        });\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value = this._reduceValue();\n    }\n    /** @internal */\n    _anyControls(condition) {\n        for (const [controlName, control] of Object.entries(this.controls)) {\n            if (this.contains(controlName) && condition(control)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @internal */\n    _reduceValue() {\n        let acc = {};\n        return this._reduceChildren(acc, (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    }\n    /** @internal */\n    _reduceChildren(initValue, fn) {\n        let res = initValue;\n        this._forEachChild((control, name) => {\n            res = fn(res, control, name);\n        });\n        return res;\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /** @internal */\n    _find(name) {\n        return this.controls.hasOwnProperty(name) ?\n            this.controls[name] :\n            null;\n    }\n}\nconst UntypedFormGroup = FormGroup;\nconst isFormGroup = (control) => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {\n}\nconst isFormRecord = (control) => control instanceof FormRecord;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction controlPath(name, parent) {\n    return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwError(dir, 'No value accessor for form control with');\n    }\n    setUpValidators(control, dir);\n    dir.valueAccessor.writeValue(control.value);\n    if (control.disabled) {\n        dir.valueAccessor.setDisabledState?.(true);\n    }\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n    const noop = () => {\n        if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            _noControlError(dir);\n        }\n    };\n    // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n    // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n    // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n    // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n    // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n    if (dir.valueAccessor) {\n        dir.valueAccessor.registerOnChange(noop);\n        dir.valueAccessor.registerOnTouched(noop);\n    }\n    cleanUpValidators(control, dir);\n    if (control) {\n        dir._invokeOnDestroyCallbacks();\n        control._registerOnCollectionChange(() => { });\n    }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n    validators.forEach((validator) => {\n        if (validator.registerOnValidatorChange)\n            validator.registerOnValidatorChange(onChange);\n    });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n    if (dir.valueAccessor.setDisabledState) {\n        const onDisabledChange = (isDisabled) => {\n            dir.valueAccessor.setDisabledState(isDisabled);\n        };\n        control.registerOnDisabledChange(onDisabledChange);\n        // Register a callback function to cleanup disabled change handler\n        // from a control instance when a directive is destroyed.\n        dir._registerOnDestroy(() => {\n            control._unregisterOnDisabledChange(onDisabledChange);\n        });\n    }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n    const validators = getControlValidators(control);\n    if (dir.validator !== null) {\n        control.setValidators(mergeValidators(validators, dir.validator));\n    }\n    else if (typeof validators === 'function') {\n        // If sync validators are represented by a single validator function, we force the\n        // `Validators.compose` call to happen by executing the `setValidators` function with\n        // an array that contains that function. We need this to avoid possible discrepancies in\n        // validators behavior, so sync validators are always processed by the `Validators.compose`.\n        // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n        // have consistent behavior on AbstractControl API level. The same applies to the async\n        // validators logic below.\n        control.setValidators([validators]);\n    }\n    const asyncValidators = getControlAsyncValidators(control);\n    if (dir.asyncValidator !== null) {\n        control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n    }\n    else if (typeof asyncValidators === 'function') {\n        control.setAsyncValidators([asyncValidators]);\n    }\n    // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    const onValidatorChange = () => control.updateValueAndValidity();\n    registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n    registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n    let isControlUpdated = false;\n    if (control !== null) {\n        if (dir.validator !== null) {\n            const validators = getControlValidators(control);\n            if (Array.isArray(validators) && validators.length > 0) {\n                // Filter out directive validator function.\n                const updatedValidators = validators.filter((validator) => validator !== dir.validator);\n                if (updatedValidators.length !== validators.length) {\n                    isControlUpdated = true;\n                    control.setValidators(updatedValidators);\n                }\n            }\n        }\n        if (dir.asyncValidator !== null) {\n            const asyncValidators = getControlAsyncValidators(control);\n            if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n                // Filter out directive async validator function.\n                const updatedAsyncValidators = asyncValidators.filter((asyncValidator) => asyncValidator !== dir.asyncValidator);\n                if (updatedAsyncValidators.length !== asyncValidators.length) {\n                    isControlUpdated = true;\n                    control.setAsyncValidators(updatedAsyncValidators);\n                }\n            }\n        }\n    }\n    // Clear onValidatorChange callbacks by providing a noop function.\n    const noop = () => { };\n    registerOnValidatorChange(dir._rawValidators, noop);\n    registerOnValidatorChange(dir._rawAsyncValidators, noop);\n    return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n    dir.valueAccessor.registerOnChange((newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\nfunction setUpBlurPipeline(control, dir) {\n    dir.valueAccessor.registerOnTouched(() => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n    const onChange = (newValue, emitModelEvent) => {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    };\n    control.registerOnChange(onChange);\n    // Register a callback function to cleanup onChange handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n        control._unregisterOnChange(onChange);\n    });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwError(dir, 'Cannot find control with');\n    setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n    return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n    const messageEnd = _describeControlLocation(dir);\n    throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n    const path = dir.path;\n    if (path && path.length > 1)\n        return `path: '${path.join(' -> ')}'`;\n    if (path?.[0])\n        return `name: '${path}'`;\n    return 'unspecified name attribute';\n}\nfunction _throwInvalidValueAccessorError(dir) {\n    const loc = _describeControlLocation(dir);\n    throw new ɵRuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` +\n        `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n    // Check if a given value accessor is an instance of a class that directly extends\n    // `BuiltInControlValueAccessor` one.\n    return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach((dir) => {\n        const control = dir.control;\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode))\n        _throwInvalidValueAccessorError(dir);\n    let defaultAccessor = undefined;\n    let builtinAccessor = undefined;\n    let customAccessor = undefined;\n    valueAccessors.forEach((v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode))\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        _throwError(dir, 'No valid value accessor for form control with');\n    }\n    return null;\n}\nfunction removeListItem$1(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        console.warn(ngModelWarning(name));\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgForm)\n};\nconst resolvedPromise$1 = (() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgForm extends ControlContainer {\n    constructor(validators, asyncValidators) {\n        super();\n        /**\n         * @description\n         * Returns whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        this._directives = new Set();\n        /**\n         * @description\n         * Event emitter for the \"ngSubmit\" event\n         */\n        this.ngSubmit = new EventEmitter();\n        this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @nodoc */\n    ngAfterViewInit() {\n        this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n        return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            dir.control =\n                container.registerControl(dir.name, dir.control);\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            this._directives.add(dir);\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            this._directives.delete(dir);\n        });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            const group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n        resolvedPromise$1.then(() => {\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        resolvedPromise$1.then(() => {\n            const ctrl = this.form.get(dir.path);\n            ctrl.setValue(value);\n        });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n        this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    }\n    _findContainer(path) {\n        path.pop();\n        return path.length ? this.form.get(path) : this.form;\n    }\n}\nNgForm.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NgForm, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgForm.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: NgForm, selector: \"form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]\", inputs: { options: [\"ngFormOptions\", \"options\"] }, outputs: { ngSubmit: \"ngSubmit\" }, host: { listeners: { \"submit\": \"onSubmit($event)\", \"reset\": \"onReset()\" } }, providers: [formDirectiveProvider$1], exportAs: [\"ngForm\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NgForm, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]',\n                    providers: [formDirectiveProvider$1],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    outputs: ['ngSubmit'],\n                    exportAs: 'ngForm'\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }]; }, propDecorators: { options: [{\n                type: Input,\n                args: ['ngFormOptions']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction removeListItem(list, el) {\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isFormControlState(formState) {\n    return typeof formState === 'object' && formState !== null &&\n        Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n}\nconst FormControl = (class FormControl extends AbstractControl {\n    constructor(\n    // formState and defaultValue will only be null if T is nullable\n    formState = null, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        /** @publicApi */\n        this.defaultValue = null;\n        /** @internal */\n        this._onChange = [];\n        /** @internal */\n        this._pendingChange = false;\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this._initObservables();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set\n            // `emitEvent` to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator\n        });\n        if (isOptionsObj(validatorOrOpts) &&\n            (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n            if (isFormControlState(formState)) {\n                this.defaultValue = formState.value;\n            }\n            else {\n                this.defaultValue = formState;\n            }\n        }\n    }\n    setValue(value, options = {}) {\n        this.value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n        }\n        this.updateValueAndValidity(options);\n    }\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    reset(formState = this.defaultValue, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**  @internal */\n    _updateValue() { }\n    /**  @internal */\n    _anyControls(condition) {\n        return false;\n    }\n    /**  @internal */\n    _allControlsDisabled() {\n        return this.disabled;\n    }\n    registerOnChange(fn) {\n        this._onChange.push(fn);\n    }\n    /** @internal */\n    _unregisterOnChange(fn) {\n        removeListItem(this._onChange, fn);\n    }\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /** @internal */\n    _unregisterOnDisabledChange(fn) {\n        removeListItem(this._onDisabledChange, fn);\n    }\n    /** @internal */\n    _forEachChild(cb) { }\n    /** @internal */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    _applyFormState(formState) {\n        if (isFormControlState(formState)) {\n            this.value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            this.value = this._pendingValue = formState;\n        }\n    }\n});\nconst UntypedFormControl = FormControl;\nconst isFormControl = (control) => control instanceof FormControl;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n    /** @nodoc */\n    ngOnInit() {\n        this._checkParentType();\n        // Register the group with its parent group.\n        this.formDirective.addFormGroup(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            // Remove the group from its parent group.\n            this.formDirective.removeFormGroup(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /** @internal */\n    _checkParentType() { }\n}\nAbstractFormGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: AbstractFormGroupDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nAbstractFormGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: AbstractFormGroupDirective, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: AbstractFormGroupDirective, decorators: [{\n            type: Directive\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction modelParentException() {\n    return new ɵRuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n    return new ɵRuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n    return new ɵRuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n    return new ɵRuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw modelGroupParentException();\n        }\n    }\n}\nNgModelGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NgModelGroup, deps: [{ token: ControlContainer, host: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgModelGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: NgModelGroup, selector: \"[ngModelGroup]\", inputs: { name: [\"ngModelGroup\", \"name\"] }, providers: [modelGroupProvider], exportAs: [\"ngModelGroup\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NgModelGroup, decorators: [{\n            type: Directive,\n            args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' }]\n        }], ctorParameters: function () { return [{ type: ControlContainer, decorators: [{\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['ngModelGroup']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = (() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a domain model and binds it\n * to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see `RadioControlValueAccessor`\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgModel extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this.control = new FormControl();\n        /** @internal */\n        this._registered = false;\n        /**\n         * @description\n         * Event emitter for producing the `ngModelChange` event after\n         * the view model updates.\n         */\n        this.update = new EventEmitter();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this._checkForErrors();\n        if (!this._registered || 'name' in changes) {\n            if (this._registered) {\n                this._checkName();\n                if (this.formDirective) {\n                    // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n                    // changed. We also can't reset the name temporarily since the logic in `removeControl`\n                    // is inside a promise and it won't run immediately. We work around it by giving it an\n                    // object with the same shape instead.\n                    const oldName = changes['name'].previousValue;\n                    this.formDirective.removeControl({ name: oldName, path: this._getPath(oldName) });\n                }\n            }\n            this._setUpControl();\n        }\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return this._getPath(this.name);\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _setUpControl() {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    }\n    _isStandalone() {\n        return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n        setUpControl(this.control, this);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n    _checkForErrors() {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    }\n    _checkParentType() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                throw formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                throw modelParentException();\n            }\n        }\n    }\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw missingNameException();\n        }\n    }\n    _updateValue(value) {\n        resolvedPromise.then(() => {\n            this.control.setValue(value, { emitViewToModelChange: false });\n            this._changeDetectorRef?.markForCheck();\n        });\n    }\n    _updateDisabled(changes) {\n        const disabledValue = changes['isDisabled'].currentValue;\n        // checking for 0 to avoid breaking change\n        const isDisabled = disabledValue !== 0 && ɵcoerceToBoolean(disabledValue);\n        resolvedPromise.then(() => {\n            if (isDisabled && !this.control.disabled) {\n                this.control.disable();\n            }\n            else if (!isDisabled && this.control.disabled) {\n                this.control.enable();\n            }\n            this._changeDetectorRef?.markForCheck();\n        });\n    }\n    _getPath(controlName) {\n        return this._parent ? controlPath(controlName, this._parent) : [controlName];\n    }\n}\nNgModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NgModel, deps: [{ token: ControlContainer, host: true, optional: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: ChangeDetectorRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgModel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: { name: \"name\", isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"], options: [\"ngModelOptions\", \"options\"] }, outputs: { update: \"ngModelChange\" }, providers: [formControlBinding$1], exportAs: [\"ngModel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NgModel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngModel]:not([formControlName]):not([formControl])',\n                    providers: [formControlBinding$1],\n                    exportAs: 'ngModel'\n                }]\n        }], ctorParameters: function () { return [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }]; }, propDecorators: { name: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], options: [{\n                type: Input,\n                args: ['ngModelOptions']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nclass ɵNgNoValidate {\n}\nɵNgNoValidate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: ɵNgNoValidate, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nɵNgNoValidate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\", host: { attributes: { \"novalidate\": \"\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: ɵNgNoValidate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                    host: { 'novalidate': '' },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NumberValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        const normalizedValue = value == null ? '' : value;\n        this.setProperty('value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n}\nNumberValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NumberValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nNumberValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\", host: { listeners: { \"input\": \"onChange($event.target.value)\", \"blur\": \"onTouched()\" } }, providers: [NUMBER_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NumberValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                    host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [NUMBER_VALUE_ACCESSOR]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioControlValueAccessor),\n    multi: true\n};\nfunction throwNameError() {\n    throw new ɵRuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * Internal-only NgModule that works as a host for the `RadioControlRegistry` tree-shakable\n * provider. Note: the `InternalFormsSharedModule` can not be used here directly, since it's\n * declared *after* the `RadioControlRegistry` class and the `providedIn` doesn't support\n * `forwardRef` logic.\n */\nclass RadioControlRegistryModule {\n}\nRadioControlRegistryModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: RadioControlRegistryModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRadioControlRegistryModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.1\", ngImport: i0, type: RadioControlRegistryModule });\nRadioControlRegistryModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: RadioControlRegistryModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: RadioControlRegistryModule, decorators: [{\n            type: NgModule\n        }] });\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nclass RadioControlRegistry {\n    constructor() {\n        this._accessors = [];\n    }\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n        this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n        for (let i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n        this._accessors.forEach((c) => {\n            if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    }\n    _isSameGroup(controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    }\n}\nRadioControlRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: RadioControlRegistry, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nRadioControlRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: RadioControlRegistry, providedIn: RadioControlRegistryModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: RadioControlRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: RadioControlRegistryModule }]\n        }] });\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RadioControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor(renderer, elementRef, _registry, _injector) {\n        super(renderer, elementRef);\n        this._registry = _registry;\n        this._injector = _injector;\n        /**\n         * The registered callback function called when a change event occurs on the input element.\n         * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n         * to override the `onChange` function (which expects 1 argument) in the parent\n         * `BaseControlValueAccessor` class.\n         * @nodoc\n         */\n        this.onChange = () => { };\n    }\n    /** @nodoc */\n    ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this._state = value === this.value;\n        this.setProperty('checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this._fn = fn;\n        this.onChange = () => {\n            fn(this.value);\n            this._registry.select(this);\n        };\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n        this.writeValue(value);\n    }\n    _checkName() {\n        if (this.name && this.formControlName && this.name !== this.formControlName &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    }\n}\nRadioControlValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: RadioControlValueAccessor, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: RadioControlRegistry }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Directive });\nRadioControlValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: RadioControlValueAccessor, selector: \"input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]\", inputs: { name: \"name\", formControlName: \"formControlName\", value: \"value\" }, host: { listeners: { \"change\": \"onChange()\", \"blur\": \"onTouched()\" } }, providers: [RADIO_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: RadioControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                    host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                    providers: [RADIO_VALUE_ACCESSOR]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: RadioControlRegistry }, { type: i0.Injector }]; }, propDecorators: { name: [{\n                type: Input\n            }], formControlName: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeValueAccessor),\n    multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass RangeValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.setProperty('value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => {\n            fn(value == '' ? null : parseFloat(value));\n        };\n    }\n}\nRangeValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: RangeValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nRangeValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: RangeValueAccessor, selector: \"input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]\", host: { listeners: { \"change\": \"onChange($event.target.value)\", \"input\": \"onChange($event.target.value)\", \"blur\": \"onTouched()\" } }, providers: [RANGE_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: RangeValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                    host: {\n                        '(change)': 'onChange($event.target.value)',\n                        '(input)': 'onChange($event.target.value)',\n                        '(blur)': 'onTouched()'\n                    },\n                    providers: [RANGE_VALUE_ACCESSOR]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken('NgModelWithFormControlWarning');\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlDirective extends NgControl {\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            console.warn(disabledAttrWarning);\n        }\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            const previousForm = changes['form'].previousValue;\n            if (previousForm) {\n                cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */ false);\n            }\n            setUpControl(this.form, this);\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n            }\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.form) {\n            cleanUpControl(this.form, this, /* validateControlPresenceOnChange */ false);\n        }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n        return changes.hasOwnProperty('form');\n    }\n}\n/**\n * @description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlDirective. Used to support warning config of \"once\".\n *\n * @internal\n */\nFormControlDirective._ngModelWarningSentOnce = false;\nFormControlDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormControlDirective, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: NG_MODEL_WITH_FORM_CONTROL_WARNING, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nFormControlDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: FormControlDirective, selector: \"[formControl]\", inputs: { form: [\"formControl\", \"form\"], isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, providers: [formControlBinding], exportAs: [\"ngForm\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormControlDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formControl]', providers: [formControlBinding], exportAs: 'ngForm' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n                }] }]; }, propDecorators: { form: [{\n                type: Input,\n                args: ['formControl']\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupDirective extends ControlContainer {\n    constructor(validators, asyncValidators) {\n        super();\n        this.validators = validators;\n        this.asyncValidators = asyncValidators;\n        /**\n         * @description\n         * Reports whether the form submission has been triggered.\n         */\n        this.submitted = false;\n        /**\n         * Callback that should be invoked when controls in FormGroup or FormArray collection change\n         * (added or removed). This callback triggers corresponding DOM updates.\n         */\n        this._onCollectionChange = () => this._updateDomValue();\n        /**\n         * @description\n         * Tracks the list of added `FormControlName` instances\n         */\n        this.directives = [];\n        /**\n         * @description\n         * Tracks the `FormGroup` bound to this directive.\n         */\n        this.form = null;\n        /**\n         * @description\n         * Emits an event when the form submission has been triggered.\n         */\n        this.ngSubmit = new EventEmitter();\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n            this._oldForm = this.form;\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.form) {\n            cleanUpValidators(this.form, this);\n            // Currently the `onCollectionChange` callback is rewritten each time the\n            // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n            // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n            // Otherwise it might cause overriding a callback of some other directive instances. We should\n            // consider updating this logic later to make it similar to how `onChange` callbacks are\n            // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n            if (this.form._onCollectionChange === this._onCollectionChange) {\n                this.form._registerOnCollectionChange(() => { });\n            }\n        }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n        return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n        return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n        return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n        cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */ false);\n        removeListItem$1(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n        this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) {\n        this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n        this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) {\n        this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n        return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n        this.submitted = true;\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n        this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        this.submitted = false;\n    }\n    /** @internal */\n    _updateDomValue() {\n        this.directives.forEach(dir => {\n            const oldCtrl = dir.control;\n            const newCtrl = this.form.get(dir.path);\n            if (oldCtrl !== newCtrl) {\n                // Note: the value of the `dir.control` may not be defined, for example when it's a first\n                // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n                cleanUpControl(oldCtrl || null, dir);\n                // Check whether new control at the same location inside the corresponding `FormGroup` is an\n                // instance of `FormControl` and perform control setup only if that's the case.\n                // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n                // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n                // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n                if (isFormControl(newCtrl)) {\n                    setUpControl(newCtrl, dir);\n                    dir.control = newCtrl;\n                }\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    }\n    _setUpFormContainer(dir) {\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        // NOTE: this operation looks unnecessary in case no new validators were added in\n        // `setUpFormContainer` call. Consider updating this code to match the logic in\n        // `_cleanUpFormContainer` function.\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    _cleanUpFormContainer(dir) {\n        if (this.form) {\n            const ctrl = this.form.get(dir.path);\n            if (ctrl) {\n                const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n                if (isControlUpdated) {\n                    // Run validity check only in case a control was updated (i.e. view validators were\n                    // removed) as removing view validators might cause validity to change.\n                    ctrl.updateValueAndValidity({ emitEvent: false });\n                }\n            }\n        }\n    }\n    _updateRegistrations() {\n        this.form._registerOnCollectionChange(this._onCollectionChange);\n        if (this._oldForm) {\n            this._oldForm._registerOnCollectionChange(() => { });\n        }\n    }\n    _updateValidators() {\n        setUpValidators(this.form, this);\n        if (this._oldForm) {\n            cleanUpValidators(this._oldForm, this);\n        }\n    }\n    _checkFormPresent() {\n        if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw missingFormException();\n        }\n    }\n}\nFormGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormGroupDirective, deps: [{ token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nFormGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: FormGroupDirective, selector: \"[formGroup]\", inputs: { form: [\"formGroup\", \"form\"] }, outputs: { ngSubmit: \"ngSubmit\" }, host: { listeners: { \"submit\": \"onSubmit($event)\", \"reset\": \"onReset()\" } }, providers: [formDirectiveProvider], exportAs: [\"ngForm\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[formGroup]',\n                    providers: [formDirectiveProvider],\n                    host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                    exportAs: 'ngForm'\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }]; }, propDecorators: { form: [{\n                type: Input,\n                args: ['formGroup']\n            }], ngSubmit: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw groupParentException();\n        }\n    }\n}\nFormGroupName.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormGroupName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nFormGroupName.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: FormGroupName, selector: \"[formGroupName]\", inputs: { name: [\"formGroupName\", \"name\"] }, providers: [formGroupNameProvider], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormGroupName, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] }]\n        }], ctorParameters: function () { return [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['formGroupName']\n            }] } });\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormArrayName extends ControlContainer {\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @nodoc\n     */\n    ngOnInit() {\n        this._checkParentType();\n        this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @nodoc\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n        return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw arrayParentException();\n        }\n    }\n}\nFormArrayName.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormArrayName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive });\nFormArrayName.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: FormArrayName, selector: \"[formArrayName]\", inputs: { name: [\"formArrayName\", \"name\"] }, providers: [formArrayNameProvider], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormArrayName, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] }]\n        }], ctorParameters: function () { return [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['formArrayName']\n            }] } });\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see `FormControl`\n * @see `AbstractControl`\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass FormControlName extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this._added = false;\n        /** @deprecated as of v6 */\n        this.update = new EventEmitter();\n        /**\n         * @description\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular FormControlName instance. Used to support warning config of \"always\".\n         *\n         * @internal\n         */\n        this._ngModelWarningSent = false;\n        this._parent = parent;\n        this._setValidators(validators);\n        this._setAsyncValidators(asyncValidators);\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            console.warn(disabledAttrWarning);\n        }\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n            }\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n        return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n        return this._parent ? this._parent.formDirective : null;\n    }\n    _checkParentType() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                throw ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) &&\n                !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                throw controlParentException();\n            }\n        }\n    }\n    _setUpControl() {\n        this._checkParentType();\n        this.control = this.formDirective.addControl(this);\n        this._added = true;\n    }\n}\n/**\n * @description\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlName. Used to support warning config of \"once\".\n *\n * @internal\n */\nFormControlName._ngModelWarningSentOnce = false;\nFormControlName.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormControlName, deps: [{ token: ControlContainer, host: true, optional: true, skipSelf: true }, { token: NG_VALIDATORS, optional: true, self: true }, { token: NG_ASYNC_VALIDATORS, optional: true, self: true }, { token: NG_VALUE_ACCESSOR, optional: true, self: true }, { token: NG_MODEL_WITH_FORM_CONTROL_WARNING, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nFormControlName.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: FormControlName, selector: \"[formControlName]\", inputs: { name: [\"formControlName\", \"name\"], isDisabled: [\"disabled\", \"isDisabled\"], model: [\"ngModel\", \"model\"] }, outputs: { update: \"ngModelChange\" }, providers: [controlNameBinding], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormControlName, decorators: [{\n            type: Directive,\n            args: [{ selector: '[formControlName]', providers: [controlNameBinding] }]\n        }], ctorParameters: function () { return [{ type: ControlContainer, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_ASYNC_VALIDATORS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [NG_VALUE_ACCESSOR]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [NG_MODEL_WITH_FORM_CONTROL_WARNING]\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['formControlName']\n            }], isDisabled: [{\n                type: Input,\n                args: ['disabled']\n            }], model: [{\n                type: Input,\n                args: ['ngModel']\n            }], update: [{\n                type: Output,\n                args: ['ngModelChange']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on the select element.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.value = value;\n        const id = this._getOptionId(value);\n        const valueString = _buildValueString$1(id, value);\n        this.setProperty('value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (valueString) => {\n            this.value = this._getOptionValue(valueString);\n            fn(this.value);\n        };\n    }\n    /** @internal */\n    _registerOption() {\n        return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n}\nSelectControlValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: SelectControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nSelectControlValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: SelectControlValueAccessor, selector: \"select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]\", inputs: { compareWith: \"compareWith\" }, host: { listeners: { \"change\": \"onChange($event.target.value)\", \"blur\": \"onTouched()\" } }, providers: [SELECT_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: SelectControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                    host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_VALUE_ACCESSOR]\n                }]\n        }], propDecorators: { compareWith: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass NgSelectOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._select._optionMap.set(this.id, value);\n        this._setElementValue(_buildValueString$1(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        this._setElementValue(value);\n        if (this._select)\n            this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nNgSelectOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NgSelectOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: SelectControlValueAccessor, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nNgSelectOption.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: NgSelectOption, selector: \"option\", inputs: { ngValue: \"ngValue\", value: \"value\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NgSelectOption, decorators: [{\n            type: Directive,\n            args: [{ selector: 'option' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: SelectControlValueAccessor, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }]; }, propDecorators: { ngValue: [{\n                type: Input,\n                args: ['ngValue']\n            }], value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see `SelectControlValueAccessor`\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @nodoc\n     */\n    writeValue(value) {\n        this.value = value;\n        let optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            // convert values to ids\n            const ids = value.map((v) => this._getOptionId(v));\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(ids.indexOf(o.toString()) > -1);\n            };\n        }\n        else {\n            optionSelectedStateSetter = (opt, o) => {\n                opt._setSelected(false);\n            };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n        this.onChange = (element) => {\n            const selected = [];\n            const selectedOptions = element.selectedOptions;\n            if (selectedOptions !== undefined) {\n                const options = selectedOptions;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options[i];\n                    const val = this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade to use `options` when `selectedOptions` property is not available.\n            // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n            // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n            else {\n                const options = element.options;\n                for (let i = 0; i < options.length; i++) {\n                    const opt = options[i];\n                    if (opt.selected) {\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            this.value = selected;\n            fn(selected);\n        };\n    }\n    /** @internal */\n    _registerOption(value) {\n        const id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n        const id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n}\nSelectMultipleControlValueAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: SelectMultipleControlValueAccessor, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nSelectMultipleControlValueAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: SelectMultipleControlValueAccessor, selector: \"select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]\", inputs: { compareWith: \"compareWith\" }, host: { listeners: { \"change\": \"onChange($event.target)\", \"blur\": \"onTouched()\" } }, providers: [SELECT_MULTIPLE_VALUE_ACCESSOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: SelectMultipleControlValueAccessor, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                    host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                    providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                }]\n        }], propDecorators: { compareWith: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see `SelectMultipleControlValueAccessor`\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass ɵNgSelectMultipleOption {\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._value = value;\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n        if (this._select) {\n            this._value = value;\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        else {\n            this._setElementValue(value);\n        }\n    }\n    /** @internal */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nɵNgSelectMultipleOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: ɵNgSelectMultipleOption, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: SelectMultipleControlValueAccessor, host: true, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nɵNgSelectMultipleOption.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: ɵNgSelectMultipleOption, selector: \"option\", inputs: { ngValue: \"ngValue\", value: \"value\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: ɵNgSelectMultipleOption, decorators: [{\n            type: Directive,\n            args: [{ selector: 'option' }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: SelectMultipleControlValueAccessor, decorators: [{\n                    type: Optional\n                }, {\n                    type: Host\n                }] }]; }, propDecorators: { ngValue: [{\n                type: Input,\n                args: ['ngValue']\n            }], value: [{\n                type: Input,\n                args: ['value']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n    return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n    return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nclass AbstractValidatorDirective {\n    constructor() {\n        this._validator = nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n        if (this.inputName in changes) {\n            const input = this.normalizeInput(changes[this.inputName].currentValue);\n            this._enabled = this.enabled(input);\n            this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n            if (this._onChange) {\n                this._onChange();\n            }\n        }\n    }\n    /** @nodoc */\n    validate(control) {\n        return this._validator(control);\n    }\n    /** @nodoc */\n    registerOnValidatorChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * @description\n     * Determines whether this validator should be active or not based on an input.\n     * Base class implementation checks whether an input is defined (if the value is different from\n     * `null` and `undefined`). Validator classes that extend this base class can override this\n     * function with the logic specific to a particular validator directive.\n     */\n    enabled(input) {\n        return input != null /* both `null` and `undefined` */;\n    }\n}\nAbstractValidatorDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: AbstractValidatorDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nAbstractValidatorDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: AbstractValidatorDirective, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: AbstractValidatorDirective, decorators: [{\n            type: Directive\n        }] });\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'max';\n        /** @internal */\n        this.normalizeInput = (input) => toFloat(input);\n        /** @internal */\n        this.createValidator = (max) => maxValidator(max);\n    }\n}\nMaxValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: MaxValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMaxValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: MaxValidator, selector: \"input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]\", inputs: { max: \"max\" }, host: { properties: { \"attr.max\": \"_enabled ? max : null\" } }, providers: [MAX_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: MaxValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][max][formControlName],input[type=number][max][formControl],input[type=number][max][ngModel]',\n                    providers: [MAX_VALIDATOR],\n                    host: { '[attr.max]': '_enabled ? max : null' }\n                }]\n        }], propDecorators: { max: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'min';\n        /** @internal */\n        this.normalizeInput = (input) => toFloat(input);\n        /** @internal */\n        this.createValidator = (min) => minValidator(min);\n    }\n}\nMinValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: MinValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMinValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: MinValidator, selector: \"input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]\", inputs: { min: \"min\" }, host: { properties: { \"attr.min\": \"_enabled ? min : null\" } }, providers: [MIN_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: MinValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=number][min][formControlName],input[type=number][min][formControl],input[type=number][min][ngModel]',\n                    providers: [MIN_VALIDATOR],\n                    host: { '[attr.min]': '_enabled ? min : null' }\n                }]\n        }], propDecorators: { min: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RequiredValidator),\n    multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CheckboxRequiredValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nclass RequiredValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'required';\n        /** @internal */\n        this.normalizeInput = ɵcoerceToBoolean;\n        /** @internal */\n        this.createValidator = (input) => requiredValidator;\n    }\n    /** @nodoc */\n    enabled(input) {\n        return input;\n    }\n}\nRequiredValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: RequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nRequiredValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: { required: \"required\" }, host: { properties: { \"attr.required\": \"_enabled ? \\\"\\\" : null\" } }, providers: [REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: RequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                    providers: [REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': '_enabled ? \"\" : null' }\n                }]\n        }], propDecorators: { required: [{\n                type: Input\n            }] } });\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.createValidator = (input) => requiredTrueValidator;\n    }\n}\nCheckboxRequiredValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: CheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nCheckboxRequiredValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: CheckboxRequiredValidator, selector: \"input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]\", host: { properties: { \"attr.required\": \"_enabled ? \\\"\\\" : null\" } }, providers: [CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: CheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                    providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                    host: { '[attr.required]': '_enabled ? \"\" : null' }\n                }]\n        }] });\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EmailValidator),\n    multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nclass EmailValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'email';\n        /** @internal */\n        this.normalizeInput = ɵcoerceToBoolean;\n        /** @internal */\n        this.createValidator = (input) => emailValidator;\n    }\n    /** @nodoc */\n    enabled(input) {\n        return input;\n    }\n}\nEmailValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: EmailValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nEmailValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: EmailValidator, selector: \"[email][formControlName],[email][formControl],[email][ngModel]\", inputs: { email: \"email\" }, providers: [EMAIL_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: EmailValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                    providers: [EMAIL_VALIDATOR]\n                }]\n        }], propDecorators: { email: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MinLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'minlength';\n        /** @internal */\n        this.normalizeInput = (input) => toInteger(input);\n        /** @internal */\n        this.createValidator = (minlength) => minLengthValidator(minlength);\n    }\n}\nMinLengthValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: MinLengthValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMinLengthValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: MinLengthValidator, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: { minlength: \"minlength\" }, host: { properties: { \"attr.minlength\": \"_enabled ? minlength : null\" } }, providers: [MIN_LENGTH_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: MinLengthValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                    providers: [MIN_LENGTH_VALIDATOR],\n                    host: { '[attr.minlength]': '_enabled ? minlength : null' }\n                }]\n        }], propDecorators: { minlength: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxLengthValidator),\n    multi: true\n};\n/**\n * A directive that adds max length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass MaxLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'maxlength';\n        /** @internal */\n        this.normalizeInput = (input) => toInteger(input);\n        /** @internal */\n        this.createValidator = (maxlength) => maxLengthValidator(maxlength);\n    }\n}\nMaxLengthValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: MaxLengthValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMaxLengthValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: { maxlength: \"maxlength\" }, host: { properties: { \"attr.maxlength\": \"_enabled ? maxlength : null\" } }, providers: [MAX_LENGTH_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: MaxLengthValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                    providers: [MAX_LENGTH_VALIDATOR],\n                    host: { '[attr.maxlength]': '_enabled ? maxlength : null' }\n                }]\n        }], propDecorators: { maxlength: [{\n                type: Input\n            }] } });\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PatternValidator),\n    multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nclass PatternValidator extends AbstractValidatorDirective {\n    constructor() {\n        super(...arguments);\n        /** @internal */\n        this.inputName = 'pattern';\n        /** @internal */\n        this.normalizeInput = (input) => input;\n        /** @internal */\n        this.createValidator = (input) => patternValidator(input);\n    }\n}\nPatternValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: PatternValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nPatternValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.1\", type: PatternValidator, selector: \"[pattern][formControlName],[pattern][formControl],[pattern][ngModel]\", inputs: { pattern: \"pattern\" }, host: { properties: { \"attr.pattern\": \"_enabled ? pattern : null\" } }, providers: [PATTERN_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: PatternValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                    providers: [PATTERN_VALIDATOR],\n                    host: { '[attr.pattern]': '_enabled ? pattern : null' }\n                }]\n        }], propDecorators: { pattern: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SHARED_FORM_DIRECTIVES = [\n    ɵNgNoValidate,\n    NgSelectOption,\n    ɵNgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n    MinValidator,\n    MaxValidator,\n];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass ɵInternalFormsSharedModule {\n}\nɵInternalFormsSharedModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: ɵInternalFormsSharedModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nɵInternalFormsSharedModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.1\", ngImport: i0, type: ɵInternalFormsSharedModule, declarations: [ɵNgNoValidate,\n        NgSelectOption,\n        ɵNgSelectMultipleOption,\n        DefaultValueAccessor,\n        NumberValueAccessor,\n        RangeValueAccessor,\n        CheckboxControlValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n        NgControlStatus,\n        NgControlStatusGroup,\n        RequiredValidator,\n        MinLengthValidator,\n        MaxLengthValidator,\n        PatternValidator,\n        CheckboxRequiredValidator,\n        EmailValidator,\n        MinValidator,\n        MaxValidator], imports: [RadioControlRegistryModule], exports: [ɵNgNoValidate,\n        NgSelectOption,\n        ɵNgSelectMultipleOption,\n        DefaultValueAccessor,\n        NumberValueAccessor,\n        RangeValueAccessor,\n        CheckboxControlValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n        NgControlStatus,\n        NgControlStatusGroup,\n        RequiredValidator,\n        MinLengthValidator,\n        MaxLengthValidator,\n        PatternValidator,\n        CheckboxRequiredValidator,\n        EmailValidator,\n        MinValidator,\n        MaxValidator] });\nɵInternalFormsSharedModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: ɵInternalFormsSharedModule, imports: [RadioControlRegistryModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: ɵInternalFormsSharedModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: SHARED_FORM_DIRECTIVES,\n                    imports: [RadioControlRegistryModule],\n                    exports: SHARED_FORM_DIRECTIVES,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * Providers associated with this module:\n * * `RadioControlRegistry`\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nclass FormsModule {\n}\nFormsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFormsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.1\", ngImport: i0, type: FormsModule, declarations: [NgModel, NgModelGroup, NgForm], exports: [ɵInternalFormsSharedModule, NgModel, NgModelGroup, NgForm] });\nFormsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormsModule, imports: [ɵInternalFormsSharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                    exports: [ɵInternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                }]\n        }] });\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * Providers associated with this module:\n * * `FormBuilder`\n * * `RadioControlRegistry`\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: ReactiveFormsModule,\n            providers: [\n                { provide: NG_MODEL_WITH_FORM_CONTROL_WARNING, useValue: opts.warnOnNgModelWithFormControl }\n            ]\n        };\n    }\n}\nReactiveFormsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: ReactiveFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nReactiveFormsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.1\", ngImport: i0, type: ReactiveFormsModule, declarations: [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName], exports: [ɵInternalFormsSharedModule, FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName] });\nReactiveFormsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: ReactiveFormsModule, imports: [ɵInternalFormsSharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: ReactiveFormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                    exports: [ɵInternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({\n            onlySelf: true,\n            // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n            // `VALID` or `INVALID`.\n            // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n            // to `true` to allow that during the control creation process.\n            emitEvent: !!this.asyncValidator\n        });\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n     *     around from the back, and if index is greatly negative (less than `-length`), the result is\n     * undefined. This behavior is the same as `Array.at(index)`.\n     */\n    at(index) {\n        return this.controls[this._adjustIndex(index)];\n    }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param control Form control to be inserted\n     * @param options Specifies whether this FormArray instance should emit events after a new\n     *     control is added.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * inserted. When false, no events are emitted.\n     */\n    push(control, options = {}) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param index Index in the array to insert the control. If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n     * This behavior is the same as `Array.splice(index, 0, control)`.\n     * @param control Form control to be inserted\n     * @param options Specifies whether this FormArray instance should emit events after a new\n     *     control is inserted.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * inserted. When false, no events are emitted.\n     */\n    insert(index, control, options = {}) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n     *     element. This behavior is the same as `Array.splice(index, 1)`.\n     * @param options Specifies whether this FormArray instance should emit events after a\n     *     control is removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * removed. When false, no events are emitted.\n     */\n    removeAt(index, options = {}) {\n        // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n        let adjustedIndex = this._adjustIndex(index);\n        if (adjustedIndex < 0)\n            adjustedIndex = 0;\n        if (this.controls[adjustedIndex])\n            this.controls[adjustedIndex]._registerOnCollectionChange(() => { });\n        this.controls.splice(adjustedIndex, 1);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param index Index in the array to replace the control. If `index` is negative, wraps around\n     *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n     *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n     * @param control The `AbstractControl` control to replace the existing control\n     * @param options Specifies whether this FormArray instance should emit events after an\n     *     existing control is replaced with a new one.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control is\n     * replaced with a new one. When false, no events are emitted.\n     */\n    setControl(index, control, options = {}) {\n        // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n        let adjustedIndex = this._adjustIndex(index);\n        if (adjustedIndex < 0)\n            adjustedIndex = 0;\n        if (this.controls[adjustedIndex])\n            this.controls[adjustedIndex]._registerOnCollectionChange(() => { });\n        this.controls.splice(adjustedIndex, 1);\n        if (control) {\n            this.controls.splice(adjustedIndex, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     */\n    get length() {\n        return this.controls.length;\n    }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * @usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    setValue(value, options = {}) {\n        assertAllValuesPresent(this, false, value);\n        value.forEach((newValue, index) => {\n            assertControlPresent(this, false, index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * @usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param value Array of latest values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when the control\n     * value is updated. When false, no events are emitted. The configuration options are passed to\n     * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n     */\n    patchValue(value, options = {}) {\n        // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n        // `patchValue` can be called recursively and inner data structures might have these values,\n        // so we just ignore such cases when a field containing FormArray instance receives `null` or\n        // `undefined` as a value.\n        if (value == null /* both `null` and `undefined` */)\n            return;\n        value.forEach((newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * @usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(arr.value);  // ['last']\n     * console.log(arr.at(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param value Array of values for the controls\n     * @param options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this._updatePristine(options);\n        this._updateTouched(options);\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     */\n    getRawValue() {\n        return this.controls.map((control) => control.getRawValue());\n    }\n    /**\n     * Remove all controls in the `FormArray`.\n     *\n     * @param options Specifies whether this FormArray instance should emit events after all\n     *     controls are removed.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges` observables emit events with the latest status and value when all controls\n     * in this FormArray instance are removed. When false, no events are emitted.\n     *\n     * @usageNotes\n     * ### Remove all elements from a FormArray\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.length);  // 2\n     *\n     * arr.clear();\n     * console.log(arr.length);  // 0\n     * ```\n     *\n     * It's a simpler and more efficient alternative to removing all elements one by one:\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     *\n     * while (arr.length) {\n     *    arr.removeAt(0);\n     * }\n     * ```\n     */\n    clear(options = {}) {\n        if (this.controls.length < 1)\n            return;\n        this._forEachChild((control) => control._registerOnCollectionChange(() => { }));\n        this.controls.splice(0);\n        this.updateValueAndValidity({ emitEvent: options.emitEvent });\n    }\n    /**\n     * Adjusts a negative index by summing it with the length of the array. For very negative\n     * indices, the result may remain negative.\n     * @internal\n     */\n    _adjustIndex(index) {\n        return index < 0 ? index + this.length : index;\n    }\n    /** @internal */\n    _syncPendingControls() {\n        let subtreeUpdated = this.controls.reduce((updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /** @internal */\n    _forEachChild(cb) {\n        this.controls.forEach((control, index) => {\n            cb(control, index);\n        });\n    }\n    /** @internal */\n    _updateValue() {\n        this.value =\n            this.controls.filter((control) => control.enabled || this.disabled)\n                .map((control) => control.value);\n    }\n    /** @internal */\n    _anyControls(condition) {\n        return this.controls.some((control) => control.enabled && condition(control));\n    }\n    /** @internal */\n    _setUpControls() {\n        this._forEachChild((control) => this._registerControl(control));\n    }\n    /** @internal */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n    /** @internal */\n    _find(name) {\n        return this.at(name) ?? null;\n    }\n}\nconst UntypedFormArray = FormArray;\nconst isFormArray = (control) => control instanceof FormArray;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isAbstractControlOptions(options) {\n    return !!options &&\n        (options.asyncValidators !== undefined ||\n            options.validators !== undefined ||\n            options.updateOn !== undefined);\n}\n// clang-format on\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nclass FormBuilder {\n    constructor() {\n        this.useNonNullable = false;\n    }\n    /**\n     * @description\n     * Returns a FormBuilder in which automatically constructed @see FormControl} elements\n     * have `{nonNullable: true}` and are non-nullable.\n     *\n     * **Constructing non-nullable controls**\n     *\n     * When constructing a control, it will be non-nullable, and will reset to its initial value.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.control('Alex'); // FormControl<string>\n     * name.reset();\n     * console.log(name); // 'Alex'\n     * ```\n     *\n     * **Constructing non-nullable groups or arrays**\n     *\n     * When constructing a group or array, all automatically created inner controls will be\n     * non-nullable, and will reset to their initial values.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n     * name.reset();\n     * console.log(name); // {who: 'Alex'}\n     * ```\n     * **Constructing *nullable* fields on groups or arrays**\n     *\n     * It is still possible to have a nullable field. In particular, any `FormControl` which is\n     * *already* constructed will not be altered. For example:\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * // FormGroup<{who: FormControl<string|null>}>\n     * let name = nnfb.group({who: new FormControl('Alex')});\n     * name.reset(); console.log(name); // {who: null}\n     * ```\n     *\n     * Because the inner control is constructed explicitly by the caller, the builder has\n     * no control over how it is created, and cannot exclude the `null`.\n     */\n    get nonNullable() {\n        const nnfb = new FormBuilder();\n        nnfb.useNonNullable = true;\n        return nnfb;\n    }\n    group(controls, options = null) {\n        const reducedControls = this._reduceControls(controls);\n        let newOptions = {};\n        if (isAbstractControlOptions(options)) {\n            // `options` are `AbstractControlOptions`\n            newOptions = options;\n        }\n        else if (options !== null) {\n            // `options` are legacy form group options\n            newOptions.validators = options.validator;\n            newOptions.asyncValidators = options.asyncValidator;\n        }\n        return new FormGroup(reducedControls, newOptions);\n    }\n    /**\n     * @description\n     * Construct a new `FormRecord` instance. Accepts a single generic argument, which is an object\n     * containing all the keys and corresponding inner control types.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormRecord`. The object should have the\n     * `AbstractControlOptions` type and might contain the following fields:\n     * * `validators`: A synchronous validator function, or an array of validator functions.\n     * * `asyncValidators`: A single async validator or array of async validator functions.\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n     * | submit').\n     */\n    record(controls, options = null) {\n        const reducedControls = this._reduceControls(controls);\n        // Cast to `any` because the inferred types are not as specific as Element.\n        return new FormRecord(reducedControls, options);\n    }\n    /**\n     * @description\n     * Construct a new `FormControl` with the given state, validators and options. Set\n     * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n     * control will be nullable. Accepts a single generic argument, which is the type  of the\n     * control's value.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or a `FormControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        let newOptions = {};\n        if (!this.useNonNullable) {\n            return new FormControl(formState, validatorOrOpts, asyncValidator);\n        }\n        if (isAbstractControlOptions(validatorOrOpts)) {\n            // If the second argument is options, then they are copied.\n            newOptions = validatorOrOpts;\n        }\n        else {\n            // If the other arguments are validators, they are copied into an options object.\n            newOptions.validators = validatorOrOpts;\n            newOptions.asyncValidators = asyncValidator;\n        }\n        return new FormControl(formState, { ...newOptions, nonNullable: true });\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options. Accepts a single generic argument, which is the type of each control\n     * inside the array.\n     *\n     * @param controls An array of child controls or control configs. Each child control is given an\n     *     index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n     *     `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions.\n     */\n    array(controls, validatorOrOpts, asyncValidator) {\n        const createdControls = controls.map(c => this._createControl(c));\n        // Cast to `any` because the inferred types are not as specific as Element.\n        return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controls) {\n        const createdControls = {};\n        Object.keys(controls).forEach(controlName => {\n            createdControls[controlName] = this._createControl(controls[controlName]);\n        });\n        return createdControls;\n    }\n    /** @internal */\n    _createControl(controls) {\n        if (controls instanceof FormControl) {\n            return controls;\n        }\n        else if (controls instanceof AbstractControl) { // A control; just return it\n            return controls;\n        }\n        else if (Array.isArray(controls)) { // ControlConfig Tuple\n            const value = controls[0];\n            const validator = controls.length > 1 ? controls[1] : null;\n            const asyncValidator = controls.length > 2 ? controls[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else { // T or FormControlState<T>\n            return this.control(controls);\n        }\n    }\n}\nFormBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nFormBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormBuilder, providedIn: ReactiveFormsModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: FormBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: ReactiveFormsModule }]\n        }] });\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nclass NonNullableFormBuilder {\n}\nNonNullableFormBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NonNullableFormBuilder, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNonNullableFormBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NonNullableFormBuilder, providedIn: ReactiveFormsModule, useFactory: () => inject(FormBuilder).nonNullable });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: NonNullableFormBuilder, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: ReactiveFormsModule,\n                    useFactory: () => inject(FormBuilder).nonNullable,\n                }]\n        }] });\n/**\n * UntypedFormBuilder is the same as @see FormBuilder, but it provides untyped controls.\n */\nclass UntypedFormBuilder extends FormBuilder {\n    group(controlsConfig, options = null) {\n        return super.group(controlsConfig, options);\n    }\n    /**\n     * Like `FormBuilder#control`, except the resulting control is untyped.\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n        return super.control(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Like `FormBuilder#array`, except the resulting array is untyped.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n        return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n    }\n}\nUntypedFormBuilder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: UntypedFormBuilder, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nUntypedFormBuilder.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: UntypedFormBuilder, providedIn: ReactiveFormsModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.1\", ngImport: i0, type: UntypedFormBuilder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: ReactiveFormsModule }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('14.2.1');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n","import * as i4 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Attribute, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i2 from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor(ariaLive, elementRef) {\n        this.id = `mat-error-${nextUniqueId$2++}`;\n        // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n        // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n        if (!ariaLive) {\n            elementRef.nativeElement.setAttribute('aria-live', 'polite');\n        }\n    }\n}\nMatError.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatError, deps: [{ token: 'aria-live', attribute: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatError.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatError, selector: \"mat-error\", inputs: { id: \"id\" }, host: { attributes: { \"aria-atomic\": \"true\" }, properties: { \"attr.id\": \"id\" }, classAttribute: \"mat-error\" }, providers: [{ provide: MAT_ERROR, useExisting: MatError }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatError, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-error',\n                    host: {\n                        'class': 'mat-error',\n                        '[attr.id]': 'id',\n                        'aria-atomic': 'true',\n                    },\n                    providers: [{ provide: MAT_ERROR, useExisting: MatError }],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['aria-live']\n                }] }, { type: i0.ElementRef }]; }, propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-5px)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormFieldControl, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatFormFieldControl.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFormFieldControl, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormFieldControl, decorators: [{\n            type: Directive\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHint, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatHint.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHint, selector: \"mat-hint\", inputs: { align: \"align\", id: \"id\" }, host: { properties: { \"class.mat-form-field-hint-end\": \"align === \\\"end\\\"\", \"attr.id\": \"id\", \"attr.align\": \"null\" }, classAttribute: \"mat-hint\" }, providers: [{ provide: _MAT_HINT, useExisting: MatHint }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHint, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-hint',\n                    host: {\n                        'class': 'mat-hint',\n                        '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                        '[attr.id]': 'id',\n                        // Remove align attribute to prevent it from interfering with layout.\n                        '[attr.align]': 'null',\n                    },\n                    providers: [{ provide: _MAT_HINT, useExisting: MatHint }],\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatLabel, selector: \"mat-label\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-label',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPlaceholder, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPlaceholder, selector: \"mat-placeholder\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-placeholder',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPrefix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPrefix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPrefix, selector: \"[matPrefix]\", providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPrefix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matPrefix]',\n                    providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSuffix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSuffix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSuffix, selector: \"[matSuffix]\", providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSuffix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSuffix]',\n                    providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nconst _MatFormFieldBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldBase {\n    constructor(elementRef, _changeDetectorRef, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = _defaults && _defaults.appearance ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker =\n            _defaults && _defaults.hideRequiredMarker != null ? _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() {\n        return this._appearance;\n    }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n        return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() {\n        return this.floatLabel !== 'never';\n    }\n    /** Text for the form field hint. */\n    get hintLabel() {\n        return this._hintLabel;\n    }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!((this._control && this._control.placeholder) || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return (this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat()));\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return ((this.appearance === 'legacy' && !this._hasLabel()) ||\n            (this._hasLabel() && !this._shouldLabelFloat()));\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || (this.appearance === 'legacy' && this._hasPlaceholder());\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState\n            ? 'error'\n            : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend')\n                    .pipe(take(1))\n                    .subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder &&\n            this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'start')\n                    : null;\n                const endHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'end')\n                    : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        const container = this._connectionContainerRef.nativeElement;\n        const outlineStartSelector = '.mat-form-field-outline-start';\n        const outlineGapSelector = '.mat-form-field-outline-gap';\n        // getBoundingClientRect isn't available on the server.\n        if (this.appearance !== 'outline' || !this._platform.isBrowser) {\n            return;\n        }\n        // If there is no content, set the gap elements to zero.\n        if (!labelEl || !labelEl.children.length || !labelEl.textContent.trim()) {\n            const gapElements = container.querySelectorAll(`${outlineStartSelector}, ${outlineGapSelector}`);\n            for (let i = 0; i < gapElements.length; i++) {\n                gapElements[i].style.width = '0';\n            }\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const startEls = container.querySelectorAll(outlineStartSelector);\n        const gapEls = container.querySelectorAll(outlineGapSelector);\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately =\n            false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormField, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Directionality, optional: true }, { token: MAT_FORM_FIELD_DEFAULT_OPTIONS, optional: true }, { token: i2.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatFormField.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFormField, selector: \"mat-form-field\", inputs: { color: \"color\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\", floatLabel: \"floatLabel\" }, host: { properties: { \"class.mat-form-field-appearance-standard\": \"appearance == \\\"standard\\\"\", \"class.mat-form-field-appearance-fill\": \"appearance == \\\"fill\\\"\", \"class.mat-form-field-appearance-outline\": \"appearance == \\\"outline\\\"\", \"class.mat-form-field-appearance-legacy\": \"appearance == \\\"legacy\\\"\", \"class.mat-form-field-invalid\": \"_control.errorState\", \"class.mat-form-field-can-float\": \"_canLabelFloat()\", \"class.mat-form-field-should-float\": \"_shouldLabelFloat()\", \"class.mat-form-field-has-label\": \"_hasFloatingLabel()\", \"class.mat-form-field-hide-placeholder\": \"_hideControlPlaceholder()\", \"class.mat-form-field-disabled\": \"_control.disabled\", \"class.mat-form-field-autofilled\": \"_control.autofilled\", \"class.mat-focused\": \"_control.focused\", \"class.ng-untouched\": \"_shouldForward(\\\"untouched\\\")\", \"class.ng-touched\": \"_shouldForward(\\\"touched\\\")\", \"class.ng-pristine\": \"_shouldForward(\\\"pristine\\\")\", \"class.ng-dirty\": \"_shouldForward(\\\"dirty\\\")\", \"class.ng-valid\": \"_shouldForward(\\\"valid\\\")\", \"class.ng-invalid\": \"_shouldForward(\\\"invalid\\\")\", \"class.ng-pending\": \"_shouldForward(\\\"pending\\\")\", \"class._mat-animation-noopable\": \"!_animationsEnabled\" }, classAttribute: \"mat-form-field\" }, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], queries: [{ propertyName: \"_controlNonStatic\", first: true, predicate: MatFormFieldControl, descendants: true }, { propertyName: \"_controlStatic\", first: true, predicate: MatFormFieldControl, descendants: true, static: true }, { propertyName: \"_labelChildNonStatic\", first: true, predicate: MatLabel, descendants: true }, { propertyName: \"_labelChildStatic\", first: true, predicate: MatLabel, descendants: true, static: true }, { propertyName: \"_placeholderChild\", first: true, predicate: MatPlaceholder, descendants: true }, { propertyName: \"_errorChildren\", predicate: MAT_ERROR, descendants: true }, { propertyName: \"_hintChildren\", predicate: _MAT_HINT, descendants: true }, { propertyName: \"_prefixChildren\", predicate: MAT_PREFIX, descendants: true }, { propertyName: \"_suffixChildren\", predicate: MAT_SUFFIX, descendants: true }], viewQueries: [{ propertyName: \"_connectionContainerRef\", first: true, predicate: [\"connectionContainer\"], descendants: true, static: true }, { propertyName: \"_inputContainerRef\", first: true, predicate: [\"inputContainer\"], descendants: true }, { propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true }], exportAs: [\"matFormField\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], animations: [matFormFieldAnimations.transitionMessages], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-form-field', exportAs: 'matFormField', animations: [matFormFieldAnimations.transitionMessages], host: {\n                        'class': 'mat-form-field',\n                        '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                        '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                        '[class.mat-form-field-invalid]': '_control.errorState',\n                        '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                        '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                        '[class.mat-form-field-disabled]': '_control.disabled',\n                        '[class.mat-form-field-autofilled]': '_control.autofilled',\n                        '[class.mat-focused]': '_control.focused',\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                    }, inputs: ['color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n                }] }, { type: i2.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { appearance: [{\n                type: Input\n            }], hideRequiredMarker: [{\n                type: Input\n            }], hintLabel: [{\n                type: Input\n            }], floatLabel: [{\n                type: Input\n            }], _connectionContainerRef: [{\n                type: ViewChild,\n                args: ['connectionContainer', { static: true }]\n            }], _inputContainerRef: [{\n                type: ViewChild,\n                args: ['inputContainer']\n            }], _label: [{\n                type: ViewChild,\n                args: ['label']\n            }], _controlNonStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl]\n            }], _controlStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl, { static: true }]\n            }], _labelChildNonStatic: [{\n                type: ContentChild,\n                args: [MatLabel]\n            }], _labelChildStatic: [{\n                type: ContentChild,\n                args: [MatLabel, { static: true }]\n            }], _placeholderChild: [{\n                type: ContentChild,\n                args: [MatPlaceholder]\n            }], _errorChildren: [{\n                type: ContentChildren,\n                args: [MAT_ERROR, { descendants: true }]\n            }], _hintChildren: [{\n                type: ContentChildren,\n                args: [_MAT_HINT, { descendants: true }]\n            }], _prefixChildren: [{\n                type: ContentChildren,\n                args: [MAT_PREFIX, { descendants: true }]\n            }], _suffixChildren: [{\n                type: ContentChildren,\n                args: [MAT_SUFFIX, { descendants: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatFormFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormFieldModule, declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix], imports: [CommonModule, MatCommonModule, ObserversModule], exports: [MatCommonModule,\n        MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix] });\nMatFormFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormFieldModule, imports: [[CommonModule, MatCommonModule, ObserversModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix],\n                    imports: [CommonModule, MatCommonModule, ObserversModule],\n                    exports: [\n                        MatCommonModule,\n                        MatError,\n                        MatFormField,\n                        MatHint,\n                        MatLabel,\n                        MatPlaceholder,\n                        MatPrefix,\n                        MatSuffix,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n","import * as i0 from '@angular/core';\nimport { SecurityContext, Injectable, Optional, Inject, SkipSelf, ErrorHandler, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nimport { HttpClient } from '@angular/common/http';\nimport * as i2 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy;\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy() {\n    if (policy === undefined) {\n        policy = null;\n        if (typeof window !== 'undefined') {\n            const ttWindow = window;\n            if (ttWindow.trustedTypes !== undefined) {\n                policy = ttWindow.trustedTypes.createPolicy('angular#components', {\n                    createHTML: (s) => s,\n                });\n            }\n        }\n    }\n    return policy;\n}\n/**\n * Unsafely promote a string to a TrustedHTML, falling back to strings when\n * Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will be interpreted as HTML by a browser, e.g. when assigning to\n * element.innerHTML.\n */\nfunction trustedHTMLFromString(html) {\n    return getPolicy()?.createHTML(html) || html;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /** Registered icon resolver functions. */\n        this._resolvers = [];\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon resolver function with the registry. The function will be invoked with the\n     * name and namespace of an icon when the registry tries to resolve the URL from which to fetch\n     * the icon. The resolver is expected to return a `SafeResourceUrl` that points to the icon,\n     * an object with the icon URL and icon options, or `null` if the icon is not supported. Resolvers\n     * will be invoked in the order in which they have been registered.\n     * @param resolver Resolver function to be registered.\n     */\n    addSvgIconResolver(resolver) {\n        this._resolvers.push(resolver);\n        return this;\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        // Security: The literal is passed in as SafeHtml, and is thus trusted.\n        const trustedLiteral = trustedHTMLFromString(cleanLiteral);\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', trustedLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    setDefaultFontSetClass(className) {\n        this._defaultFontSetClass = className;\n        return this;\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        const key = iconKey(namespace, name);\n        let config = this._svgIconConfigs.get(key);\n        // Return (copy of) cached icon if possible.\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // Otherwise try to resolve the config from one of the resolver functions.\n        config = this._getIconConfigFromResolvers(namespace, name);\n        if (config) {\n            this._svgIconConfigs.set(key, config);\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._resolvers = [];\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.toString().indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => (config.svgText = svgText)));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString(trustedHTMLFromString('<svg></svg>'));\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = options?.withCredentials ?? false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(map(svg => {\n            // Security: This SVG is fetched from a SafeResourceUrl, and is thus\n            // trusted HTML.\n            return trustedHTMLFromString(svg);\n        }), finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n    /** Tries to create an icon config through the registered resolver functions. */\n    _getIconConfigFromResolvers(namespace, name) {\n        for (let i = 0; i < this._resolvers.length; i++) {\n            const result = this._resolvers[i](name, namespace);\n            if (result) {\n                return isSafeUrlWithOptions(result)\n                    ? new SvgIconConfig(result.url, null, result.options)\n                    : new SvgIconConfig(result, null);\n            }\n        }\n        return undefined;\n    }\n}\nMatIconRegistry.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconRegistry, deps: [{ token: i1.HttpClient, optional: true }, { token: i2.DomSanitizer }, { token: DOCUMENT, optional: true }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Injectable });\nMatIconRegistry.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconRegistry, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient, decorators: [{\n                    type: Optional\n                }] }, { type: i2.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ErrorHandler }]; } });\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\nfunction isSafeUrlWithOptions(value) {\n    return !!(value.url && value.options);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nconst _MatIconBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY,\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => (_location ? _location.pathname + _location.search : ''),\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke',\n];\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Name of the icon in the SVG icon set. */\n    get svgIcon() {\n        return this._svgIcon;\n    }\n    set svgIcon(value) {\n        if (value !== this._svgIcon) {\n            if (value) {\n                this._updateSvgIcon(value);\n            }\n            else if (this._svgIcon) {\n                this._clearSvgElement();\n            }\n            this._svgIcon = value;\n        }\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() {\n        return this._fontSet;\n    }\n    set fontSet(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontSet) {\n            this._fontSet = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() {\n        return this._fontIcon;\n    }\n    set fontIcon(value) {\n        const newValue = this._cleanupFontValue(value);\n        if (newValue !== this._fontIcon) {\n            this._fontIcon = newValue;\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1:\n                return ['', parts[0]]; // Use default namespace.\n            case 2:\n                return parts;\n            default:\n                throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        this._updateFontIconClasses();\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                child.remove();\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClass = this.fontSet\n            ? this._iconRegistry.classNameForFontAlias(this.fontSet)\n            : this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = (this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map());\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n    /** Sets a new SVG icon with a particular name. */\n    _updateSvgIcon(rawName) {\n        this._svgNamespace = null;\n        this._svgName = null;\n        this._currentIconFetch.unsubscribe();\n        if (rawName) {\n            const [namespace, iconName] = this._splitIconName(rawName);\n            if (namespace) {\n                this._svgNamespace = namespace;\n            }\n            if (iconName) {\n                this._svgName = iconName;\n            }\n            this._currentIconFetch = this._iconRegistry\n                .getNamedSvgIcon(iconName, namespace)\n                .pipe(take(1))\n                .subscribe(svg => this._setSvgElement(svg), (err) => {\n                const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n            });\n        }\n    }\n}\nMatIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIcon, deps: [{ token: i0.ElementRef }, { token: MatIconRegistry }, { token: 'aria-hidden', attribute: true }, { token: MAT_ICON_LOCATION }, { token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Component });\nMatIcon.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatIcon, selector: \"mat-icon\", inputs: { color: \"color\", inline: \"inline\", svgIcon: \"svgIcon\", fontSet: \"fontSet\", fontIcon: \"fontIcon\" }, host: { attributes: { \"role\": \"img\" }, properties: { \"attr.data-mat-icon-type\": \"_usingFontIcon() ? \\\"font\\\" : \\\"svg\\\"\", \"attr.data-mat-icon-name\": \"_svgName || fontIcon\", \"attr.data-mat-icon-namespace\": \"_svgNamespace || fontSet\", \"class.mat-icon-inline\": \"inline\", \"class.mat-icon-no-color\": \"color !== \\\"primary\\\" && color !== \\\"accent\\\" && color !== \\\"warn\\\"\" }, classAttribute: \"mat-icon notranslate\" }, exportAs: [\"matIcon\"], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\".mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIcon, decorators: [{\n            type: Component,\n            args: [{ template: '<ng-content></ng-content>', selector: 'mat-icon', exportAs: 'matIcon', inputs: ['color'], host: {\n                        'role': 'img',\n                        'class': 'mat-icon notranslate',\n                        '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                        '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                        '[class.mat-icon-inline]': 'inline',\n                        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: MatIconRegistry }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['aria-hidden']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_ICON_LOCATION]\n                }] }, { type: i0.ErrorHandler }]; }, propDecorators: { inline: [{\n                type: Input\n            }], svgIcon: [{\n                type: Input\n            }], fontSet: [{\n                type: Input\n            }], fontIcon: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconModule, declarations: [MatIcon], imports: [MatCommonModule], exports: [MatIcon, MatCommonModule] });\nMatIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatIcon, MatCommonModule],\n                    declarations: [MatIcon],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport * as i4 from '@angular/cdk/text-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Self, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport * as i3 from '@angular/material/core';\nimport { mixinErrorState, MatCommonModule, ErrorStateMatcher } from '@angular/material/core';\nimport * as i5 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit',\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nconst _MatInputBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n});\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputBase {\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week',\n        ].filter(t => getSupportedInputTypes().has(t));\n        this._iOSKeyupListener = (event) => {\n            const el = event.target;\n            // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n            // indicate different things. If the value is 0, it means that the caret is at the start\n            // of the input, whereas a value of `null` means that the input doesn't support\n            // manipulating the selection range. Inputs that don't support setting the selection range\n            // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n            // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n            if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n                // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                // `1, 1` fixes it for the first time that you type text and\n                // then hold delete. Toggling to `1, 1` and then back to\n                // `0, 0` seems to completely fix it.\n                el.setSelectionRange(1, 1);\n                el.setSelectionRange(0, 0);\n            }\n        };\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', this._iOSKeyupListener);\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!_formField;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple\n                ? 'mat-native-select-multiple'\n                : 'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Input type of the element. */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._inputValueAccessor.value;\n    }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(value) {\n        this._readonly = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n        if (this._platform.IOS) {\n            this._elementRef.nativeElement.removeEventListener('keyup', this._iOSKeyupListener);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = this._formField?._hideControlPlaceholder?.() ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder\n                ? element.setAttribute('placeholder', placeholder)\n                : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._isNeverEmpty() &&\n            !this._elementRef.nativeElement.value &&\n            !this._isBadInput() &&\n            !this.autofilled);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return (this.focused ||\n                selectElement.multiple ||\n                !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label));\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n        const element = this._elementRef.nativeElement;\n        return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n}\nMatInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInput, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i2.NgControl, optional: true, self: true }, { token: i2.NgForm, optional: true }, { token: i2.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: MAT_INPUT_VALUE_ACCESSOR, optional: true, self: true }, { token: i4.AutofillMonitor }, { token: i0.NgZone }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],\\n      input[matNativeControl], textarea[matNativeControl]\", inputs: { disabled: \"disabled\", id: \"id\", placeholder: \"placeholder\", name: \"name\", required: \"required\", type: \"type\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], value: \"value\", readonly: \"readonly\" }, host: { listeners: { \"focus\": \"_focusChanged(true)\", \"blur\": \"_focusChanged(false)\", \"input\": \"_onInput()\" }, properties: { \"class.mat-input-server\": \"_isServer\", \"attr.id\": \"id\", \"attr.data-placeholder\": \"placeholder\", \"disabled\": \"disabled\", \"required\": \"required\", \"attr.name\": \"name || null\", \"attr.readonly\": \"readonly && !_isNativeSelect || null\", \"class.mat-native-select-inline\": \"_isInlineSelect()\", \"attr.aria-invalid\": \"(empty && required) ? null : errorState\", \"attr.aria-required\": \"required\" }, classAttribute: \"mat-input-element mat-form-field-autofill-control\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatInput }], exportAs: [\"matInput\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                    exportAs: 'matInput',\n                    host: {\n                        /**\n                         * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                         */\n                        'class': 'mat-input-element mat-form-field-autofill-control',\n                        '[class.mat-input-server]': '_isServer',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[attr.id]': 'id',\n                        // At the time of writing, we have a lot of customer tests that look up the input based on its\n                        // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                        // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                        '[attr.data-placeholder]': 'placeholder',\n                        '[disabled]': 'disabled',\n                        '[required]': 'required',\n                        '[attr.name]': 'name || null',\n                        '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                        '[class.mat-native-select-inline]': '_isInlineSelect()',\n                        // Only mark the input as invalid for assistive technology if it has a value since the\n                        // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                        '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                        '[attr.aria-required]': 'required',\n                        '(focus)': '_focusChanged(true)',\n                        '(blur)': '_focusChanged(false)',\n                        '(input)': '_onInput()',\n                    },\n                    providers: [{ provide: MatFormFieldControl, useExisting: MatInput }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i2.NgControl, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: i2.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i2.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [MAT_INPUT_VALUE_ACCESSOR]\n                }] }, { type: i4.AutofillMonitor }, { type: i0.NgZone }, { type: i5.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], value: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInputModule, declarations: [MatInput], imports: [TextFieldModule, MatFormFieldModule, MatCommonModule], exports: [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput] });\nMatInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInputModule, providers: [ErrorStateMatcher], imports: [[TextFieldModule, MatFormFieldModule, MatCommonModule], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatInput],\n                    imports: [TextFieldModule, MatFormFieldModule, MatCommonModule],\n                    exports: [\n                        TextFieldModule,\n                        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                        // be used together with `MatFormField`.\n                        MatFormFieldModule,\n                        MatInput,\n                    ],\n                    providers: [ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n","import * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Input, QueryList, EventEmitter, TemplateRef, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, takeUntil, filter, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i3$1 from '@angular/cdk/bidi';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)',\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)',\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\nclass _MatMenuContentBase {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        this._changeDetectorRef?.markForCheck();\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n_MatMenuContentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuContentBase, deps: [{ token: i0.TemplateRef }, { token: i0.ComponentFactoryResolver }, { token: i0.ApplicationRef }, { token: i0.Injector }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuContentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatMenuContentBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuContentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ComponentFactoryResolver }, { type: i0.ApplicationRef }, { type: i0.Injector }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.ChangeDetectorRef }]; } });\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent extends _MatMenuContentBase {\n}\nMatMenuContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuContent, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatMenuContent, selector: \"ng-template[matMenuContent]\", providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matMenuContent]',\n                    providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nconst _MatMenuItemBase = mixinDisableRipple(mixinDisabled(class {\n}));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemBase {\n    constructor(_elementRef, _document, _focusMonitor, _parentMenu, _changeDetectorRef) {\n        super();\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        _parentMenu?.addItem?.(this);\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            icons[i].remove();\n        }\n        return clone.textContent?.trim() || '';\n    }\n    _setHighlighted(isHighlighted) {\n        // We need to mark this for check for the case where the content is coming from a\n        // `matMenuContent` whose change detection tree is at the declaration position,\n        // not the insertion position. See #23175.\n        // @breaking-change 12.0.0 Remove null check for `_changeDetectorRef`.\n        this._highlighted = isHighlighted;\n        this._changeDetectorRef?.markForCheck();\n    }\n    _hasFocus() {\n        return this._document && this._document.activeElement === this._getHostElement();\n    }\n}\nMatMenuItem.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuItem, deps: [{ token: i0.ElementRef }, { token: DOCUMENT }, { token: i1.FocusMonitor }, { token: MAT_MENU_PANEL, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatMenuItem.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatMenuItem, selector: \"[mat-menu-item]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, host: { listeners: { \"click\": \"_checkDisabled($event)\", \"mouseenter\": \"_handleMouseEnter()\" }, properties: { \"attr.role\": \"role\", \"class.mat-menu-item\": \"true\", \"class.mat-menu-item-highlighted\": \"_highlighted\", \"class.mat-menu-item-submenu-trigger\": \"_triggersSubmenu\", \"attr.tabindex\": \"_getTabIndex()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.disabled\": \"disabled || null\" }, classAttribute: \"mat-focus-indicator\" }, exportAs: [\"matMenuItem\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\", directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-menu-item]', exportAs: 'matMenuItem', inputs: ['disabled', 'disableRipple'], host: {\n                        '[attr.role]': 'role',\n                        '[class.mat-menu-item]': 'true',\n                        '[class.mat-menu-item-highlighted]': '_highlighted',\n                        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.disabled]': 'disabled || null',\n                        'class': 'mat-focus-indicator',\n                        '(click)': '_checkDisabled($event)',\n                        '(mouseenter)': '_handleMouseEnter()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_PANEL]\n                }, {\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { role: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions, \n    // @breaking-change 15.0.0 `_changeDetectorRef` to become a required parameter.\n    _changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() {\n        return this._xPosition;\n    }\n    set xPosition(value) {\n        if (value !== 'before' &&\n            value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() {\n        return this._yPosition;\n    }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() {\n        return this._overlapTrigger;\n    }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() {\n        return this.panelClass;\n    }\n    set classList(classes) {\n        this.panelClass = classes;\n    }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes\n            .pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused))))\n            .subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n        this._directDescendantItems.changes.subscribe((itemsList) => {\n            // Move focus to another item, if the active item is removed from the list.\n            // We need to debounce the callback, because multiple items might be removed\n            // in quick succession.\n            const manager = this._keyManager;\n            if (this._panelAnimationState === 'enter' && manager.activeItem?._hasFocus()) {\n                const items = itemsList.toArray();\n                const index = Math.max(0, Math.min(items.length - 1, manager.activeItemIndex || 0));\n                if (items[index] && !items[index].disabled) {\n                    manager.setActiveItem(index);\n                }\n                else {\n                    manager.setNextItemActive();\n                }\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n                return;\n        }\n        // Don't allow the event to propagate if we've already handled it, or it may\n        // end up reaching other overlays that were opened earlier (see #22694).\n        event.stopPropagation();\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => this._focusFirstItem(origin));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _focusFirstItem(origin) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(this._baseElevation + depth, 24);\n        const newElevation = `${this._elevationPrefix}${elevation}`;\n        const customElevation = Object.keys(this._classList).find(className => {\n            return className.startsWith(this._elevationPrefix);\n        });\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n        // @breaking-change 15.0.0 Remove null check for `_changeDetectorRef`.\n        this._changeDetectorRef?.markForCheck();\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuBase, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatMenuBase, inputs: { backdropClass: \"backdropClass\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\" }, outputs: { closed: \"closed\", close: \"close\" }, queries: [{ propertyName: \"lazyContent\", first: true, predicate: MAT_MENU_CONTENT, descendants: true }, { propertyName: \"_allItems\", predicate: MatMenuItem, descendants: true }, { propertyName: \"items\", predicate: MatMenuItem }], viewQueries: [{ propertyName: \"templateRef\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_DEFAULT_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _allItems: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: true }]\n            }], backdropClass: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], templateRef: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }], items: [{\n                type: ContentChildren,\n                args: [MatMenuItem, { descendants: false }]\n            }], lazyContent: [{\n                type: ContentChild,\n                args: [MAT_MENU_CONTENT]\n            }], overlapTrigger: [{\n                type: Input\n            }], hasBackdrop: [{\n                type: Input\n            }], panelClass: [{\n                type: Input,\n                args: ['class']\n            }], classList: [{\n                type: Input\n            }], closed: [{\n                type: Output\n            }], close: [{\n                type: Output\n            }] } });\n/** @docs-public MatMenu */\nclass MatMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions, changeDetectorRef) {\n        super(elementRef, ngZone, defaultOptions, changeDetectorRef);\n        this._elevationPrefix = 'mat-elevation-z';\n        this._baseElevation = 4;\n    }\n}\nMatMenu.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenu, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatMenu.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatMenu, selector: \"mat-menu\", host: { properties: { \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" } }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], exportAs: [\"matMenu\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]::before{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-menu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', host: {\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                    }, animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], providers: [{ provide: MAT_MENU_PANEL, useExisting: MatMenu }], template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]::before{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_DEFAULT_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\nclass _MatMenuTriggerBase {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, _focusMonitor, _ngZone) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() {\n        return this.menu;\n    }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() {\n        return this._menu;\n    }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        const positionStrategy = overlayConfig.positionStrategy;\n        this._setPosition(positionStrategy);\n        overlayConfig.hasBackdrop =\n            this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof _MatMenuBase) {\n            this.menu._startAnimation();\n            this.menu._directDescendantItems.changes.pipe(takeUntil(this.menu.close)).subscribe(() => {\n                // Re-adjust the position without locking when the amount of items\n                // changes so that the overlay is allowed to pick a new optimal position.\n                positionStrategy.withLockedPosition(false).reapplyLastPosition();\n                positionStrategy.withLockedPosition(true);\n            });\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Updates the position of the menu to ensure that it fits all options within the viewport.\n     */\n    updatePosition() {\n        this._overlayRef?.updatePosition();\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof _MatMenuBase) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false),\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this.menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._setHighlighted(isOpen);\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay\n                .position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir,\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                // @breaking-change 15.0.0 Remove null check for `ngZone`.\n                // `positionChanges` fires outside of the `ngZone` and `setPositionClasses` might be\n                // updating something in the view so we need to bring it back in.\n                if (this._ngZone) {\n                    this._ngZone.run(() => this.menu.setPositionClasses(posX, posY));\n                }\n                else {\n                    this.menu.setPositionClasses(posX, posY);\n                }\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n            },\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu\n            ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen))\n            : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() &&\n            ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n                (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu\n            ._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\n_MatMenuTriggerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuTriggerBase, deps: [{ token: i1$1.Overlay }, { token: i0.ElementRef }, { token: i0.ViewContainerRef }, { token: MAT_MENU_SCROLL_STRATEGY }, { token: MAT_MENU_PANEL, optional: true }, { token: MatMenuItem, optional: true, self: true }, { token: i3$1.Directionality, optional: true }, { token: i1.FocusMonitor }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\n_MatMenuTriggerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatMenuTriggerBase, inputs: { _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"], restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, host: { attributes: { \"aria-haspopup\": \"true\" }, listeners: { \"click\": \"_handleClick($event)\", \"mousedown\": \"_handleMousedown($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-expanded\": \"menuOpen || null\", \"attr.aria-controls\": \"menuOpen ? menu.panelId : null\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatMenuTriggerBase, decorators: [{\n            type: Directive,\n            args: [{\n                    host: {\n                        'aria-haspopup': 'true',\n                        '[attr.aria-expanded]': 'menuOpen || null',\n                        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                        '(click)': '_handleClick($event)',\n                        '(mousedown)': '_handleMousedown($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.ElementRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_SCROLL_STRATEGY]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_PANEL]\n                }, {\n                    type: Optional\n                }] }, { type: MatMenuItem, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }] }, { type: i3$1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i1.FocusMonitor }, { type: i0.NgZone }]; }, propDecorators: { _deprecatedMatMenuTriggerFor: [{\n                type: Input,\n                args: ['mat-menu-trigger-for']\n            }], menu: [{\n                type: Input,\n                args: ['matMenuTriggerFor']\n            }], menuData: [{\n                type: Input,\n                args: ['matMenuTriggerData']\n            }], restoreFocus: [{\n                type: Input,\n                args: ['matMenuTriggerRestoreFocus']\n            }], menuOpened: [{\n                type: Output\n            }], onMenuOpen: [{\n                type: Output\n            }], menuClosed: [{\n                type: Output\n            }], onMenuClose: [{\n                type: Output\n            }] } });\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger extends _MatMenuTriggerBase {\n}\nMatMenuTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatMenuTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatMenuTrigger, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", host: { classAttribute: \"mat-menu-trigger\" }, exportAs: [\"matMenuTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                    host: {\n                        'class': 'mat-menu-trigger',\n                    },\n                    exportAs: 'matMenuTrigger',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuModule, declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent], imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule], exports: [CdkScrollableModule,\n        MatCommonModule,\n        MatMenu,\n        MatMenuItem,\n        MatMenuTrigger,\n        MatMenuContent] });\nMatMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuModule, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[CommonModule, MatCommonModule, MatRippleModule, OverlayModule], CdkScrollableModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatMenu,\n                        MatMenuItem,\n                        MatMenuTrigger,\n                        MatMenuContent,\n                    ],\n                    declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\n                    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuContentBase, _MatMenuTriggerBase, fadeInItems, matMenuAnimations, transformMenu };\n","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport * as i2 from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nconst _MatProgressSpinnerBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerBase {\n    constructor(elementRef, _platform, _document, animationMode, defaults, \n    /**\n     * @deprecated `changeDetectorRef`, `viewportRuler` and `ngZone`\n     * parameters to become required.\n     * @breaking-change 14.0.0\n     */\n    changeDetectorRef, viewportRuler, ngZone) {\n        super(elementRef);\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        if (elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner') {\n            this.mode = 'indeterminate';\n        }\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n        // Safari has an issue where the circle isn't positioned correctly when the page has a\n        // different zoom level from the default. This handler triggers a recalculation of the\n        // `transform-origin` when the page zoom level changes.\n        // See `_getCircleTransformOrigin` for more info.\n        // @breaking-change 14.0.0 Remove null checks for `_changeDetectorRef`,\n        // `viewportRuler` and `ngZone`.\n        if (_platform.isBrowser && _platform.SAFARI && viewportRuler && changeDetectorRef && ngZone) {\n            this._resizeSubscription = viewportRuler.change(150).subscribe(() => {\n                // When the window is resize while the spinner is in `indeterminate` mode, we\n                // have to mark for check so the transform origin of the circle can be recomputed.\n                if (this.mode === 'indeterminate') {\n                    ngZone.run(() => changeDetectorRef.markForCheck());\n                }\n            });\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        element.classList.add('mat-progress-spinner-indeterminate-animation');\n    }\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._getStrokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    /** Gets the `transform-origin` for the inner circle element. */\n    _getCircleTransformOrigin(svg) {\n        // Safari has an issue where the `transform-origin` doesn't work as expected when the page\n        // has a different zoom level from the default. The problem appears to be that a zoom\n        // is applied on the `svg` node itself. We can work around it by calculating the origin\n        // based on the zoom level. On all other browsers the `currentScale` appears to always be 1.\n        const scale = (svg.currentScale ?? 1) * 50;\n        return `${scale}% ${scale}%`;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return (INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`));\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }, { token: i0.ChangeDetectorRef }, { token: i2.ViewportRuler }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatProgressSpinner.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatProgressSpinner, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", mode: \"mode\", value: \"value\" }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class._mat-animation-noopable\": \"_noopAnimations\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"attr.aria-valuemin\": \"mode === \\\"determinate\\\" ? 0 : null\", \"attr.aria-valuemax\": \"mode === \\\"determinate\\\" ? 100 : null\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-progress-spinner mat-spinner\" }, exportAs: [\"matProgressSpinner\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\"\\n  #svg>\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"\\n    [style.transform-origin]=\\\"_getCircleTransformOrigin(svg)\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"\\n    [style.transform-origin]=\\\"_getCircleTransformOrigin(svg)\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\\n\"], directives: [{ type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        // `mat-spinner` is here for backward compatibility.\n                        'class': 'mat-progress-spinner mat-spinner',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                        '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, inputs: ['color'], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG.\\n-->\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\"\\n  aria-hidden=\\\"true\\\"\\n  #svg>\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"\\n    [style.transform-origin]=\\\"_getCircleTransformOrigin(svg)\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"\\n    [style.transform-origin]=\\\"_getCircleTransformOrigin(svg)\\\"></circle>\\n</svg>\\n\", styles: [\".mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i2.ViewportRuler }, { type: i0.NgZone }]; }, propDecorators: { diameter: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatProgressSpinnerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatProgressSpinnerModule, declarations: [MatProgressSpinner], imports: [MatCommonModule, CommonModule], exports: [MatProgressSpinner, MatCommonModule] });\nMatProgressSpinnerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [[MatCommonModule, CommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CommonModule],\n                    exports: [MatProgressSpinner, MatCommonModule],\n                    declarations: [MatProgressSpinner],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Import `MatProgressSpinner` instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 8.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import * as i7 from '@angular/cdk/overlay';\nimport { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i8 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, Optional, Inject, Self, Attribute, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true })),\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0,\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)',\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)',\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel. */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis. */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(class {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSelectTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSelectTrigger, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }],\n                }]\n        }] });\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = this._defaultOptions?.overlayPanelClass || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._multiple = false;\n        this._disableOptionCentering = this._defaultOptions?.disableOptionCentering ?? false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable.pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if (_defaultOptions?.typeaheadDebounceInterval != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() {\n        return this._disableOptionCentering;\n    }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        const hasAssigned = this._assignValue(newValue);\n        if (hasAssigned) {\n            this._onChange(newValue);\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() {\n        return this._typeaheadDebounceInterval;\n    }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        const ngControl = this.ngControl;\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (ngControl) {\n            // The disabled state might go out of sync if the form group is swapped out. See #17860.\n            if (this._previousControl !== ngControl.control) {\n                if (this._previousControl !== undefined &&\n                    ngControl.disabled !== null &&\n                    ngControl.disabled !== this.disabled) {\n                    this.disabled = ngControl.disabled;\n                }\n                this._previousControl = ngControl.control;\n            }\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel?.selected || [] : this._selectionModel?.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW ||\n            keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW ||\n            keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping &&\n            (keyCode === ENTER || keyCode === SPACE) &&\n            manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple &&\n                isArrowKey &&\n                event.shiftKey &&\n                manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl) {\n                this._value = this.ngControl.value;\n            }\n            this._setSelectionByValue(this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectOptionByValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectOptionByValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n            return true;\n        }\n        return false;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected\n                    ? this._selectionModel.select(option)\n                    : this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator\n                    ? this.sortComparator(a, b, options)\n                    : options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        return !this._panelOpen && !this.disabled && this.options?.length > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId();\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = this._parentFormField?.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSelectBase, deps: [{ token: i1.ViewportRuler }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.ErrorStateMatcher }, { token: i0.ElementRef }, { token: i3.Directionality, optional: true }, { token: i4.NgForm, optional: true }, { token: i4.FormGroupDirective, optional: true }, { token: MAT_FORM_FIELD, optional: true }, { token: i4.NgControl, optional: true, self: true }, { token: 'tabindex', attribute: true }, { token: MAT_SELECT_SCROLL_STRATEGY }, { token: i5.LiveAnnouncer }, { token: MAT_SELECT_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatSelectBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatSelectBase, inputs: { panelClass: \"panelClass\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", sortComparator: \"sortComparator\", id: \"id\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, viewQueries: [{ propertyName: \"trigger\", first: true, predicate: [\"trigger\"], descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"_overlayDir\", first: true, predicate: CdkConnectedOverlay, descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSelectBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1.ViewportRuler }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.ErrorStateMatcher }, { type: i0.ElementRef }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i4.NgForm, decorators: [{\n                    type: Optional\n                }] }, { type: i4.FormGroupDirective, decorators: [{\n                    type: Optional\n                }] }, { type: i6.MatFormField, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_FORM_FIELD]\n                }] }, { type: i4.NgControl, decorators: [{\n                    type: Self\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SELECT_SCROLL_STRATEGY]\n                }] }, { type: i5.LiveAnnouncer }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_SELECT_CONFIG]\n                }] }]; }, propDecorators: { trigger: [{\n                type: ViewChild,\n                args: ['trigger']\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], _overlayDir: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay]\n            }], panelClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], disableOptionCentering: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], errorStateMatcher: [{\n                type: Input\n            }], typeaheadDebounceInterval: [{\n                type: Input\n            }], sortComparator: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }] } });\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize &&\n                    this._overlayDir.overlayRef &&\n                    this._overlayDir.overlayRef.overlayElement) {\n                    this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.panel.nativeElement.scrollTop = 0;\n        }\n        else {\n            this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n        }\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this._overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this._overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple\n            ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X\n            : SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this._overlayDir.offsetX = Math.round(offsetX);\n        this._overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - ((this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight);\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset = Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelect, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSelect.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSelect, selector: \"mat-select\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { attributes: { \"role\": \"combobox\", \"aria-autocomplete\": \"none\", \"aria-haspopup\": \"true\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-describedby\": \"_ariaDescribedby || null\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-select-disabled\": \"disabled\", \"class.mat-select-invalid\": \"errorState\", \"class.mat-select-required\": \"required\", \"class.mat-select-empty\": \"empty\", \"class.mat-select-multiple\": \"multiple\" }, classAttribute: \"mat-select\" }, providers: [\n        { provide: MatFormFieldControl, useExisting: MatSelect },\n        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n    ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }], exportAs: [\"matSelect\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;opacity:0}\\n\"], directives: [{ type: i7.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { type: i8.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i8.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i8.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { type: i7.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { type: i8.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', inputs: ['disabled', 'disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-autocomplete': 'none',\n                        // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                        // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                        // value. At some point we should try to switch it back to being `listbox`.\n                        'aria-haspopup': 'true',\n                        'class': 'mat-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-select-disabled]': 'disabled',\n                        '[class.mat-select-invalid]': 'errorState',\n                        '[class.mat-select-required]': 'required',\n                        '[class.mat-select-empty]': 'empty',\n                        '[class.mat-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    }, animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n                    ], template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;opacity:0}\\n\"] }]\n        }], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, declarations: [MatSelect, MatSelectTrigger], imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule], exports: [CdkScrollableModule,\n        MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule,\n        MatCommonModule] });\nMatSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[CommonModule, OverlayModule, MatOptionModule, MatCommonModule], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatFormFieldModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatSelect, MatSelectTrigger],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, _MatSelectBase, matSelectAnimations };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/table';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass MatRecycleRows {\n}\nMatRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRecycleRows, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTable, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTable, selector: \"mat-table, table[mat-table]\", host: { properties: { \"class.mat-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-table\" }, providers: [\n        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n        //  is only included in the build if used.\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: CdkTable, useExisting: MatTable },\n        { provide: CDK_TABLE, useExisting: MatTable },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"], directives: [{ type: i1.HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { type: i1.DataRowOutlet, selector: \"[rowOutlet]\" }, { type: i1.NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { type: i1.FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'mat-table',\n                        '[class.mat-table-fixed-layout]': 'fixedLayout',\n                    }, providers: [\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: CdkTable, useExisting: MatTable },\n                        { provide: CDK_TABLE, useExisting: MatTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatCellDef, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }],\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }],\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterCellDef, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }],\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, providers: [\n        { provide: CdkColumnDef, useExisting: MatColumnDef },\n        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n                    ],\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }] });\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterCell, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-footer-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatCell, selector: \"mat-cell, td[mat-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderRowDef, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterRowDef, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRowDef, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n                }]\n        }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderRow, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterRow, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-footer-row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRow, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-row\" }, providers: [{ provide: CdkRow, useExisting: MatRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n    constructor() {\n        super(...arguments);\n        this._contentClassName = 'mat-no-data-row';\n    }\n}\nMatNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatNoDataRow, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTextColumn, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, directives: [{ type: MatColumnDef, selector: \"[matColumnDef]\", inputs: [\"sticky\", \"matColumnDef\"] }, { type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { type: MatCellDef, selector: \"[matCellDef]\" }, { type: MatCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, declarations: [\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn], imports: [CdkTableModule, MatCommonModule], exports: [MatCommonModule, \n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn] });\nMatTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, imports: [[CdkTableModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTableModule, MatCommonModule],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass _MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data)\n                .reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '')\n                .toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data) {\n        data = Array.isArray(data) ? data : [];\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() {\n        return this._filter.value;\n    }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() {\n        return this._sort;\n    }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() {\n        return this._paginator;\n    }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort\n            ? merge(this._sort.sortChange, this._sort.initialized)\n            : of(null);\n        const pageChange = this._paginator\n            ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized)\n            : of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            this.filter == null || this.filter === ''\n                ? data\n                : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn, _MatTableDataSource };\n","import * as i7 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport * as i5 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i7$1 from '@angular/cdk/portal';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i3$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, forwardRef, EventEmitter, Output, ContentChildren, QueryList, Attribute, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take, startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { Subject, Subscription, fromEvent, of, merge, timer } from 'rxjs';\nimport * as i1 from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY,\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            const positions = this._inkBarPositioner(element);\n            const inkBar = this._elementRef.nativeElement;\n            inkBar.style.left = positions.left;\n            inkBar.style.width = positions.width;\n        });\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n}\nMatInkBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInkBar, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: _MAT_INK_BAR_POSITIONER }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInkBar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatInkBar, selector: \"mat-ink-bar\", host: { properties: { \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-ink-bar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInkBar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_MAT_INK_BAR_POSITIONER]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(/** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabContent, selector: \"[matTabContent]\", providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabContent]',\n                    providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n        super(templateRef, viewContainerRef);\n        this._closestTab = _closestTab;\n    }\n}\nMatTabLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabel, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: MAT_TAB, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabLabel, selector: \"[mat-tab-label], [matTabLabel]\", providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                    providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nconst _MatTabBase = mixinDisabled(class {\n});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() {\n        return this._templateLabel;\n    }\n    set templateLabel(value) {\n        this._setTemplateLabelInput(value);\n    }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the label if the query managed to find one. This works around an issue where a\n        // user may have manually set `templateLabel` during creation mode, which would then get\n        // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n        // tab matches the current one so that we don't pick up labels from nested tabs.\n        if (value && value._closestTab === this) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTab, deps: [{ token: i0.ViewContainerRef }, { token: MAT_TAB_GROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTab.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTab, selector: \"mat-tab\", inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], labelClass: \"labelClass\", bodyClass: \"bodyClass\" }, providers: [{ provide: MAT_TAB, useExisting: MatTab }], queries: [{ propertyName: \"templateLabel\", first: true, predicate: MAT_TAB_LABEL, descendants: true }, { propertyName: \"_explicitContent\", first: true, predicate: MAT_TAB_CONTENT, descendants: true, read: TemplateRef, static: true }], viewQueries: [{ propertyName: \"_implicitContent\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"matTab\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\", changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTab, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab', inputs: ['disabled'], changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, exportAs: 'matTab', providers: [{ provide: MAT_TAB, useExisting: MatTab }], template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB_GROUP]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { templateLabel: [{\n                type: ContentChild,\n                args: [MAT_TAB_LABEL]\n            }], _explicitContent: [{\n                type: ContentChild,\n                args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n            }], _implicitContent: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], textLabel: [{\n                type: Input,\n                args: ['label']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], labelClass: [{\n                type: Input\n            }], bodyClass: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBodyPortal, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: forwardRef(() => MatTabBody) }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabBodyPortal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabBodyPortal, selector: \"[matTabBodyHost]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBodyPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabBodyHost]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatTabBody)]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return (position == 'center' || position == 'left-origin-center' || position == 'right-origin-center');\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabBodyBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabBodyBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabBodyBase, inputs: { _content: [\"content\", \"_content\"], origin: \"origin\", animationDuration: \"animationDuration\", position: \"position\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabBodyBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _onCentering: [{\n                type: Output\n            }], _beforeCentering: [{\n                type: Output\n            }], _afterLeavingCenter: [{\n                type: Output\n            }], _onCentered: [{\n                type: Output\n            }], _content: [{\n                type: Input,\n                args: ['content']\n            }], origin: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }] } });\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBody, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatTabBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabBody, selector: \"mat-tab-body\", host: { classAttribute: \"mat-tab-body\" }, viewQueries: [{ propertyName: \"_portalHost\", first: true, predicate: CdkPortalOutlet, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\\n\"], directives: [{ type: MatTabBodyPortal, selector: \"[matTabBodyHost]\" }], animations: [matTabsAnimations.translateTab], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBody, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-body', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matTabsAnimations.translateTab], host: {\n                        'class': 'mat-tab-body',\n                    }, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _portalHost: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nconst _MatTabLabelWrapperBase = mixinDisabled(class {\n});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabelWrapper, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabelWrapper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: { disabled: \"disabled\" }, host: { properties: { \"class.mat-tab-disabled\": \"disabled\", \"attr.aria-disabled\": \"!!disabled\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabelWrapper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of('ltr');\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        // Note that we use `onStable` instead of `requestAnimationFrame`, because the latter\n        // can hold up tests that are in a background tab.\n        this._ngZone.onStable.pipe(take(1)).subscribe(realign);\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => Promise.resolve().then(realign));\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() {\n        return this._scrollDistance;\n    }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = ((direction == 'before' ? -1 : 1) * viewLength) / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabListInner.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatedTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatPaginatedTabHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatedTabHeader, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disablePagination: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabHeaderBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabHeaderBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabHeaderBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disableRipple: [{\n                type: Input\n            }] } });\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabHeader, selector: \"mat-tab-header\", inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, host: { properties: { \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\" }, classAttribute: \"mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: MatTabLabelWrapper }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], directives: [{ type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-header', inputs: ['selectedIndex'], outputs: ['selectFocusedIndex', 'indexFocused'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    }, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [MatTabLabelWrapper, { descendants: false }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Index of the tab that was focused last. */\n        this._lastFocusedTabIndex = null;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration =\n            defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n        this.disablePagination =\n            defaultConfig && defaultConfig.disablePagination != null\n                ? defaultConfig.disablePagination\n                : false;\n        this.dynamicHeight =\n            defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n        this.contentTabIndex = defaultConfig?.contentTabIndex ?? null;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() {\n        return this._dynamicHeight;\n    }\n    set dynamicHeight(value) {\n        this._dynamicHeight = coerceBooleanProperty(value);\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value + '') ? value + 'ms' : value;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() {\n        return this._contentTabIndex;\n    }\n    set contentTabIndex(value) {\n        this._contentTabIndex = coerceNumberProperty(value, null);\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => (tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._lastFocusedTabIndex = null;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                let selectedTab;\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        this._lastFocusedTabIndex = null;\n                        selectedTab = tabs[i];\n                        break;\n                    }\n                }\n                // If we haven't found an active tab and a tab exists at the selected index, it means\n                // that the active tab was swapped out. Since this won't be picked up by the rendering\n                // loop in `ngAfterContentChecked`, we need to sync it up manually.\n                if (!selectedTab && tabs[indexToSelect]) {\n                    Promise.resolve().then(() => {\n                        tabs[indexToSelect].isActive = true;\n                        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                    });\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * Recalculates the tab group's pagination dimensions.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        if (this._tabHeader) {\n            this._tabHeader.updatePagination();\n        }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n        const header = this._tabHeader;\n        if (header) {\n            header.focusIndex = index;\n        }\n    }\n    _focusChanged(index) {\n        this._lastFocusedTabIndex = index;\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent();\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, index) {\n        if (tab.disabled) {\n            return null;\n        }\n        const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n        return index === targetIndex ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n        // can cause the tab to be moved out from under the pointer, interrupting the\n        // click sequence (see #21898). We don't need to scroll the tab into view for\n        // such cases anyway, because it will be done when the tab becomes selected.\n        if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabGroupBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabGroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabGroupBase, inputs: { dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", contentTabIndex: \"contentTabIndex\", disablePagination: \"disablePagination\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabGroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { dynamicHeight: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], contentTabIndex: [{\n                type: Input\n            }], disablePagination: [{\n                type: Input\n            }], backgroundColor: [{\n                type: Input\n            }], selectedIndexChange: [{\n                type: Output\n            }], focusChange: [{\n                type: Output\n            }], animationDone: [{\n                type: Output\n            }], selectedTabChange: [{\n                type: Output\n            }] } });\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabGroup, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabGroup, selector: \"mat-tab-group\", inputs: { color: \"color\", disableRipple: \"disableRipple\" }, host: { properties: { \"class.mat-tab-group-dynamic-height\": \"dynamicHeight\", \"class.mat-tab-group-inverted-header\": \"headerPosition === \\\"below\\\"\" }, classAttribute: \"mat-tab-group\" }, providers: [\n        {\n            provide: MAT_TAB_GROUP,\n            useExisting: MatTabGroup,\n        },\n    ], queries: [{ propertyName: \"_allTabs\", predicate: MatTab, descendants: true }], viewQueries: [{ propertyName: \"_tabBodyWrapper\", first: true, predicate: [\"tabBodyWrapper\"], descendants: true }, { propertyName: \"_tabHeader\", first: true, predicate: [\"tabHeader\"], descendants: true }], exportAs: [\"matTabGroup\"], usesInheritance: true, ngImport: i0, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], components: [{ type: MatTabHeader, selector: \"mat-tab-header\", inputs: [\"selectedIndex\"], outputs: [\"selectFocusedIndex\", \"indexFocused\"] }, { type: MatTabBody, selector: \"mat-tab-body\" }], directives: [{ type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: [\"disabled\"] }, { type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i7.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }, { type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i7$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-group', exportAs: 'matTabGroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, inputs: ['color', 'disableRipple'], providers: [\n                        {\n                            provide: MAT_TAB_GROUP,\n                            useExisting: MatTabGroup,\n                        },\n                    ], host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    }, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _allTabs: [{\n                type: ContentChildren,\n                args: [MatTab, { descendants: true }]\n            }], _tabBodyWrapper: [{\n                type: ViewChild,\n                args: ['tabBodyWrapper']\n            }], _tabHeader: [{\n                type: ViewChild,\n                args: ['tabHeader']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for tab nav components.\nlet nextUniqueId = 0;\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                if (this.tabPanel) {\n                    this.tabPanel._activeTabId = items[i].id;\n                }\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n    _getRole() {\n        return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n    }\n}\n_MatTabNavBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabNavBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabNavBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabNavBase, inputs: { backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\", color: \"color\", tabPanel: \"tabPanel\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabNavBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { backgroundColor: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], tabPanel: [{\n                type: Input\n            }] } });\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNav, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabNav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabNav, selector: \"[mat-tab-nav-bar]\", inputs: { color: \"color\" }, host: { properties: { \"attr.role\": \"_getRole()\", \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\", \"class.mat-primary\": \"color !== \\\"warn\\\" && color !== \\\"accent\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\" }, classAttribute: \"mat-tab-nav-bar mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: i0.forwardRef(function () { return MatTabLink; }), descendants: true }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], exportAs: [\"matTabNavBar\", \"matTabNav\"], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], directives: [{ type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNav, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-tab-nav-bar]', exportAs: 'matTabNavBar, matTabNav', inputs: ['color'], host: {\n                        '[attr.role]': '_getRole()',\n                        'class': 'mat-tab-nav-bar mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatTabLink), { descendants: true }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n// Boilerplate for applying mixins to MatTabLink.\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {\n})));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        /** Unique id for the tab. */\n        this.id = `mat-tab-link-${nextUniqueId++}`;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() {\n        return this._isActive;\n    }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = newValue;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled);\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n        // Since we allow navigation through tabbing in the nav bar, we\n        // have to update the focused index whenever the link receives focus.\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n    _handleKeydown(event) {\n        if (this._tabNavBar.tabPanel && event.keyCode === SPACE) {\n            this.elementRef.nativeElement.click();\n        }\n    }\n    _getAriaControls() {\n        return this._tabNavBar.tabPanel\n            ? this._tabNavBar.tabPanel?.id\n            : this.elementRef.nativeElement.getAttribute('aria-controls');\n    }\n    _getAriaSelected() {\n        if (this._tabNavBar.tabPanel) {\n            return this.active ? 'true' : 'false';\n        }\n        else {\n            return this.elementRef.nativeElement.getAttribute('aria-selected');\n        }\n    }\n    _getAriaCurrent() {\n        return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n    }\n    _getRole() {\n        return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n    }\n    _getTabIndex() {\n        if (this._tabNavBar.tabPanel) {\n            return this._isActive ? 0 : -1;\n        }\n        else {\n            return this.tabIndex;\n        }\n    }\n}\n_MatTabLinkBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabLinkBase, deps: [{ token: _MatTabNavBase }, { token: i0.ElementRef }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabLinkBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabLinkBase, inputs: { active: \"active\", id: \"id\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabLinkBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: _MatTabNavBase }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { active: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLink, deps: [{ token: MatTabNav }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLink.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabLink, selector: \"[mat-tab-link], [matTabLink]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { listeners: { \"focus\": \"_handleFocus()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-controls\": \"_getAriaControls()\", \"attr.aria-current\": \"_getAriaCurrent()\", \"attr.aria-disabled\": \"disabled\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.id\": \"id\", \"attr.tabIndex\": \"_getTabIndex()\", \"attr.role\": \"_getRole()\", \"class.mat-tab-disabled\": \"disabled\", \"class.mat-tab-label-active\": \"active\" }, classAttribute: \"mat-tab-link mat-focus-indicator\" }, exportAs: [\"matTabLink\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link mat-focus-indicator',\n                        '[attr.aria-controls]': '_getAriaControls()',\n                        '[attr.aria-current]': '_getAriaCurrent()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.id]': 'id',\n                        '[attr.tabIndex]': '_getTabIndex()',\n                        '[attr.role]': '_getRole()',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                        '(focus)': '_handleFocus()',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: MatTabNav }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n/**\n * Tab panel component associated with MatTabNav.\n */\nclass MatTabNavPanel {\n    constructor() {\n        /** Unique id for the tab panel. */\n        this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n    }\n}\nMatTabNavPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNavPanel, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatTabNavPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabNavPanel, selector: \"mat-tab-nav-panel\", inputs: { id: \"id\" }, host: { attributes: { \"role\": \"tabpanel\" }, properties: { \"attr.aria-labelledby\": \"_activeTabId\", \"attr.id\": \"id\" }, classAttribute: \"mat-tab-nav-panel\" }, exportAs: [\"matTabNavPanel\"], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNavPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-tab-nav-panel',\n                    exportAs: 'matTabNavPanel',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        '[attr.aria-labelledby]': '_activeTabId',\n                        '[attr.id]': 'id',\n                        'class': 'mat-tab-nav-panel',\n                        'role': 'tabpanel',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, declarations: [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent], imports: [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule], exports: [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabContent] });\nMatTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations };\n"],"names":["Observable","argsArgArrayOrObject","innerFrom","popResultSelector","createOperatorSubscriber","mapOneOrManyArgs","createObject","forkJoin","args","resultSelector","sources","keys","result","subscriber","length","complete","values","Array","remainingCompletions","remainingEmissions","sourceIndex","hasValue","subscribe","value","undefined","next","pipe","asyncScheduler","delayWhen","timer","delay","due","scheduler","duration","concat","take","ignoreElements","mapTo","mergeMap","delayDurationSelector","subscriptionDelay","source","index","coerceBooleanProperty","i0","Directive","forwardRef","Component","ViewEncapsulation","Optional","Self","ViewChild","ContentChild","Input","NgModule","i3","mixinErrorState","i6","MatFormFieldControl","MatFormFieldModule","Subject","i1","i2","i4","MatButtonModule","i5","MatIconModule","i7","CommonModule","MatInputModule","nextUniqueId","_NgxMatInputMixinBase","constructor","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","NgxMatFileInputIcon","ɵfac","ɵdir","type","selector","NgxMatFileInputComponent","_elementRef","_platform","_cd","color","fileNames","_uid","stateChanges","focused","controlType","autofilled","_onTouched","_onChange","_disabled","_multiple","placeholder","separator","_required","_readonly","id","valueAccessor","disabled","_id","multiple","required","_value","readonly","accept","_accept","ngOnChanges","ngOnDestroy","ngDoCheck","updateErrorState","writeValue","_updateInputValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","focus","options","_inputValueRef","nativeElement","_focusChanged","isFocused","_markAsTouched","markForCheck","_isBadInput","validity","badInput","empty","shouldLabelFloat","setDescribedByIds","ids","_ariaDescribedby","join","openFilePicker","event","_inputFileRef","click","preventDefault","stopPropagation","handleFiles","filelist","files","i","push","item","_resetInputFile","onContainerClick","text","isArray","map","x","name","ElementRef","Platform","ChangeDetectorRef","NgControl","NgForm","FormGroupDirective","ErrorStateMatcher","ɵcmp","provide","useExisting","MatButton","MatIcon","MatSuffix","NgIf","encapsulation","None","host","providers","exportAs","template","styles","decorators","static","_customIcon","errorStateMatcher","NgxMatFileInputModule","ɵmod","ɵinj","declarations","imports","exports","calculFileSize","number","toFixed","MaxSizeValidator","max","ctrl","Number","isNaN","add","a","b","sumSize","size","reduce","maxSize","AcceptValidator","includes","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","isDataSource","_DisposeViewRepeaterStrategy","DataSource","ScrollingModule","DOCUMENT","InjectionToken","Inject","Injectable","ChangeDetectionStrategy","EmbeddedViewRef","EventEmitter","NgZone","Attribute","SkipSelf","Output","ContentChildren","from","BehaviorSubject","isObservable","of","takeUntil","mixinHasStickyInput","base","_sticky","_hasStickyChanged","sticky","v","prevValue","hasStickyChanged","resetStickyChanged","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","TemplateRef","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_table","_stickyEnd","_name","_setNameInput","stickyEnd","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","replace","inputs","cell","headerCell","footerCell","BaseCdkCell","columnDef","elementRef","classList","CdkHeaderCell","CdkFooterCell","nodeType","tableRole","getAttribute","role","setAttribute","CdkCell","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","schedule","task","_createScheduleIfNeeded","scheduleEnd","_getScheduleObservable","isStable","Promise","resolve","onStable","ɵprov","CDK_ROW_TEMPLATE","BaseRowDef","_differs","changes","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","IterableDiffers","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkRowDef","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","ViewContainerRef","CdkHeaderRow","changeDetection","Default","CdkFooterRow","CdkRow","CdkNoDataRow","templateRef","_contentClassName","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","ELEMENT_NODE","children","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","width","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","height","getBoundingClientRect","borderedRowIndex","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","useClass","DataRowOutlet","viewContainer","HeaderRowOutlet","FooterRowOutlet","NoDataRowOutlet","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","_changeDetectorRef","_dir","_document","_viewRepeater","_viewportRuler","_stickyPositioningListener","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","contentChanged","viewChange","MAX_VALUE","nodeName","trackBy","_trackByFn","ngDevMode","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_headerRowOutlet","_footerRowOutlet","forEach","def","clear","_defaultRowDef","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","operation","context","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","rowView","get","$implicit","isInAngularZone","addColumnDef","removeColumnDef","delete","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","when","columnsDiffReducer","acc","dataColumnsChanged","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","_renderRow","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","view","createEmbeddedView","cellTemplate","_getCellTemplates","renderIndex","count","first","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","_noDataRowOutlet","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","rootNode","Directionality","ViewportRuler","useValue","descendants","array","CdkTextColumn","_options","justify","_syncColumnDefName","headerText","_createDefaultHeaderText","dataAccessor","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","EXPORTED_DECLARATIONS","CdkTableModule","normalizePassiveListenerOptions","coerceElement","coerceNumberProperty","EMPTY","fromEvent","auditTime","listenerOptions","passive","AutofillMonitor","_monitoredElements","monitor","elementOrRef","info","subject","cssClass","listener","animationName","contains","run","target","isAutofilled","runOutsideAngular","addEventListener","unlisten","removeEventListener","stopMonitoring","_info","providedIn","CdkAutofill","_autofillMonitor","cdkAutofill","emit","CdkTextareaAutosize","document","_enabled","_previousMinRows","_isViewInited","_handleFocusEvent","_hasFocus","_textareaElement","minRows","_minRows","_setMinHeight","maxRows","_maxRows","_setMaxHeight","enabled","resizeToFitContent","reset","_cachedPlaceholderHeight","removeAttribute","_cacheTextareaPlaceholderHeight","minHeight","_cachedLineHeight","maxHeight","ngAfterViewInit","_initialHeight","window","_getWindow","_cacheTextareaLineHeight","textareaClone","cloneNode","visibility","border","padding","overflow","parentNode","clientHeight","_measureScrollHeight","previousMargin","marginBottom","isFirefox","FIREFOX","needsMarginFiller","measuringClass","scrollHeight","force","textarea","_previousValue","Math","requestAnimationFrame","_scrollToCaretPosition","setTimeout","_noopInputHandler","_getDocument","doc","defaultView","selectionStart","selectionEnd","isStopped","setSelectionRange","TextFieldModule","ɵisPromise","ɵisObservable","ɵRuntimeError","Host","ɵcoerceToBoolean","inject","Version","ɵgetDOM","BaseControlValueAccessor","_renderer","onChange","_","onTouched","setProperty","key","Renderer2","BuiltInControlValueAccessor","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","CheckboxControlValueAccessor","multi","DEFAULT_VALUE_ACCESSOR","DefaultValueAccessor","_isAndroid","userAgent","getUserAgent","test","toLowerCase","COMPOSITION_BUFFER_MODE","renderer","_compositionMode","_composing","normalizedValue","_handleInput","_compositionStart","_compositionEnd","NG_DEV_MODE$1","isEmptyInputValue","hasValidLength","NG_VALIDATORS","NG_ASYNC_VALIDATORS","EMAIL_REGEXP","Validators","min","minValidator","maxValidator","control","requiredValidator","requiredTrue","requiredTrueValidator","email","emailValidator","minLength","minLengthValidator","maxLength","maxLengthValidator","pattern","patternValidator","nullValidator","compose","validators","composeAsync","parseFloat","regex","regexStr","charAt","RegExp","toString","isPresent","o","toObservable","obs","errorMessage","mergeErrors","arrayOfErrors","res","errors","Object","executeValidators","validator","isValidatorFn","validate","normalizeValidators","c","presentValidators","composeValidators","observables","composeAsyncValidators","mergeValidators","controlValidators","dirValidator","getControlValidators","_rawValidators","getControlAsyncValidators","_rawAsyncValidators","makeValidatorsArray","hasValidator","addValidators","currentValidators","current","validatorsToAdd","removeValidators","AbstractControlDirective","_onDestroyCallbacks","valid","invalid","pending","pristine","dirty","touched","status","untouched","statusChanges","valueChanges","path","_setValidators","_composedValidatorFn","_setAsyncValidators","_composedAsyncValidatorFn","asyncValidator","_registerOnDestroy","_invokeOnDestroyCallbacks","hasError","errorCode","getError","ControlContainer","formDirective","arguments","_parent","AbstractControlStatus","cd","isTouched","isUntouched","isPristine","isDirty","isValid","isInvalid","isPending","isSubmitted","submitted","ngControlStatusHost","ngGroupStatusHost","NgControlStatus","NgControlStatusGroup","formControlNameExample","formGroupNameExample","formArrayNameExample","ngModelGroupExample","ngModelWithFormGroupExample","controlParentException","ngModelGroupException","missingFormException","groupParentException","arrayParentException","disabledAttrWarning","asyncValidatorsDroppedWithOptsWarning","ngModelWarning","directiveName","describeKey","isFormGroup","noControlsError","missingControlError","missingControlValueError","NG_DEV_MODE","VALID","INVALID","PENDING","DISABLED","pickValidators","validatorOrOpts","isOptionsObj","coerceToValidator","pickAsyncValidators","asyncValidators","coerceToAsyncValidator","assertControlPresent","parent","isGroup","controls","collection","assertAllValuesPresent","_forEachChild","AbstractControl","_pendingDirty","_hasOwnPendingAsyncValidator","_pendingTouched","_onCollectionChange","_onDisabledChange","validatorFn","asyncValidatorFn","updateOn","_updateOn","setValidators","setAsyncValidators","addAsyncValidators","removeAsyncValidators","hasAsyncValidator","clearValidators","clearAsyncValidators","markAsTouched","opts","onlySelf","markAllAsTouched","markAsUntouched","_updateTouched","markAsDirty","markAsPristine","_updatePristine","markAsPending","emitEvent","disable","skipPristineCheck","_parentMarkedDirty","_updateValue","_updateAncestors","changeFn","enable","updateValueAndValidity","setParent","getRawValue","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","_allControlsDisabled","_asyncValidationSubscription","setErrors","_updateControlsErrors","currPath","split","_find","root","_initObservables","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","_registerOnCollectionChange","_setUpdateStrategy","parentDirty","FormGroup","_setUpControls","registerControl","addControl","removeControl","setControl","controlName","hasOwnProperty","setValue","patchValue","_reduceChildren","_syncPendingControls","subtreeUpdated","updated","child","cb","_reduceValue","condition","entries","initValue","UntypedFormGroup","FormRecord","isFormRecord","controlPath","setUpControl","_throwError","setUpValidators","setUpViewChangePipeline","setUpModelChangePipeline","setUpBlurPipeline","setUpDisabledChangeHandler","cleanUpControl","validateControlPresenceOnChange","noop","_noControlError","cleanUpValidators","registerOnValidatorChange","onDisabledChange","registerOnDisabledChange","_unregisterOnDisabledChange","onValidatorChange","isControlUpdated","updatedValidators","updatedAsyncValidators","newValue","_pendingValue","_pendingChange","updateControl","emitModelToViewChange","viewToModelUpdate","emitModelEvent","_unregisterOnChange","setUpFormContainer","cleanUpFormContainer","message","messageEnd","_describeControlLocation","_throwInvalidValueAccessorError","loc","isPropertyUpdated","viewModel","isFirstChange","is","isBuiltInAccessor","getPrototypeOf","syncPendingControls","form","directives","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","removeListItem$1","list","el","splice","_ngModelWarning","instance","warningConfig","_ngModelWarningSentOnce","_ngModelWarningSent","formDirectiveProvider$1","resolvedPromise$1","_directives","ngSubmit","then","_findContainer","getControl","addFormGroup","group","removeFormGroup","getFormGroup","updateModel","onSubmit","$event","onReset","resetForm","pop","outputs","removeListItem","isFormControlState","formState","FormControl","defaultValue","_applyFormState","nonNullable","initialValueIsDefault","emitViewToModelChange","UntypedFormControl","isFormControl","AbstractFormGroupDirective","_checkParentType","modelParentException","formGroupNameException","missingNameException","modelGroupParentException","modelGroupProvider","NgModelGroup","formControlBinding$1","NgModel","resolvedPromise","_registered","update","_checkForErrors","_checkName","oldName","previousValue","_getPath","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","standalone","disabledValue","ɵNgNoValidate","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","throwNameError","RadioControlRegistryModule","RadioControlRegistry","_accessors","accessor","select","_isSameGroup","fireUncheck","controlPair","_control","_registry","_injector","_state","_fn","formControlName","Injector","RANGE_VALUE_ACCESSOR","RangeValueAccessor","NG_MODEL_WITH_FORM_CONTROL_WARNING","formControlBinding","FormControlDirective","_ngModelWarningConfig","_isControlChanged","previousForm","formDirectiveProvider","_updateDomValue","_checkFormPresent","_updateValidators","_updateRegistrations","_oldForm","_setUpFormContainer","_cleanUpFormContainer","addFormArray","removeFormArray","getFormArray","oldCtrl","newCtrl","formGroupNameProvider","FormGroupName","_hasInvalidParent","formArrayNameProvider","FormArrayName","controlNameBinding","FormControlName","_added","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_buildValueString$1","_extractId$1","valueString","_optionMap","_idCounter","_compareWith","compareWith","_getOptionId","_getOptionValue","_registerOption","NgSelectOption","_element","_select","ngValue","_setElementValue","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","_buildValueString","_extractId","HTMLCollection","optionSelectedStateSetter","opt","_setSelected","selected","selectedOptions","val","ɵNgSelectMultipleOption","toInteger","parseInt","toFloat","AbstractValidatorDirective","_validator","inputName","input","normalizeInput","createValidator","MAX_VALIDATOR","MaxValidator","MIN_VALIDATOR","MinValidator","REQUIRED_VALIDATOR","RequiredValidator","CHECKBOX_REQUIRED_VALIDATOR","CheckboxRequiredValidator","EMAIL_VALIDATOR","EmailValidator","MIN_LENGTH_VALIDATOR","MinLengthValidator","minlength","MAX_LENGTH_VALIDATOR","MaxLengthValidator","maxlength","PATTERN_VALIDATOR","PatternValidator","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","ɵInternalFormsSharedModule","FormsModule","ReactiveFormsModule","withConfig","ngModule","warnOnNgModelWithFormControl","FormArray","at","_adjustIndex","_registerControl","insert","removeAt","adjustedIndex","UntypedFormArray","isFormArray","isAbstractControlOptions","FormBuilder","useNonNullable","nnfb","reducedControls","_reduceControls","newOptions","createdControls","_createControl","NonNullableFormBuilder","useFactory","UntypedFormBuilder","controlsConfig","VERSION","ObserversModule","mixinColor","MatCommonModule","merge","startWith","trigger","transition","animate","ANIMATION_MODULE_TYPE","nextUniqueId$2","MAT_ERROR","MatError","ariaLive","matFormFieldAnimations","transitionMessages","opacity","transform","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","_MAT_HINT","MatHint","MatLabel","MatPlaceholder","MAT_PREFIX","MatPrefix","MAT_SUFFIX","floatingLabelScale","outlineGapPadding","_MatFormFieldBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_defaults","_animationMode","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_subscriptAnimationState","_hintLabel","_hintLabelId","_labelId","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","appearance","_hideRequiredMarker","hideRequiredMarker","_appearance","oldValue","_shouldAlwaysFloat","_canLabelFloat","hintLabel","_processHints","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","getLabelId","_hasFloatingLabel","getConnectedOverlayOrigin","_connectionContainerRef","ngAfterContentInit","_validateControlChild","_validatePlaceholders","_syncDescribedByIds","updateOutlineGap","_prefixChildren","_suffixChildren","_hintChildren","_errorChildren","detectChanges","_shouldForward","prop","_hasPlaceholder","_placeholderChild","_hasLabel","_labelChildNonStatic","_labelChildStatic","_shouldLabelFloat","_hideControlPlaceholder","_getDisplayedMessages","errorState","_animateAndLockLabel","_label","_validateHints","startHint","endHint","hint","userAriaDescribedBy","error","labelEl","outlineStartSelector","outlineGapSelector","textContent","trim","gapElements","querySelectorAll","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerRect","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","offsetWidth","abs","rect","getRootNode","documentElement","CdkObserveContent","NgSwitch","NgSwitchCase","animations","OnPush","_inputContainerRef","SecurityContext","ErrorHandler","throwError","Subscription","tap","catchError","finalize","share","HttpClient","DomSanitizer","policy","getPolicy","ttWindow","trustedTypes","createPolicy","createHTML","s","trustedHTMLFromString","html","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","url","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_resolvers","_defaultFontSetClass","addSvgIcon","addSvgIconInNamespace","addSvgIconLiteral","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","addSvgIconResolver","resolver","cleanLiteral","sanitize","HTML","trustedLiteral","addSvgIconSet","addSvgIconSetInNamespace","addSvgIconSetLiteral","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","registerFontClassAlias","alias","className","classNameForFontAlias","setDefaultFontSetClass","getDefaultFontSetClass","getSvgIconFromUrl","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","getNamedSvgIcon","iconKey","config","_getSvgFromConfig","_getIconConfigFromResolvers","iconSetConfigs","_getSvgFromIconSetConfigs","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","handleError","foundIcon","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","iconElement","_setSvgAttributes","_toSvgElement","_svgElementFromString","str","div","innerHTML","attributes","childNodes","viewBox","iconConfig","withCredentials","inProgressFetch","req","responseType","configNamespace","svgElement","isSafeUrlWithOptions","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","deps","_MatIconBase","MAT_ICON_LOCATION","factory","MAT_ICON_LOCATION_FACTORY","_location","location","getPathname","pathname","search","funcIriAttributes","funcIriAttributeSelector","attr","funcIriPattern","_iconRegistry","ariaHidden","_inline","_currentIconFetch","inline","svgIcon","_svgIcon","_updateSvgIcon","_clearSvgElement","fontSet","_fontSet","_cleanupFontValue","_updateFontIconClasses","fontIcon","_fontIcon","_splitIconName","parts","ngAfterViewChecked","cachedElements","_elementsWithExternalReferences","newPath","_previousPath","_prependPathToReferences","_usingFontIcon","_setSvgElement","_cacheChildrenWithExternalReferences","layoutElement","childCount","elem","fontSetClass","_previousFontSetClass","_previousFontIconClass","attrs","elementsWithFuncIri","elementWithReference","match","rawName","_svgNamespace","_svgName","getSupportedInputTypes","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","_MatInputBase","MatInput","inputValueAccessor","ngZone","_formField","_type","_neverEmptyInputTypes","t","_iOSKeyupListener","_inputValueAccessor","_previousNativeValue","IOS","_isServer","_isNativeSelect","_isTextarea","_isInFormField","_validateType","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","_onInput","_previousPlaceholder","_isNeverEmpty","selectElement","firstOption","selectedIndex","label","_isInlineSelect","FocusKeyManager","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","UP_ARROW","DOWN_ARROW","RIGHT_ARROW","LEFT_ARROW","ESCAPE","hasModifierKey","ENTER","SPACE","QueryList","asapScheduler","switchMap","TemplatePortal","DomPortalOutlet","mixinDisableRipple","mixinDisabled","MatRippleModule","i3$1","i1$1","Overlay","OverlayConfig","OverlayModule","CdkScrollableModule","matMenuAnimations","transformMenu","fadeInItems","MAT_MENU_CONTENT","_MatMenuContentBase","_template","_componentFactoryResolver","_appRef","_viewContainerRef","_attached","attach","_portal","detach","_outlet","insertBefore","outletElement","isAttached","dispose","ComponentFactoryResolver","ApplicationRef","MatMenuContent","throwMatMenuMissingError","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","throwMatMenuRecursiveError","MAT_MENU_PANEL","_MatMenuItemBase","MatMenuItem","_focusMonitor","_parentMenu","_hovered","_focused","_highlighted","_triggersSubmenu","addItem","origin","focusVia","_getHostElement","removeItem","_getTabIndex","_checkDisabled","_handleMouseEnter","getLabel","clone","icons","_setHighlighted","isHighlighted","activeElement","FocusMonitor","MatRipple","MAT_MENU_DEFAULT_OPTIONS","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","menuPanelUid","_MatMenuBase","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","_classList","_panelAnimationState","_animationDone","overlayPanelClass","_overlapTrigger","_hasBackdrop","hasBackdrop","closed","close","panelId","setPositionClasses","panelClass","classes","previousPanelClass","_previousPanelClass","_updateDirectDescendants","_keyManager","withWrap","withTypeAhead","withHomeAndEnd","tabOut","focusedItem","updateActiveItem","itemsList","manager","activeItem","toArray","activeItemIndex","setActiveItem","setNextItemActive","destroy","itemChanges","_item","_handleKeydown","keyCode","parentMenu","setFocusOrigin","onKeydown","focusFirstItem","lazyContent","_focusFirstItem","setFirstItemActive","parentElement","resetActiveItem","setElevation","depth","elevation","_baseElevation","newElevation","_elevationPrefix","customElevation","startsWith","_previousElevation","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","_onAnimationStart","toState","scrollTop","_allItems","notifyOnChanges","ariaLabel","ariaLabelledby","ariaDescribedby","MatMenu","defaultOptions","changeDetectorRef","NgClass","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","_MatMenuTriggerBase","_overlay","scrollStrategy","_menuItemInstance","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","_scrollStrategy","_parentMaterialMenu","triggersSubmenu","_deprecatedMatMenuTriggerFor","menu","_menu","reason","_destroyMenu","_checkMenu","_handleHover","menuOpen","toggleMenu","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","positionStrategy","_setPosition","_getPortal","menuData","_menuClosingActions","_initMenu","withLockedPosition","reapplyLastPosition","updatePosition","_setIsMenuOpen","_setMenuElevation","isOpen","_getOverlayConfig","_subscribeToPositions","keydownEvents","flexibleConnectedTo","withGrowAfterOpen","withTransformOriginOn","positionChanges","connectionPair","overlayX","overlayY","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","_handleMousedown","button","_handleClick","MatMenuTrigger","MatMenuModule","_getShadowRoot","BASE_SIZE","BASE_STROKE_WIDTH","_MatProgressSpinnerBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","INDETERMINATE_ANIMATION_TEMPLATE","MatProgressSpinner","animationMode","defaults","viewportRuler","_diameter","_resizeSubscription","mode","trackedDiameters","_diameters","_spinnerAnimationLabel","_getSpinnerAnimationLabel","head","_noopAnimations","_forceAnimations","strokeWidth","SAFARI","_styleRoot","_attachStyleNode","_strokeWidth","_getCircleRadius","_getViewBox","_getStrokeCircumference","PI","_getStrokeDashOffset","_getCircleStrokeWidth","_getCircleTransformOrigin","scale","currentScale","styleRoot","currentDiameter","diameters","diametersForElement","styleTag","_getAnimationText","strokeCircumference","MatProgressSpinnerModule","MatSpinner","CdkConnectedOverlay","i8","mixinTabIndex","_countGroupLabelsBeforeOption","_getOptionScrollPosition","MAT_OPTION_PARENT_COMPONENT","MatOption","MAT_OPTGROUP","MatOptionModule","ActiveDescendantKeyManager","SelectionModel","A","defer","distinctUntilChanged","query","animateChild","matSelectAnimations","transformPanelWrap","optional","transformPanel","minWidth","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","_MatSelectMixinBase","MAT_SELECT_TRIGGER","MatSelectTrigger","_MatSelectBase","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","_panelOpen","o1","o2","_triggerAriaLabelledBy","_destroy","_valueId","_panelDoneAnimatingStream","_overlayPanelClass","_disableOptionCentering","disableOptionCentering","optionSelectionChanges","option","onSelectionChange","openedChange","_openedStream","_closedStream","selectionChange","valueChange","typeaheadDebounceInterval","_typeaheadDebounceInterval","_scrollStrategyFactory","_placeholder","_selectionModel","_initializeSelection","hasAssigned","_assignValue","_panelDoneAnimating","panelOpen","_initKeyManager","changed","added","removed","deselect","_resetOptions","newAriaLabelledby","_getTriggerAriaLabelledby","_previousControl","toggle","open","_canOpen","withHorizontalOrientation","_highlightCorrectOption","_isRtl","triggerValue","viewValue","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","isTyping","altKey","previouslySelectedOption","selectedOption","announce","_selectViaInteraction","ctrlKey","hasDeselectedOptions","previouslyFocusedIndex","shiftKey","_onFocus","_onBlur","_onAttached","_overlayDir","positionChange","_positioningSettled","_getPanelTheme","isEmpty","_setSelectionByValue","setInactiveStyles","_selectOptionByValue","_sortValues","correspondingOption","isSelected","withVerticalOrientation","withAllowedModifierKeys","panel","_scrollOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","wasSelected","_propagateChanges","sort","sortComparator","fallbackValue","valueToEmit","_getChangeEvent","_getPanelAriaLabelledby","labelId","labelExpression","_getAriaActiveDescendant","LiveAnnouncer","MatSelect","_scrollTop","_triggerFontSize","_transformOrigin","_offsetY","_positions","_calculateOverlayScroll","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","_triggerRect","getComputedStyle","fontSize","_calculateOverlayPosition","overlayElement","labelCount","optionGroups","_calculateOverlayOffsetX","offsetX","overlayRect","viewportSize","getViewportSize","paddingWidth","leftOverflow","rightOverflow","round","_calculateOverlayOffsetY","optionHeightAdjustment","maxOptionsDisplayed","floor","optionOffsetFromPanelTop","firstDisplayedIndex","_getItemCount","selectedDisplayIndex","partialItemHeight","_checkOverlayWithinViewport","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","panelHeight","scrollContainerHeight","selectedOptionOffset","CdkOverlayOrigin","NgSwitchDefault","customTrigger","MatSelectModule","_isNumberValue","combineLatest","MatRecycleRows","MatTable","MatCellDef","MatHeaderCellDef","MatFooterCellDef","MatColumnDef","MatHeaderCell","MatFooterCell","MatCell","MatHeaderRowDef","MatFooterRowDef","MatRowDef","MatHeaderRow","MatFooterRow","MatRow","MatNoDataRow","MatTextColumn","MatTableModule","MAX_SAFE_INTEGER","_MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","currentTerm","transformedFilter","_updateChangeSubscription","_filterData","_sort","paginator","_paginator","sortChange","initialized","pageChange","page","filteredData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","lastPageIndex","ceil","newPageIndex","MatTableDataSource","A11yModule","i7$1","CdkPortal","CdkPortalOutlet","PortalModule","MAT_RIPPLE_GLOBAL_OPTIONS","RippleRenderer","_MAT_INK_BAR_POSITIONER","_MAT_INK_BAR_POSITIONER_FACTORY","method","offsetLeft","MatInkBar","_inkBarPositioner","alignToElement","show","inkBar","hide","MAT_TAB_CONTENT","MatTabContent","MAT_TAB_LABEL","MAT_TAB","MatTabLabel","viewContainerRef","_closestTab","_MatTabBase","MAT_TAB_GROUP","MatTab","_closestTabGroup","textLabel","_contentPortal","isActive","templateLabel","_templateLabel","_setTemplateLabelInput","content","_explicitContent","_implicitContent","read","labelClass","bodyClass","matTabsAnimations","translateTab","MatTabBodyPortal","componentFactoryResolver","_host","_centeringSub","_leavingSub","_beforeCentering","_isCenterPosition","_position","isCentering","hasAttached","_content","_afterLeavingCenter","MatTabBody","_MatTabBodyBase","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","animationDuration","_computePositionAnimationState","y","fromState","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","_getLayoutDirection","_portalHost","MAT_TABS_CONFIG","_MatTabLabelWrapperBase","MatTabLabelWrapper","getOffsetLeft","getOffsetWidth","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_scrollDistance","_selectedIndexChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","disablePagination","_selectedIndex","selectFocusedIndex","indexFocused","_stopInterval","_previousPaginator","_handlePaginatorPress","_nextPaginator","dirChange","resize","realign","updatePagination","_alignInkBarToSelectedTab","_items","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","focusIndex","_itemSelected","_onContentChanges","_currentTextContent","_checkPaginationEnabled","_isValidIndex","tab","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","TRIDENT","EDGE","_scrollTo","_scrollHeader","viewLength","scrollAmount","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","_tabListInner","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","lengthOfTabList","selectedItem","selectedLabelWrapper","_inkBar","mouseEvent","maxScrollDistance","distance","_MatTabHeaderBase","platform","_disableRipple","disableRipple","MatTabHeader","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","_tabs","_indexToSelect","_lastFocusedTabIndex","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","dynamicHeight","contentTabIndex","_dynamicHeight","_animationDuration","_contentTabIndex","backgroundColor","_backgroundColor","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","selectedTab","_allTabs","realignInkBar","_tabHeader","focusTab","header","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","offsetHeight","_removeTabBodyWrapperHeight","tabHeader","targetIndex","_tabFocusChanged","focusOrigin","MatTabGroup","NgForOf","CdkMonitorFocus","_MatTabNavBase","updateActiveLink","tabPanel","_activeTabId","_getRole","MatTabNav","MatTabLink","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_isActive","rippleConfig","animation","enterDuration","exitDuration","rippleDisabled","_handleFocus","_getAriaControls","_getAriaSelected","_getAriaCurrent","tabNavBar","focusMonitor","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabNavPanel","MatTabsModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]}