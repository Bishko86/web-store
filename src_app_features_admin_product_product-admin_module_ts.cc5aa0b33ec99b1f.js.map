{"version":3,"file":"src_app_features_admin_product_product-admin_module_ts.cc5aa0b33ec99b1f.js","mappings":"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","sources":["./src/app/features/admin/product/components/add-product-form/add-product-form.component.ts","./src/app/features/admin/product/components/add-product-form/add-product-form.component.html","./src/app/features/admin/product/components/upload-image-card/upload-image-card.component.ts","./src/app/features/admin/product/components/upload-image-card/upload-image-card.component.html","./src/app/features/admin/product/pipes/get-category-name.pipe.ts","./src/app/features/admin/product/product-admin.component.ts","./src/app/features/admin/product/product-admin.component.html","./src/app/features/admin/product/product-admin.module.ts","./src/app/shared/enums/message-types.enum.ts"],"sourcesContent":["import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Inject,\n  OnDestroy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { AngularFireUploadTask } from '@angular/fire/compat/storage';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\n\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Actions, ofType } from '@ngrx/effects';\n\nimport { Store } from '@ngrx/store';\nimport { filter, Observable, take, takeUntil } from 'rxjs';\n\nimport { State } from 'src/app/core/decorators/ngrx-selector.decorator';\nimport { DestroyableDirective } from 'src/app/core/directives/destroyable.directive';\nimport { Category, Product } from 'src/app/core/models';\nimport { ConfirmService } from 'src/app/core/services/confirm.service';\nimport { SnackBarService } from 'src/app/core/services/snackbar.service';\nimport { UploadFileService } from 'src/app/core/services/upload-file.service';\nimport {\n  addProduct,\n  ProductActions,\n  updateProduct,\n} from 'src/app/core/store/actions/product.action';\nimport { selectCategories } from 'src/app/core/store/selectors/category.selectors';\nimport { selectProductIsLoading } from 'src/app/core/store/selectors/product.selectors';\nimport { AppState } from 'src/app/core/store/state/app.state';\nimport {\n  DELETE_CONFIRM_TEXT,\n  TOO_MANY_FILES,\n} from 'src/app/shared/constants/messages';\nimport { MessageTypes } from 'src/app/shared/enums/message-types.enum';\nimport { AddProductFormModel } from '../../models/add-product-form.model';\nimport { ProductImage } from '../../models/product-image.model';\nimport { UploadFile } from '../../models/upload-file.model';\n\n@Component({\n  selector: 'app-add-product-form',\n  templateUrl: './add-product-form.component.html',\n  styleUrls: ['./add-product-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddProductFormComponent extends DestroyableDirective implements OnInit, OnDestroy {\n  public readonly accept = 'image/png, image/jpeg';\n\n  private isEditMode: boolean = false;\n  public productForm: FormGroup<AddProductFormModel>;\n  public files: UploadFile[] = [];\n\n  get photoControl(): AbstractControl<ProductImage[]> {\n    return this.productForm.controls['photo'];\n  }\n\n  @State(selectProductIsLoading) public readonly isLoading$: Observable<boolean>;\n  @State(selectCategories) public categories$: Observable<Category[]>;\n\n  constructor(\n    private readonly store: Store<AppState>,\n    private readonly dialogRef: MatDialogRef<AddProductFormComponent>,\n    private readonly actions$: Actions,\n    private readonly fileUploadService: UploadFileService,\n    private readonly cdr: ChangeDetectorRef,\n    private readonly snackbarService: SnackBarService,\n    private readonly confirmService: ConfirmService,\n    @Inject(MAT_DIALOG_DATA) private readonly dialogData: Product\n  ) { super() }\n\n  private initProductForm(): void {\n    this.productForm = new FormGroup({\n      name: new FormControl(this.dialogData?.name || '', Validators.required) as AbstractControl,\n      price: new FormControl(this.dialogData?.price || null, Validators.required) as AbstractControl,\n      categoryId: new FormControl(this.dialogData?.categoryId || '', Validators.required) as AbstractControl,\n      description: new FormControl(this.dialogData?.description || '', Validators.required) as AbstractControl,\n      photo: new FormControl<ProductImage[]>(this.dialogData?.photo || []) as AbstractControl,\n    });\n  }\n\n  public ngOnInit(): void {\n    this.initProductForm();\n    this.updateFileList();\n\n    if (this.dialogData) {\n      this.isEditMode = true;\n      this.files = [...this.dialogData.photo];\n    }\n  }\n\n  public saveProduct(): void {\n    const product: Product = {\n      ...(this.isEditMode && { id: this.dialogData.id }),\n      ...(this.productForm.value as Product),\n      createdAt: this.isEditMode ? this.dialogData.createdAt : Date.now(),\n    };\n\n    if (this.isEditMode) {\n      this.store.dispatch(updateProduct({ product }));\n    } else {\n      this.store.dispatch(addProduct({ product }));\n    }\n\n    this.actions$\n      .pipe(\n        ofType(\n          ProductActions.UPDATE_PRODUCT_SUCCESS,\n          ProductActions.ADD_PRODUCT_SUCCESS\n        ),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(() => this.dialogRef.close());\n  }\n\n  public onFileDropped(event: FileList): void {\n    this.prepareFilesList(Object.values(event));\n  }\n\n  public fileBrowseHandler(event: Event): void {\n    const files = Object.values((event.target as HTMLInputElement).files || {});\n    this.prepareFilesList(files);\n  }\n\n  private prepareFilesList(files: File[]): void {\n    if (this.showWarningSnackBar(files.length + this.files.length)) {\n      return;\n    }\n\n    files.forEach((file) => {\n      const angularFireUploadTask = this.uploadFile(file);\n      const uploadFile: UploadFile = {\n        url: null,\n        name: file.name,\n        size: file.size,\n        progress$: angularFireUploadTask.percentageChanges(),\n        cancel: angularFireUploadTask.cancel,\n      };\n\n      this.files = this.files.concat(uploadFile);\n    });\n  }\n\n  private showWarningSnackBar(length: number): boolean {\n    if (length > 6) {\n      this.snackbarService.openSnackBar(\n        TOO_MANY_FILES(6),\n        MessageTypes.FORBIDDEN,\n        4000\n      );\n      return true;\n    }\n    return false;\n  }\n\n  private uploadFile(file: File): AngularFireUploadTask {\n    return this.fileUploadService.pushFileToStorage(file);\n  }\n\n  private updateFileList(): void {\n    this.fileUploadService.uploadedFiles$\n      .pipe(filter(Boolean), takeUntil(this.destroy$))\n      .subscribe((productPhoto: ProductImage) => {\n        this.cdr.markForCheck();\n        this.photoControl?.setValue([\n          productPhoto,\n          ...this.photoControl.value,\n        ]);\n\n        this.files = this.files.map((file) => {\n          if (file.name === productPhoto.name) {\n            return { ...file, url: productPhoto.url };\n          }\n          return file;\n        });\n      });\n  }\n\n  public onDeleteProductPhoto(photoName: string): void {\n    this.fileUploadService\n      .deleteFile(photoName)\n      .pipe(take(1))\n      .subscribe({\n        next: () => this.deleteProductPhoto(photoName),\n        error: () => this.deleteProductPhoto(photoName),\n      });\n  }\n\n  private deleteProductPhoto(photoName: string): void {\n    const productPhotos = this.photoControl\n      ?.getRawValue()\n      .filter((imag: ProductImage) => imag.name !== photoName);\n    this.photoControl?.setValue(productPhotos);\n    this.files = productPhotos;\n    this.cdr.markForCheck();\n  }\n\n  public closeDialog(): void {\n    if (this.productForm.dirty) {\n      this.confirmService\n        .confirm(DELETE_CONFIRM_TEXT)\n        .subscribe((isConfirmed) => {\n          if (isConfirmed) {\n            this.dialogRef.close();\n          }\n        });\n    } else {\n      this.dialogRef.close();\n    }\n  }\n\n  public cancelUploadImage(canceledFile: UploadFile): void {\n    canceledFile.cancel && canceledFile.cancel();\n    this.files = this.files.filter((file) => file.name !== canceledFile.name);\n  }\n}\n","<div class=\"product-form-wrap\">\n  <div class=\"close-dialog\">\n    <button mat-icon-button aria-label=\"close dialog\" (click)=\"closeDialog()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </div>\n  <h2 mat-dialog-title class=\"dialog-title\">Product form</h2>\n  <div class=\"form-container\">\n    <form [formGroup]=\"productForm\" (submit)=\"saveProduct()\">\n      <div class=\"row\">\n        <div class=\"input-container\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Product name</mat-label>\n            <input\n              matInput\n              placeholder=\"Enter product name\"\n              required\n              formControlName=\"name\"\n            />\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Product price</mat-label>\n            <input\n              matInput\n              type=\"number\"\n              placeholder=\"Enter product price\"\n              required\n              formControlName=\"price\"\n            />\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Category</mat-label>\n            <mat-select formControlName=\"categoryId\">\n              <ng-container *ngFor=\"let category of categories$ | async\">\n                <mat-option [value]=\"category.id\">{{\n                  category.name\n                }}</mat-option>\n              </ng-container>\n            </mat-select>\n          </mat-form-field>\n        </div>\n\n        <div\n          class=\"drag-and-drop-area\"\n          appDragDropFileUpload\n          (fileDropped)=\"onFileDropped($event)\"\n        >\n          <input\n            type=\"file\"\n            #fileDropRef\n            id=\"fileDropRef\"\n            multiple\n            (change)=\"fileBrowseHandler($event)\"\n          />\n          <img src=\"assets/icons/drag-and-drop.svg\" alt=\"drag-and-drop\" />\n          <h3>Drag and drop file here</h3>\n          <h3>or</h3>\n          <label for=\"fileDropRef\">Browse for file</label>\n        </div>\n      </div>\n\n      <mat-form-field appearance=\"outline\" class=\"text-area\">\n        <mat-label>Textarea</mat-label>\n        <textarea matInput rows=\"10\" formControlName=\"description\"></textarea>\n      </mat-form-field>\n      <br />\n      <button\n        mat-button\n        color=\"primary\"\n        class=\"add-product-btn submit\"\n        [disabled]=\"(isLoading$ | async) || productForm.invalid\"\n      >\n        Submit\n      </button>\n    </form>\n\n    <div class=\"image-list\">\n      <app-upload-image-card\n        *ngFor=\"let file of files\"\n        [file]=\"file\"\n        (cancelUpload)=\"cancelUploadImage($event)\"\n        (deleteProduct)=\"onDeleteProductPhoto($event)\"\n      ></app-upload-image-card>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input, Output, EventEmitter } from '@angular/core';\nimport { UploadFile } from '../../models/upload-file.model';\n\n@Component({\n  selector: 'app-upload-image-card',\n  templateUrl: './upload-image-card.component.html',\n  styleUrls: ['./upload-image-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UploadImageCardComponent {\n  @Input() public file: UploadFile;\n\n  @Output() private deleteProduct: EventEmitter<string> = new EventEmitter();\n  @Output() private cancelUpload: EventEmitter<UploadFile> = new EventEmitter();\n\n  public onDeleteProductPhoto(productName: string): void {\n    this.deleteProduct.emit(productName)\n  }\n\n  public cancelUploadImage(file: UploadFile): void {\n    this.cancelUpload.emit(file);\n  }\n}\n","<div class=\"image\">\n  <div class=\"image__content\">\n      <img [src]=\"file.url ? file.url : 'assets/icons/no-file.svg'\" alt=\"file\" width=\"160\" height=\"160\" />\n    <div class=\"info\">\n      <h4 class=\"image__name\">\n        {{ file.name }}\n      </h4>\n      <p class=\"image__size\">\n        {{ file.size | fileFormat }}\n      </p>\n    </div>\n\n    <button\n      *ngIf=\"file.url; else cancel\"\n      mat-icon-button\n      aria-label=\"delete\"\n      class=\"image__delete-btn\"\n      (click)=\"onDeleteProductPhoto(file.name)\"\n    >\n      <mat-icon>delete</mat-icon>\n    </button>\n\n    <ng-template #cancel>\n      <button\n        mat-icon-button\n        aria-label=\"cancel\"\n        class=\"image__cancel-btn\"\n        (click)=\"cancelUploadImage(file)\"\n      >\n        <mat-icon>cancel</mat-icon>\n      </button>\n    </ng-template>\n  </div>\n\n  <app-progress\n    *ngIf=\"!file?.url\"\n    [progress]=\"file.progress$ | async\"\n  ></app-progress>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Category } from 'src/app/core/models';\n\n@Pipe({\n  name: 'getCategoryName'\n})\nexport class GetCategoryNamePipe implements PipeTransform {\n\n  transform(id: string, categories: Category[]): string {\n    return categories.find((category) => category.id === id)?.name || 'No category';\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnDestroy,\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { State } from 'src/app/core/decorators/ngrx-selector.decorator';\nimport { DestroyableDirective } from 'src/app/core/directives/destroyable.directive';\nimport { MatIcon } from 'src/app/core/enums/material-icon.enum';\nimport { MoreOptionAction } from 'src/app/core/enums/more-option-action.enum';\nimport { Category, Product } from 'src/app/core/models';\nimport { MoreOptions } from 'src/app/core/models/more-options.model';\nimport { ConfirmService } from 'src/app/core/services/confirm.service';\nimport { removeProduct } from 'src/app/core/store/actions/product.action';\nimport { selectCategories } from 'src/app/core/store/selectors/category.selectors';\nimport { selectProducts } from 'src/app/core/store/selectors/product.selectors';\nimport { AppState } from 'src/app/core/store/state/app.state';\nimport { DELETE_RECORD_TEXT } from 'src/app/shared/constants/messages';\nimport { AddProductFormComponent } from './components/add-product-form/add-product-form.component';\n\n@Component({\n  selector: 'app-product-admin',\n  templateUrl: './product-admin.component.html',\n  styleUrls: ['./product-admin.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductAdminComponent extends DestroyableDirective implements OnDestroy {\n  public readonly displayedColumns = [\n    'productName',\n    'category',\n    'price',\n    'options',\n  ];\n\n  public moreOptions: MoreOptions[] = [\n    {\n      icon: MatIcon.EDIT,\n      text: 'Update product',\n      action: MoreOptionAction.Update,\n    },\n    {\n      icon: MatIcon.DELETE,\n      text: 'Delete product',\n      action: MoreOptionAction.Delete,\n    },\n  ];\n\n  @State(selectProducts) public readonly products$: Observable<Product[]>;\n  @State(selectCategories) public readonly categories$: Observable<Category[]>;\n\n  constructor(\n    private readonly store: Store<AppState>,\n    private readonly dialog: MatDialog,\n    private readonly confirmService: ConfirmService\n  ) { super() }\n\n  public onAddProduct(): void {\n    this.openProductForm();\n  }\n\n  public removeProduct(product: Product): void {\n    this.confirmService.confirm(DELETE_RECORD_TEXT).subscribe((isConfirmed) => {\n      if (isConfirmed) {\n        this.store.dispatch(\n          removeProduct({ productId: product.id!, photos: product.photo })\n        );\n      }\n    });\n  }\n\n  public updateProduct(product: Product): void {\n    this.openProductForm(product);\n  }\n\n  private openProductForm(product?: Product): void {\n    this.dialog.open(AddProductFormComponent, {\n      data: product,\n      maxWidth: '100vw',\n      height: '100%',\n      width: '100%',\n    });\n  }\n}\n","<div class=\"content-wrapper\">\n  <div class=\"add-product\">\n    <button mat-button class=\"add-product-btn\" (click)=\"onAddProduct()\">\n      Add product\n    </button>\n  </div>\n  <ng-container *ngIf=\"products$ | async as products\">\n    <div class=\"table-wrap\" *ngIf=\"products.length > 0; else noProducts\">\n      <table mat-table [dataSource]=\"products\" aria-describedby=\"product-table\">\n        <!-- Product Name Column -->\n        <ng-container matColumnDef=\"productName\">\n          <th mat-header-cell *matHeaderCellDef>Product Name</th>\n          <td mat-cell *matCellDef=\"let product\">{{ product.name }}</td>\n        </ng-container>\n\n        <!-- Product Category Column -->\n        <ng-container matColumnDef=\"category\">\n          <th mat-header-cell *matHeaderCellDef>Product Category</th>\n          <td mat-cell *matCellDef=\"let product\">\n            {{ product.categoryId | getCategoryName: (categories$ | async) ?? []}}\n          </td>\n        </ng-container>\n\n        <!-- Pruduct Price Column -->\n        <ng-container matColumnDef=\"price\">\n          <th mat-header-cell *matHeaderCellDef>Price</th>\n          <td mat-cell *matCellDef=\"let product\">{{ product.price }}</td>\n        </ng-container>\n\n        <!-- More Option Column -->\n        <ng-container matColumnDef=\"options\">\n          <th mat-header-cell *matHeaderCellDef class=\"more-options\">\n            More options\n          </th>\n          <td mat-cell *matCellDef=\"let product\" class=\"more-options\">\n            <app-more-options\n              [moreOptions]=\"moreOptions\"\n              (update)=\"updateProduct(product)\"\n              (delete)=\"removeProduct(product)\"\n            ></app-more-options>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr\n          mat-row\n          *matRowDef=\"let row; columns: displayedColumns\"\n          class=\"element-row\"\n        ></tr>\n      </table>\n    </div>\n  </ng-container>\n  <ng-template #noProducts>\n    <p>Product list is empty</p>\n  </ng-template>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { ProductAdminComponent } from './product-admin.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { AddProductFormComponent } from './components/add-product-form/add-product-form.component';\nimport { GetCategoryNamePipe } from './pipes/get-category-name.pipe';\nimport { UploadImageCardComponent } from './components/upload-image-card/upload-image-card.component';\n\n@NgModule({\n  declarations: [\n    ProductAdminComponent,\n    AddProductFormComponent,\n    GetCategoryNamePipe,\n    UploadImageCardComponent,\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([{path: '', component: ProductAdminComponent}])\n  ],\n})\nexport class ProductAdminModule { }\n","export enum MessageTypes {\n  WARNING = 'Warning',\n  SUCCESS = 'Success',\n  ERROR = 'Error',\n  FORBIDDEN = 'Forbidden',\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}