{"version":3,"file":"main.e3cc8826013a9bc1.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/directives/destroyable.directive.ts","./src/app/core/firebase/firebase.module.ts","./src/app/core/injector/injector.module.ts","./src/app/core/interceptors/app.interceptor.ts","./src/app/core/models/cart.model.ts","./src/app/core/models/category.model.ts","./src/app/core/models/chat.model.ts","./src/app/core/models/index.ts","./src/app/core/models/order.model.ts","./src/app/core/models/product.model.ts","./src/app/core/models/user.model.ts","./src/app/core/services/auth.service.ts","./src/app/core/services/snackbar.service.ts","./src/app/core/services/upload-file.service.ts","./src/app/core/services/user.service.ts","./src/app/core/store/actions/admin.actions.ts","./src/app/core/store/actions/auth.actions.ts","./src/app/core/store/actions/category.actions.ts","./src/app/core/store/actions/common.actions.ts","./src/app/core/store/actions/product.action.ts","./src/app/core/store/actions/user.actions.ts","./src/app/core/store/effects/admin.effects.ts","./src/app/core/store/effects/auth.effects.ts","./src/app/core/store/effects/category.effects.ts","./src/app/core/store/effects/product.effects.ts","./src/app/core/store/effects/user.effects.ts","./src/app/core/store/ngrx.module.ts","./src/app/core/store/reducers/admin.reducer.ts","./src/app/core/store/reducers/app.reducer.ts","./src/app/core/store/reducers/auth.reducer.ts","./src/app/core/store/reducers/category.reducer.ts","./src/app/core/store/reducers/product.reducer.ts","./src/app/core/store/reducers/user.reducer.ts","./src/app/core/store/selectors/auth.selector.ts","./src/app/core/store/state/admin.state.ts","./src/app/core/store/state/app.state.ts","./src/app/core/store/state/auth.state.ts","./src/app/core/store/state/category.state.ts","./src/app/core/store/state/product.state.ts","./src/app/core/store/state/user.state.ts","./src/app/features/admin/services/category.service.ts","./src/app/features/admin/services/product.service.ts","./src/app/features/client/services/cart.service.ts","./src/environments/environment.custom.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () =>\n      import('./static/layout/layout.module').then((mod) => mod.LayoutModule),\n  },\n\n  {\n    path: 'auth',\n    loadChildren: () =>\n      import('./static/auth/auth.module').then((mod) => mod.AuthModule),\n  },\n  { path: '**', redirectTo: '/' },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { ExtraModuleInjector } from './core/injector/injector.module';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {\n  constructor(private moduleInjector: ExtraModuleInjector) {}\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    CoreModule,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { AppInterceptor } from './interceptors/app.interceptor';\nimport { NgRxModule } from './store/ngrx.module';\nimport { FirebaseModule } from './firebase/firebase.module';\nimport { CategoryService } from '../features/admin/services/category.service';\nimport { ProductService } from '../features/admin/services/product.service';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { DestroyableDirective } from './directives/destroyable.directive';\nimport { CartService } from '../features/client/services/cart.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    NgRxModule,\n    FirebaseModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AppInterceptor, multi: true },\n    CategoryService,\n    ProductService,\n    CartService,\n  ],\n  declarations: [\n    DestroyableDirective\n  ],\n})\nexport class CoreModule {}\n","import { Directive, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Directive({\n  selector: '[appDestroyable]'\n})\nexport class DestroyableDirective implements OnDestroy{\n\n  protected readonly destroy$: Subject<void> = new Subject();\n\n  public ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { AngularFireModule } from '@angular/fire/compat';\nimport { AngularFireAuthModule } from '@angular/fire/compat/auth';\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\nimport { environment } from 'src/environments/environment';\n\nconst firebaseConfig = {\n  apiKey: environment.FIREBASE_API_KEY,\n  authDomain: environment.FIREBASE_AUTH_DOMAIN,\n  projectId: environment.FIREBASE_PROTECTED_ID,\n  storageBucket: environment.FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: environment.FIREBASE_MESSAGING_SENDER_ID,\n  appId: environment.FIREBASE_APP_ID,\n};\n\n@NgModule({\n  declarations: [],\n  imports: [\n    AngularFireModule.initializeApp(firebaseConfig),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n  ],\n})\nexport class FirebaseModule {}\n","import { Injectable, Injector } from '@angular/core';\n\n@Injectable()\nexport class ExtraModuleInjector {\n  private static injector: Injector;\n\n  public static get(token: any) {\n    if (ExtraModuleInjector.injector) {\n      return ExtraModuleInjector.injector.get(token);\n    }\n  }\n\n  constructor(public injector: Injector) {\n    ExtraModuleInjector.injector = injector;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AppInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request);\n  }\n}\n","import firebase from 'firebase/compat';\nimport { Product } from './product.model';\n\nexport interface Cart {\n  clientId?: string;\n  products: Product[] | string[] | firebase.firestore.FieldValue;\n}\n","export interface Category {\n  id?: string;\n  name: string;\n  createdAt: number;\n}\n","export interface SupportChat {\n  id: string;\n  clientId: string;\n  messages: SupportMessage[];\n  createdAt: number;\n}\n\nexport interface SupportMessage {\n  userId: string;\n  text: string;\n  createdAt: number;\n}\n","export * from './cart.model';\nexport * from './category.model';\nexport * from './chat.model';\nexport * from './order.model';\nexport * from './product.model';\nexport * from './user.model';\n","import { OrderStatus } from \"../enums/order-status.enum\";\n\nexport interface Order {\n  id: string;\n  orderNumber: number;\n  clientId: string;\n  products: string[];\n  total: number;\n  status: OrderStatus;\n  createdAt: number;\n}\n","import { ProductImage } from \"src/app/features/admin/product/models/product-image.model\";\n\nexport interface Product {\n  id?: string;\n  name: string;\n  description: string;\n  price: number;\n  photo: ProductImage[];\n  categoryId: string;\n  createdAt: number;\n}\n","import firebase from 'firebase/compat';\nimport { UserRole } from '../enums/user-role.enum';\nimport { Order } from './order.model';\n\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  role: UserRole | undefined;\n  createdAt: number;\n  orderHistory?: Order[];\n}\n\nexport class User implements User {\n  id: string;\n  name: string;\n  email: string;\n  role: UserRole | undefined;\n  createdAt: number;\n\n  constructor(dto: firebase.User | null, role?: UserRole) {\n    this.id = dto?.uid || '';\n    this.name = dto?.displayName || '';\n    this.email = dto?.email || '';\n    this.role = role;\n    this.createdAt = Date.parse(dto?.metadata.creationTime || '');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport { Store } from '@ngrx/store';\n\nimport firebase from 'firebase/compat';\nimport { filter, OperatorFunction, Subscription, throttleTime } from 'rxjs';\n\nimport { User } from '../models';\nimport { IAuthCredentials } from '../models/auth.model';\nimport { updateUser } from '../store/actions/auth.actions';\nimport { AppState } from '../store/state/app.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private subscription$ = new Subscription();\n  constructor(\n    private readonly afAuth: AngularFireAuth,\n    private readonly firestore: AngularFirestore,\n    private readonly store: Store<AppState>,\n  ) {\n    this.afAuth.authState.pipe(throttleTime(50)).subscribe((user) => {\n      if (user) {\n        this.saveUser(user);\n      } else {\n        this.subscription$.unsubscribe();\n        localStorage.removeItem('user');\n      }\n    });\n  }\n\n  private saveUser(userModel: firebase.User): void {\n    this.subscription$ = this.firestore.collection('/users').doc(userModel.uid).valueChanges()\n      .pipe(filter((user: User) => user?.role !== undefined) as OperatorFunction<User | unknown, User>)\n      .subscribe((data: User) => {\n        const user = new User(userModel, data.role)\n        this.store.dispatch(updateUser({ user }));\n        localStorage.setItem('user', JSON.stringify(user));\n      });\n  }\n\n  public login({ email, password }: IAuthCredentials): Promise<firebase.auth.UserCredential> {\n    return this.afAuth.signInWithEmailAndPassword(email, password);\n  }\n\n  public async registrate({ email, password, username }: IAuthCredentials): Promise<firebase.User | null> {\n    await this.afAuth\n      .createUserWithEmailAndPassword(email, password)\n      .then((d) => d.user?.updateProfile({ displayName: username }));\n\n    const user = await this.afAuth.currentUser;\n    return user;\n  }\n\n  public logout(): Promise<void> {\n    return this.afAuth.signOut();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackBarService {\n  constructor(private snackBar: MatSnackBar) {}\n\n  openSnackBar(text: string, action: string, duration: number = 2500) {\n    this.snackBar.open(text, action, {\n      duration: duration,\n      verticalPosition: 'top',\n      panelClass: ['color-snackbar'],\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireStorage, AngularFireUploadTask } from '@angular/fire/compat/storage';\nimport { finalize, Observable, Subject } from 'rxjs';\nimport { ProductImage } from 'src/app/features/admin/product/models/product-image.model';\n\n@Injectable({ providedIn: 'root' })\nexport class UploadFileService {\n  private basePath = '/uploads';\n\n  public uploadedFiles$: Subject<ProductImage> = new Subject<ProductImage>();\n\n  constructor(private readonly storage: AngularFireStorage) {}\n\n  public pushFileToStorage(file: File): AngularFireUploadTask {\n    const filePath = `${this.basePath}/${file.name}`;\n    const storageRef = this.storage.ref(filePath);\n    const uploadTask = this.storage.upload(filePath, file);\n    uploadTask\n      .snapshotChanges()\n      .pipe(\n        finalize(() => {\n          storageRef.getDownloadURL().subscribe((downloadUrl) => {\n            const fileUploaded = { url: downloadUrl, name: file.name, size: file.size };\n            this.uploadedFiles$.next(fileUploaded);\n          });\n        })\n      )\n      .subscribe();\n    return uploadTask;\n  }\n\n  public deleteFile(fileName: string): Observable<void> {\n    const storageRef = this.storage.ref(this.basePath);\n    return storageRef.child(fileName).delete();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection,\n} from '@angular/fire/compat/firestore';\nimport { Cart, User } from '../models';\nimport { SnackBarService } from './snackbar.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  usersRef: AngularFirestoreCollection<User>;\n  cartRef: AngularFirestoreCollection<Cart>;\n\n  constructor(\n    private firestore: AngularFirestore,\n    private snackBar: SnackBarService,\n    ) {\n    this.usersRef = this.firestore.collection('/users');\n    this.cartRef = this.firestore.collection('/cart');\n  }\n\n  public getAllUsers(): AngularFirestoreCollection<User> {\n    return this.usersRef;\n  }\n\n  public async createUser(user: User): Promise<void> {\n    try {\n      await this.cartRef.doc(user.id).set({ products: []});\n      await this.usersRef.doc(user.id).set({ ...user, role: 1 });\n    } catch (err: any) {\n      this.snackBar.openSnackBar('Something went wrong', 'Error');\n    }\n  }\n\n  public updateUser(id: string, data: any): Promise<void> {\n    return this.usersRef.doc(id).update(data);\n  }\n\n  public deleteUser(id: string): Promise<void> {\n    return this.usersRef.doc(id).delete();\n  }\n}\n","import { createAction, props } from \"@ngrx/store\";\nimport { FirebaseError } from \"firebase/app\";\nimport { User } from \"../../models\";\n\nexport enum AdminActions {\n  GET_ADMIN = '[Admin] Get Users',\n  GET_ADMIN_SUCCESS = '[Admin] Get Users Success',\n  GET_ADMIN_FAILURE = '[Admin] Get Users Failure',\n}\n\nexport const getUsers = createAction(\n  AdminActions.GET_ADMIN\n);\n\nexport const getUsersSuccess = createAction(\n  AdminActions.GET_ADMIN_SUCCESS,\n  props<{ users: User[] }>()\n);\n\nexport const getUsersFailure = createAction(\n  AdminActions.GET_ADMIN_FAILURE,\n  props<{ error: FirebaseError }>()\n);\n","import { createAction, props } from '@ngrx/store';\nimport { User } from '../../models';\nimport firebase from 'firebase/compat';\n\nexport enum AuthActions {\n  LOGOUT = '[Auth] Logout',\n  LOGOUT_SUCCESS = '[Auth] Logout Success',\n  LOGOUT_FAILURE = '[Auth] Logout Failure',\n\n  LOGIN = '[Auth] Login',\n  LOGIN_SUCCESS = '[Auth] Login Success',\n  LOGIN_FAILURE = '[Auth] Login Failure',\n\n  REGISTRATION = '[Auth] Registration',\n  REGISTRATION_SUCCESS = '[Auth] Registration Success',\n  REGISTRATION_FAILURE = '[Auth] Registration Failure',\n\n  UPDATE_USER_DATA = '[Auth] Update User Data',\n\n  AUTH_IS_LOADING = '[Auth] Auth Is Loading',\n}\n\n//login\nexport const login = createAction(\n  AuthActions.LOGIN,\n  props<{ email: string; password: string }>()\n);\n\nexport const loginSuccess = createAction(\n  AuthActions.LOGIN_SUCCESS,\n  props<{ user: User }>()\n);\n\nexport const loginFailure = createAction(\n  AuthActions.LOGIN_FAILURE,\n  props<{ error: firebase.FirebaseError }>()\n);\n\n//registrate\nexport const registrate = createAction(\n  AuthActions.REGISTRATION,\n  props<{ username: string; email: string; password: string }>()\n);\n\nexport const registrateSuccess = createAction(\n  AuthActions.REGISTRATION_SUCCESS,\n  props<{ user: User }>()\n);\n\nexport const registrateFailure = createAction(\n  AuthActions.REGISTRATION_FAILURE,\n  props<{ error: firebase.FirebaseError }>()\n);\n\n//logout\nexport const logout = createAction(\n  AuthActions.LOGOUT\n);\n\nexport const logoutSuccess = createAction(\n  AuthActions.LOGOUT_SUCCESS\n);\n\nexport const logoutFailure = createAction(\n  AuthActions.LOGOUT_FAILURE,\n  props<{ error: firebase.FirebaseError }>()\n);\n\n//update\nexport const updateUser = createAction(\n  AuthActions.UPDATE_USER_DATA,\n  props<{ user: User }>()\n);\n\n//is loading\nexport const authIsLoading =createAction(\n  AuthActions.AUTH_IS_LOADING,\n  props<{isLoading: boolean}>()\n);\n","import { createAction, props } from \"@ngrx/store\";\nimport { FirebaseError } from \"firebase/app\";\n\nimport { Category } from 'src/app/core/models'\n\nexport enum CategoryActions {\n  GET_CATEGORIES = '[Category] Get Categories',\n  GET_CATEGORIES_SUCCESS = '[Category] Get Categories Success',\n  GET_CATEGORIES_FAILURE = '[Category] Get Categories Failure',\n\n  ADD_CATEGORY = '[Category] Add Category',\n  ADD_CATEGORY_SUCCESS = '[Category] Add Category Success',\n  ADD_CATEGORY_FAILURE = '[Category] Add Category Failure',\n\n  UPDATE_CATEGORY = '[Category] Update Category',\n  UPDATE_CATEGORY_SUCCESS = '[Category] Update Category Success',\n  UPDATE_CATEGORY_FAILURE = '[Category] Update Category Failure',\n\n  REMOVE_CATEGORY = '[Category] Remove Category',\n  REMOVE_CATEGORY_SUCCESS = '[Category] Remove Category Success',\n  REMOVE_CATEGORY_FAILURE = '[Category] Remove Category Failure',\n\n  CATEGORY_IS_LOADING = '[Category] Category Is Loading',\n}\n\n//get categories\nexport const getCategories = createAction(\n  CategoryActions.GET_CATEGORIES,\n);\n\nexport const getCategoriesSuccess = createAction(\n  CategoryActions.GET_CATEGORIES_SUCCESS,\n  props<{ categories: Category[] }>()\n);\n\nexport const getCategoriesFailure = createAction(\n  CategoryActions.GET_CATEGORIES_FAILURE,\n  props<{ error: FirebaseError }>()\n);\n\n//add category\nexport const addCategory = createAction(\n  CategoryActions.ADD_CATEGORY,\n  props<{ name: string }>()\n);\n\nexport const addCategorySuccess = createAction(\n  CategoryActions.ADD_CATEGORY_SUCCESS,\n  props<{ category: Category }>()\n);\n\nexport const addCategoryFailure = createAction(\n  CategoryActions.ADD_CATEGORY_FAILURE,\n  props<{ error: FirebaseError }>()\n);\n\n//update category\nexport const updateCategory = createAction(\n  CategoryActions.UPDATE_CATEGORY,\n  props<{ categoryName: string, categoryId: string }>()\n);\n\nexport const updateCategorySuccess = createAction(\n  CategoryActions.UPDATE_CATEGORY_SUCCESS,\n  props<{ categoryName: string, categoryId: string }>()\n);\n\nexport const updateCategoryFailure = createAction(\n  CategoryActions.UPDATE_CATEGORY_FAILURE,\n  props<{ error: FirebaseError }>()\n);\n\n\n//remove category\nexport const removeCategory = createAction(\n  CategoryActions.REMOVE_CATEGORY,\n  props<{ categoryId: string }>()\n);\n\nexport const removeCategorySuccess = createAction(\n  CategoryActions.REMOVE_CATEGORY_SUCCESS,\n  props<{ categoryId: string }>()\n);\n\nexport const removeCategoryFailure = createAction(\n  CategoryActions.REMOVE_CATEGORY_FAILURE,\n  props<{ error: FirebaseError }>()\n);\n\n//loading category\nexport const categoryIsLoading = createAction(\n  CategoryActions.CATEGORY_IS_LOADING,\n  props<{ isLoading: boolean }>()\n);\n","import { createAction, props } from \"@ngrx/store\";\n\nexport enum CommonActions {\n  IS_FETCHING = '[Common] Is Fetching',\n}\n\nexport const isFetching = createAction(\n  CommonActions.IS_FETCHING,\n  props<{ isFetching: boolean }>()\n);\n","import { createAction, props } from \"@ngrx/store\";\nimport { FirebaseError } from \"firebase/app\";\nimport { ProductImage } from \"src/app/features/admin/product/models/product-image.model\";\nimport { Product } from \"../../models\";\n\nexport enum ProductActions {\n  GET_PRODUCTS = '[Product] Get Product',\n  GET_PRODUCTS_SUCCESS = '[Product] Get Product Success',\n  GET_PRODUCTS_FAILURE = '[Product] Get Product Failure',\n\n  GET_PRODUCTS_BY_CATEGORY = '[Product] Get Products By Category',\n  GET_PRODUCTS_BY_CATEGORY_SUCCESS = '[Product] Get Products By CategorySuccess',\n\n  ADD_PRODUCT = '[Product] Add Product',\n  ADD_PRODUCT_SUCCESS = '[Product] Add Product Success',\n  ADD_PRODUCT_FAILURE = '[Product] Add Product Failure',\n\n  UPDATE_PRODUCT = '[Product] Update Product',\n  UPDATE_PRODUCT_SUCCESS = '[Product] Update Product Success',\n  UPDATE_PRODUCT_FAILURE = '[Product] Update Product Failure',\n\n  REMOVE_PRODUCT = '[Product] Remove Product',\n  REMOVE_PRODUCT_SUCCESS = '[Product] Remove Product Success',\n  REMOVE_PRODUCT_FAILURE = '[Product] Remove Product Failure',\n\n  PRODUCT_IS_LOADING = '[Product] Product Is Loading',\n}\n\n// get products\nexport const getProducts = createAction(\n  ProductActions.GET_PRODUCTS\n);\n\nexport const getProductsSuccess = createAction(\n  ProductActions.GET_PRODUCTS_SUCCESS,\n  props<{products: Product[]}>()\n);\n\nexport const getProductsFailure = createAction(\n  ProductActions.GET_PRODUCTS_FAILURE,\n  props<{error: FirebaseError}>()\n);\n\nexport const getProductsByCategory = createAction(\n  ProductActions.GET_PRODUCTS_BY_CATEGORY,\n  props<{id: string}>()\n);\n\nexport const getProductsByCategorySuccess = createAction(\n  ProductActions.GET_PRODUCTS_BY_CATEGORY_SUCCESS,\n  props<{products: Product[]}>()\n);\n\n//add product\nexport const addProduct = createAction(\n  ProductActions.ADD_PRODUCT,\n  props<{product: Product}>()\n);\n\nexport const addProductSuccess = createAction(\n  ProductActions.ADD_PRODUCT_SUCCESS,\n  props<{product: Product}>()\n);\n\nexport const addProductFailure = createAction(\n  ProductActions.ADD_PRODUCT_FAILURE,\n  props<{error: FirebaseError}>()\n);\n\n//update product\nexport const updateProduct = createAction(\n  ProductActions.UPDATE_PRODUCT,\n  props<{product: Product}>()\n);\n\nexport const updateProductSuccess = createAction(\n  ProductActions.UPDATE_PRODUCT_SUCCESS,\n  props<{product: Product}>()\n);\n\nexport const updateProductFailure = createAction(\n  ProductActions.UPDATE_PRODUCT_FAILURE,\n  props<{error: FirebaseError}>()\n);\n\n//remove product\nexport const removeProduct = createAction(\n  ProductActions.REMOVE_PRODUCT,\n  props<{productId: string, photos: ProductImage[]}>()\n);\n\nexport const removeProductSuccess = createAction(\n  ProductActions.REMOVE_PRODUCT_SUCCESS,\n  props<{productId: string}>()\n);\n\nexport const removeProductFailure = createAction(\n  ProductActions.REMOVE_PRODUCT_FAILURE,\n  props<{error: FirebaseError}>()\n);\n\n// product is loading\nexport const productIsLoading = createAction(\n  ProductActions.PRODUCT_IS_LOADING,\n  props<{isLoading: boolean}>()\n);\n","import { createAction, props } from \"@ngrx/store\";\nimport { Cart, Product } from \"../../models\";\n\nexport enum UserActions {\n    ADD_PRODUCT_TO_CART = '[User] Add Product To Cart',\n    REMOVE_PRODUCT_FROM_CART = '[User] Remove Product From Cart',\n    GET_USER_CART = '[User] Get User Cart',\n    GET_USER_CART_SUCCESS = '[User] Get User Cart Success',\n}\n\nexport const addProductToCart = createAction(\n    UserActions.ADD_PRODUCT_TO_CART,\n    props<{ productId: string }>()\n);\n\nexport const removeProductFromCart = createAction(\n    UserActions.REMOVE_PRODUCT_FROM_CART,\n    props<{ productId: string }>()\n)\n\nexport const getUserCart = createAction(\n    UserActions.GET_USER_CART,\n);\n\nexport const getUserCartSuccess = createAction(\n    UserActions.GET_USER_CART_SUCCESS,\n    props<{ cart: Cart }>()\n);\n","import { Injectable } from '@angular/core';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { FirebaseError } from 'firebase/app';\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\n\nimport { User } from '../../models';\nimport { UserService } from '../../services/user.service';\nimport * as AdminActions from '../actions/admin.actions';\nimport { AppState } from '../state/app.state';\nimport { isFetching } from '../actions/common.actions';\n\n@Injectable()\nexport class AdminEffects {\n  constructor(\n    private readonly userService: UserService,\n    private readonly actions$: Actions,\n    private readonly store: Store<AppState>,\n  ) { }\n\n  public users$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(AdminActions.getUsers),\n      tap(() => {\n        this.store.dispatch(\n          isFetching({ isFetching: true })\n        )\n      }),\n      switchMap(() => {\n        return this.userService.getAllUsers().valueChanges()\n          .pipe(\n            tap(() => {\n              this.store.dispatch(\n                isFetching({ isFetching: false })\n              )\n            }\n            ),\n            map((users: User[]) => AdminActions.getUsersSuccess({ users })),\n            catchError((error: FirebaseError) => {\n              this.store.dispatch(isFetching({ isFetching: false }));\n              return of(AdminActions.getUsersFailure({ error }));\n            })\n          );\n      })\n    );\n  });\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { catchError, from, map, of, switchMap } from 'rxjs';\nimport { User } from '../../models';\nimport { AuthService } from '../../services/auth.service';\nimport * as AuthActions from '../actions/auth.actions';\nimport { AppState } from '../state/app.state';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private authService: AuthService,\n    private actions$: Actions,\n    private store: Store<AppState>,\n    private router: Router,\n  ) {}\n\n  login$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(AuthActions.login),\n      switchMap(({email, password}) => {\n        this.store.dispatch(AuthActions.authIsLoading({isLoading: true}));\n        return from(this.authService.login({email, password})).pipe(\n          map((data) => {\n            const userDto = data?.user;\n            this.store.dispatch(AuthActions.authIsLoading({isLoading: false}));\n            this.router.navigateByUrl('/');\n            return AuthActions.loginSuccess({\n              user: new User(userDto)\n            });\n          }),\n          catchError((error) => {\n            this.store.dispatch(AuthActions.authIsLoading({isLoading: false}));\n            return of(AuthActions.loginFailure({ error }))})\n        );\n      })\n    );\n  });\n\n  registrate$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(AuthActions.registrate),\n      switchMap((action) => {\n        const {username, email, password} = action;\n        this.store.dispatch(AuthActions.authIsLoading({isLoading: true}));\n        return from(this.authService.registrate({username, email, password})).pipe(\n          map((user) => {\n            this.store.dispatch(AuthActions.authIsLoading({isLoading: false}));\n            this.router.navigateByUrl('/');\n            return AuthActions.registrateSuccess({user: new User(user)})}),\n          catchError((error) => {\n            this.store.dispatch(AuthActions.authIsLoading({isLoading: false}));\n            return of(AuthActions.registrateFailure({ error }))})\n        );\n      })\n    );\n  });\n\n  logout$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(AuthActions.logout),\n      switchMap(() => {\n        this.store.dispatch(AuthActions.authIsLoading({ isLoading: true }));\n        return from(this.authService.logout()).pipe(\n          map(() => {\n            this.store.dispatch(AuthActions.authIsLoading({ isLoading: false }));\n            this.router.navigateByUrl('/');\n            return AuthActions.logoutSuccess();\n          }),\n          catchError((error) => {\n            this.store.dispatch(AuthActions.authIsLoading({ isLoading: false }));\n            return of(AuthActions.logoutFailure({ error }))})\n        );\n      })\n    );\n  });\n}\n","import { Injectable } from '@angular/core';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { FirebaseError } from 'firebase/app';\nimport { catchError, filter, from, map, of, OperatorFunction, switchMap, take, tap } from 'rxjs';\n\nimport { CategoryService } from 'src/app/features/admin/services/category.service';\nimport { Category } from '../../models';\nimport {\n  addCategory,\n  addCategoryFailure,\n  addCategorySuccess,\n  categoryIsLoading,\n  getCategories,\n  getCategoriesFailure,\n  getCategoriesSuccess,\n  removeCategory,\n  removeCategoryFailure,\n  removeCategorySuccess,\n  updateCategory,\n  updateCategoryFailure,\n  updateCategorySuccess,\n} from '../actions/category.actions';\nimport { AppState } from '../state/app.state';\n\n@Injectable()\nexport class CategoryEffects {\n  constructor(\n    private readonly store: Store<AppState>,\n    private readonly actions$: Actions,\n    private readonly categoryService: CategoryService\n  ) { }\n\n  public getCategories$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(getCategories),\n      tap(() => this.store.dispatch(categoryIsLoading({ isLoading: true }))),\n      switchMap(() =>\n        this.categoryService.getCategories().snapshotChanges().pipe(\n          take(1),\n          map((changes) => changes.map((c) => ({ id: c.payload.doc.id, ...c.payload.doc.data() }))),\n          map((categories: Category[]) => getCategoriesSuccess({ categories })),\n          tap(() => this.store.dispatch(categoryIsLoading({ isLoading: false }))),\n          catchError((error: FirebaseError) => {\n            this.store.dispatch(categoryIsLoading({ isLoading: false }));\n            return of(getCategoriesFailure({ error }));\n          })\n        )\n      )\n    );\n  });\n\n  public addCategories$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(addCategory),\n      tap(() => this.store.dispatch(categoryIsLoading({ isLoading: true }))),\n      switchMap(({ name }) => from(this.categoryService.addCategory(name)).pipe(\n        filter((data: Category) => typeof data !== 'undefined') as OperatorFunction<Category | undefined, Category>,\n        map((category: Category) => {\n          this.store.dispatch(categoryIsLoading({ isLoading: false }));\n          return addCategorySuccess({ category });\n        }),\n        catchError((error) => {\n          this.store.dispatch(categoryIsLoading({ isLoading: false }));\n          return of(addCategoryFailure({ error }));\n        })\n      ))\n    );\n  });\n\n  public removeCategory$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(removeCategory),\n      tap(() => this.store.dispatch(categoryIsLoading({ isLoading: true }))),\n      switchMap(({ categoryId }) => from(this.categoryService.removeCategory(categoryId)).pipe(\n        map(() => {\n          this.store.dispatch(categoryIsLoading({ isLoading: false }));\n          return removeCategorySuccess({ categoryId });\n        }),\n        catchError((error) => {\n          this.store.dispatch(categoryIsLoading({ isLoading: false }))\n          return of(removeCategoryFailure({ error }))\n        })\n      ))\n    );\n  });\n\n  public updateCategory$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(updateCategory),\n      tap(() => this.store.dispatch(categoryIsLoading({ isLoading: true }))),\n      switchMap(({ categoryName, categoryId }) => from(this.categoryService.updateCategory(categoryName, categoryId)).pipe(\n        map(() => {\n          this.store.dispatch(categoryIsLoading({ isLoading: false }))\n          return updateCategorySuccess({ categoryName, categoryId })\n        }),\n        catchError((error) => {\n          this.store.dispatch(categoryIsLoading({ isLoading: false }))\n          return of(updateCategoryFailure({ error }))\n        })\n      ))\n    )\n  })\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { ProductService } from 'src/app/features/admin/services/product.service';\nimport { AppState } from '../state/app.state';\nimport * as ProductActions from '../actions/product.action';\nimport { catchError, from, map, of, switchMap, take, tap } from 'rxjs';\nimport { Product } from '../../models';\nimport { FirebaseError } from 'firebase/app';\nimport { UploadFileService } from '../../services/upload-file.service';\n\n@Injectable()\nexport class ProductEffects {\n  constructor(\n    private readonly store: Store<AppState>,\n    private readonly actions$: Actions,\n    private readonly productService: ProductService,\n    private readonly uploadFileService: UploadFileService\n  ) { }\n\n  public getProducts$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(ProductActions.getProducts),\n      tap(() =>\n        this.store.dispatch(\n          ProductActions.productIsLoading({ isLoading: true })\n        )\n      ),\n      switchMap(() =>\n        this.productService\n          .getProducts()\n          .snapshotChanges()\n          .pipe(\n            take(1),\n            map((changes) =>\n              changes.map((c) => ({\n                id: c.payload.doc.id,\n                ...c.payload.doc.data(),\n              }))\n            ),\n            map((products: Product[]) =>\n              ProductActions.getProductsSuccess({ products })\n            ),\n            tap(() =>\n              this.store.dispatch(\n                ProductActions.productIsLoading({ isLoading: false })\n              )\n            ),\n            catchError((error: FirebaseError) => {\n              this.store.dispatch(\n                ProductActions.productIsLoading({ isLoading: false })\n              );\n              return of(ProductActions.getProductsFailure({ error }));\n            })\n          )\n      )\n    );\n  });\n\n  public addProduct$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(ProductActions.addProduct),\n      tap(() =>\n        this.store.dispatch(\n          ProductActions.productIsLoading({ isLoading: true })\n        )\n      ),\n      switchMap(({ product }) =>\n        from(this.productService.addProduct(product)).pipe(\n          map((product: Product) => {\n            this.store.dispatch(\n              ProductActions.productIsLoading({ isLoading: false })\n            );\n            return ProductActions.addProductSuccess({ product });\n          }),\n          catchError((error) => {\n            this.store.dispatch(\n              ProductActions.productIsLoading({ isLoading: false })\n            );\n            return of(ProductActions.addProductFailure({ error }));\n          })\n        )\n      )\n    );\n  });\n\n  public updateProduct$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(ProductActions.updateProduct),\n      tap(() =>\n        this.store.dispatch(\n          ProductActions.productIsLoading({ isLoading: true })\n        )\n      ),\n      switchMap(({ product }) =>\n        from(this.productService.updateProduct(product)).pipe(\n          map(() => {\n            this.store.dispatch(\n              ProductActions.productIsLoading({ isLoading: false })\n            );\n            return ProductActions.updateProductSuccess({ product });\n          }),\n          catchError((error) => {\n            this.store.dispatch(\n              ProductActions.productIsLoading({ isLoading: false })\n            );\n            return of(ProductActions.updateProductFailure({ error }));\n          })\n        )\n      )\n    );\n  });\n\n  public removeProduct$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(ProductActions.removeProduct),\n      tap(() => {\n        this.store.dispatch(\n          ProductActions.productIsLoading({ isLoading: true })\n        )\n      }\n      ),\n      switchMap(({ productId, photos }) => {\n        photos && photos.forEach((photo) => this.uploadFileService.deleteFile(photo.name));\n        return from(this.productService.removeProduct(productId)).pipe(\n          map(() => {\n            this.store.dispatch(\n              ProductActions.productIsLoading({ isLoading: false })\n            );\n            return ProductActions.removeProductSuccess({ productId });\n          }),\n          catchError((error) => {\n            this.store.dispatch(\n              ProductActions.productIsLoading({ isLoading: false })\n            );\n            return of(ProductActions.removeProductFailure({ error }));\n          })\n        );\n      })\n    );\n  });\n\n  public getProductsByCategory$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(ProductActions.getProductsByCategory),\n      tap(() => { this.store.dispatch(ProductActions.productIsLoading({ isLoading: true })) }\n      ),\n      switchMap(({ id }) => {\n        return this.productService.getProductsByCategory(id).pipe(\n          tap(() => {\n            this.store.dispatch(\n              ProductActions.productIsLoading({ isLoading: false })\n            );\n          }),\n          map((products: Product[]) => {\n            return ProductActions.getProductsByCategorySuccess({ products })\n          })\n        );\n      }),\n    )\n  })\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { Store } from \"@ngrx/store\";\nimport { from, map, tap } from \"rxjs\";\nimport { filter, switchMap } from 'rxjs/operators';\n\nimport { CartService } from \"src/app/features/client/services/cart.service\";\nimport { addProductToCart, getUserCart, getUserCartSuccess, removeProductFromCart } from \"../actions/user.actions\";\nimport { AppState } from \"../state/app.state\";\nimport { isFetching } from \"../actions/common.actions\";\n\n@Injectable()\nexport class UserEffects {\n  constructor(\n    private readonly actions$: Actions,\n    private readonly cartService: CartService,\n    private readonly store: Store<AppState>,\n  ) { }\n\n  public getCart$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(getUserCart),\n      tap(() => {\n        this.store.dispatch(\n          isFetching({ isFetching: true })\n        )\n      }),\n      switchMap(() => {\n        return from(this.cartService.getCart()).pipe(\n          tap(() => {\n            this.store.dispatch(\n              isFetching({ isFetching: false })\n            )\n          }),\n          \n        )\n      }),\n      filter(Boolean),\n      switchMap((cart) => {\n        return this.cartService.getCartProducts(cart.products as string[]).pipe(\n          tap(data => console.error(data)),\n          map((data) => getUserCartSuccess({ cart: { products: data } }))\n        );\n      })\n    )\n  });\n\n  public addToCart$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(addProductToCart),\n      switchMap(({ productId }) => {\n        return from(this.cartService.addToCart(productId as string))\n          .pipe(\n            map(() => getUserCart())\n          )\n      }\n      ))\n  });\n\n  public removeFromCart$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(removeProductFromCart),\n      tap(() => {\n        this.store.dispatch(\n          isFetching({ isFetching: true })\n        )\n      }),\n      switchMap(({ productId }) => {\n        return from(this.cartService.removeFromCart(productId as string))\n          .pipe(\n            tap(() => {\n              this.store.dispatch(isFetching({ isFetching: true }))\n            }),\n            map(() => getUserCart())\n          )\n      }\n      )\n    )\n  })\n}\n","import { NgModule } from '@angular/core';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { appReducer } from './reducers/app.reducer';\nimport { AuthEffects } from './effects/auth.effects';\nimport { AdminEffects } from './effects/admin.effects';\nimport { CategoryEffects } from './effects/category.effects';\nimport { ProductEffects } from './effects/product.effects';\nimport { ExtraModuleInjector } from '../injector/injector.module';\nimport { UserEffects } from './effects/user.effects';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    StoreModule.forRoot(appReducer),\n    EffectsModule.forRoot([AuthEffects, UserEffects, AdminEffects, CategoryEffects, ProductEffects]),\n    StoreDevtoolsModule.instrument(),\n  ],\n  providers: [ExtraModuleInjector]\n})\nexport class NgRxModule { }\n","import { createReducer, on } from '@ngrx/store';\nimport { initialState } from '../state/app.state';\nimport * as AdminActions from '../actions/admin.actions';\n\nexport const adminReducer = createReducer(\n  initialState.admin,\n  on(AdminActions.getUsersSuccess, (state, { users }) => ({\n    ...state,\n    users,\n  })),\n\n  on(AdminActions.getUsersFailure, (state, { error }) => ({\n    ...state,\n    error,\n  })),\n);\n","import { Action, ActionReducerMap } from '@ngrx/store';\nimport { AppState } from '../state/app.state';\nimport { authReducer } from './auth.reducer';\nimport { adminReducer } from './admin.reducer';\nimport { userReducer } from './user.reducer';\nimport { categoryReducer } from './category.reducer';\nimport { productReducer } from './product.reducer';\n\nexport const appReducer: ActionReducerMap<AppState, any> = {\n  auth: authReducer,\n  user: userReducer,\n  admin: adminReducer,\n  category: categoryReducer,\n  product: productReducer,\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { initialState } from '../state/app.state';\nimport * as AuthActions from '../actions/auth.actions';\n\nexport const authReducer = createReducer(\n  initialState.auth,\n  on(\n    AuthActions.updateUser,\n    AuthActions.loginSuccess,\n    AuthActions.registrateSuccess,\n    (state, { user }) => ({\n    ...state,\n    user,\n    error: null,\n  })),\n\n  on(\n    AuthActions.loginFailure,\n    AuthActions.registrateFailure,\n    AuthActions.logoutFailure,\n    (state, { error }) => ({\n    ...state,\n    user: null,\n    error,\n  })),\n  \n  on(AuthActions.logoutSuccess,(state) => ({\n    ...state,\n    user: null,\n    error: null\n  })),\n\n  on(AuthActions.authIsLoading, (state, {isLoading}) => ({\n    ...state,\n    isLoading\n  }))\n);\n","import { createReducer, on } from '@ngrx/store';\nimport {\n  addCategorySuccess,\n  categoryIsLoading,\n  getCategoriesFailure,\n  getCategoriesSuccess,\n  removeCategoryFailure,\n  removeCategorySuccess,\n  updateCategoryFailure,\n  updateCategorySuccess,\n} from '../actions/category.actions';\nimport { initialState } from '../state/app.state';\n\nexport const categoryReducer = createReducer(\n  initialState.category,\n  on(getCategoriesSuccess, (state, { categories }) => ({\n    ...state,\n    categories,\n  })),\n\n  on(\n    removeCategoryFailure,\n    getCategoriesFailure,\n    updateCategoryFailure,\n    (state, { error }) => ({\n      ...state,\n      error,\n    })\n  ),\n\n  on(categoryIsLoading, (state, { isLoading }) => ({\n    ...state,\n    isLoading,\n  })),\n\n  on(addCategorySuccess, (state, { category }) => ({\n    ...state,\n    categories: [...state.categories, category],\n  })),\n\n  on(updateCategorySuccess, (state, { categoryName, categoryId }) => ({\n    ...state,\n    categories: state.categories.map((category) => {\n      return category.id === categoryId\n        ? {\n          ...category,\n          name: categoryName,\n        }\n        : category;\n    }),\n  })),\n\n  on(removeCategorySuccess, (state, { categoryId }) => ({\n    ...state,\n    categories: [\n      ...state.categories.filter((category) => category.id !== categoryId),\n    ],\n  }))\n);\n","import { createReducer, on } from '@ngrx/store';\nimport { initialState } from '../state/app.state';\nimport * as ProductActions from '../actions/product.action';\n\nexport const productReducer = createReducer(\n  initialState.product,\n  on(\n    ProductActions.getProductsFailure,\n    ProductActions.addProductFailure,\n    ProductActions.removeProductFailure,\n    ProductActions.updateProductFailure,\n    (state, { error }) => ({\n      ...state,\n      error,\n    })\n  ),\n\n  on(ProductActions.getProductsSuccess,\n    ProductActions.getProductsByCategorySuccess,\n    (state, { products }) => ({\n      ...state,\n      products,\n    })),\n\n  on(ProductActions.addProductSuccess, (state, { product }) => ({\n    ...state,\n    products: [...state.products, product],\n  })),\n\n  on(ProductActions.removeProductSuccess, (state, { productId }) => ({\n    ...state,\n    products: state.products.filter((product) => product.id !== productId),\n  })),\n\n  on(ProductActions.updateProductSuccess, (state, { product }) => ({\n    ...state,\n    products: state.products.map((prod) => {\n      return prod.id === product.id\n        ? {\n          ...product,\n        }\n        : prod;\n    }),\n  })),\n\n  on(ProductActions.productIsLoading, (state, { isLoading }) => ({\n    ...state,\n    isLoading,\n  }))\n);\n","import { createReducer, on } from '@ngrx/store';\nimport { initialState } from '../state/app.state';\nimport { getUserCartSuccess } from '../actions/user.actions';\n\nexport const userReducer = createReducer(\n  initialState.user,\n  on(getUserCartSuccess, (state, { cart }) => ({\n    ...state,\n    cart,\n  })),\n);\n","import { createSelector } from \"@ngrx/store\";\nimport { AppState } from \"../state/app.state\";\nimport { IAuthState } from \"../state/auth.state\";\n\nconst selectFeature = (state: AppState) => state.auth;\n \nexport const selectUser = createSelector(\n  selectFeature,\n  (state: IAuthState) => state.user\n);\n\nexport const selectUserId = createSelector(\n  selectFeature,\n  (state: IAuthState) => state.user?.id\n)\n\nexport const selectError = createSelector(\n  selectFeature,\n  (state: IAuthState) => state.error\n);\n\nexport const selectAuthIsLoading = createSelector(\n  selectFeature,\n  (state: IAuthState) => state.isLoading\n);\n\nexport const selectUserRole = createSelector(\n  selectFeature,\n  (state: IAuthState) => {\n    return state.user?.role\n  }\n);\n","import { FirebaseError } from \"firebase/app\";\n\nimport { User } from \"../../models\";\n\nexport interface AdminState {\n  users: User[];\n  error: FirebaseError | null;\n}\n\nexport const initialAdminState: AdminState = {\n  users: [],\n  error: null,\n}\n","import { Order } from '../../models';\nimport { initialAuthState, IAuthState } from './auth.state';\nimport { ICategoryState, initialCategoryState } from './category.state';\nimport { initialProductState, IProductState } from './product.state';\nimport { initialAdminState, AdminState } from './admin.state';\nimport { initialUserState, UserState } from './user.state';\n\nexport interface AppState {\n  auth: IAuthState;\n  user: UserState;\n  admin: AdminState;\n  product: IProductState;\n  category: ICategoryState;\n  order?: Order[];\n}\n\nexport const initialState: AppState = {\n  auth: initialAuthState,\n  user: initialUserState,\n  admin: initialAdminState,\n  product: initialProductState,\n  category: initialCategoryState,\n};\n","import { User } from '../../models';\nimport { FirebaseError } from 'firebase/app';\n\nexport interface IAuthState {\n  user: User | null;\n  error: FirebaseError | null;\n  isLoading: boolean;\n}\n\nconst setInitialState = () => {\n  const data = localStorage.getItem('user');\n  return  data ? JSON.parse(data) : null\n}\n\nexport const initialAuthState = {\n  user: setInitialState(),\n  error: null,\n  isLoading: false,\n};\n","import { FirebaseError } from \"firebase/app\";\nimport { Category } from \"../../models\";\n\nexport interface ICategoryState {\n  categories: Category[];\n  error: FirebaseError | null;\n  isLoading: boolean;\n}\n\nexport const initialCategoryState = {\n  categories: [],\n  error: null,\n  isLoading: false,\n}\n","import { FirebaseError } from \"firebase/app\";\nimport { Product } from \"../../models\";\n\nexport interface IProductState {\n  products: Product[];\n  error: FirebaseError | null;\n  isLoading: boolean;\n}\n\nexport const initialProductState = {\n  products: [],\n  error: null,\n  isLoading: false,\n}\n","import { Cart } from \"../../models\";\n\nexport interface UserState {\n    cart: Cart | null;\n  }\n  \n  export const initialUserState: UserState = {\n    cart: null,\n  }\n  ","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/compat/firestore';\nimport { Category } from 'src/app/core/models';\n\n@Injectable()\nexport class CategoryService {\n  private categoryRef: AngularFirestoreCollection<Category>;\n\n  constructor(private readonly firestore: AngularFirestore) {\n    this.categoryRef = this.firestore.collection('/categories');\n  }\n\n  public getCategories(): AngularFirestoreCollection<Category> {\n    return this.categoryRef;\n  }\n\n  public async addCategory(name: string): Promise<Category> {\n    const res = await this.categoryRef.add({ name: name, createdAt: Date.now() });\n\n    return new Promise((resolve, reject) => {\n      res.onSnapshot((cat) => {\n        if (cat.exists) {\n          resolve({ ...cat.data(), id: cat.id } as Category);\n        } else { reject('Somethig went wrong') }\n      })\n    });\n  }\n\n  public removeCategory(categoryId: string): Promise<void> {\n    return this.categoryRef.doc(categoryId).delete();\n  }\n\n  public updateCategory(categoryName: string, categoryId: string): Promise<void> {\n    return this.categoryRef.doc(categoryId).update({ name: categoryName })\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/compat/firestore';\nimport { Observable, from } from 'rxjs';\n\nimport { Product } from 'src/app/core/models';\n\n@Injectable()\nexport class ProductService {\n  productRef: AngularFirestoreCollection<Product>;\n  constructor(private readonly firestore: AngularFirestore) {\n    this.productRef = this.firestore.collection('/products');\n  }\n\n  public getProducts(): AngularFirestoreCollection<Product> {\n    return this.productRef;\n  }\n\n  public async addProduct(product: Product): Promise<Product> {\n    const res = await this.productRef.add({ ...product, createdAt: Date.now() });\n    return new Promise((resolve, reject) => {\n      res.onSnapshot((prod) => {\n        if (prod.exists) {\n          resolve({ id: prod.id, ...prod.data() } as Product);\n        } else {\n          reject('Somethig went wrong');\n        }\n      })\n    });\n  }\n\n  public updateProduct(product: Product): Promise<void> {\n    return this.productRef.doc(product.id).update(product);\n  }\n\n  public removeProduct(productId: string): Promise<void> {\n    return this.productRef.doc(productId).delete();\n  }\n\n  public getProductsByCategory(categoryId: string): Observable<Product[]> {\n    return from(this.productRef.ref.where('categoryId', '==', categoryId).get().then((data) => {\n      return data.docChanges().map((data) => ({ id: data.doc.id, ...data.doc.data() }))\n    }));\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection,\n} from '@angular/fire/compat/firestore';\nimport firebase from 'firebase/compat/app';\n\nimport { Cart, Product } from 'src/app/core/models';\nimport { selectUserId } from 'src/app/core/store/selectors/auth.selector';\nimport { AppState } from 'src/app/core/store/state/app.state';\nimport { Observable, combineLatest, map, tap } from 'rxjs';\n\n@Injectable()\nexport class CartService {\n  private cartRef: AngularFirestoreCollection<Cart>;\n  private cartId: string | undefined;\n  private productRef: AngularFirestoreCollection<Product[]>;\n\n  constructor(\n    private firestore: AngularFirestore,\n    private store: Store<AppState>\n  ) {\n    this.getCartRef();\n    this.getCartId();\n    this.getProductRef();\n  }\n\n  private getCartRef(): void {\n    this.cartRef = this.firestore.collection('/cart');\n  }\n\n  private getProductRef(): void {\n    this.productRef = this.firestore.collection('/products');\n  }\n\n  private getCartId(): void {\n    this.store.select(selectUserId).subscribe((id) => (this.cartId = id));\n  }\n\n  public getCart(): Observable<Cart | undefined> {\n    return this.cartRef.doc(this.cartId).valueChanges();\n  }\n\n  public addToCart(productId: string): Promise<void> {\n    return this.cartRef.doc(this.cartId)\n      .update({ products: firebase.firestore.FieldValue.arrayUnion(productId) });\n  }\n\n  public removeFromCart(productId: string): Promise<void> {\n    return this.cartRef.doc(this.cartId)\n      .update({ products: firebase.firestore.FieldValue.arrayRemove(productId) });\n  }\n\n  //TODO to avoid useless request\n  public getCartProducts(productIds: string[]): Observable<Product[]> {\n    const productObservables = productIds.map(productId => {\n      const productDoc = this.firestore.collection('products').doc(productId);\n      return productDoc.get().pipe(map(snapshot => ({ id: snapshot.id, ...snapshot.data() as Product })));\n    });\n\n    return combineLatest(productObservables);\n  }\n}\n","\n export const environment = {\n  production: false,\n  FIREBASE_API_KEY: \"AIzaSyC0IJRhoZLVFiq5J6zWJlr_GY2LSxcw5Mc\",\n  FIREBASE_AUTH_DOMAIN: \"web-music-store.firebaseapp.com\",\n  FIREBASE_PROTECTED_ID: \"web-music-store\",\n  FIREBASE_STORAGE_BUCKET: \"web-music-store.appspot.com\",\n  FIREBASE_MESSAGING_SENDER_ID: \"470913716116\",\n  FIREBASE_APP_ID: \"1:470913716116:web:e13c38b08f11be54e58981\",\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}